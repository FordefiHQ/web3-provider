/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateMpcSetupCallbackResponse
 */
export interface CreateMpcSetupCallbackResponse {
    /**
     * 
     * @type {string}
     * @memberof CreateMpcSetupCallbackResponse
     */
    type: CreateMpcSetupCallbackResponseTypeEnum;
}


/**
 * @export
 */
export const CreateMpcSetupCallbackResponseTypeEnum = {
    createMpcSetup: 'create_mpc_setup'
} as const;
export type CreateMpcSetupCallbackResponseTypeEnum = typeof CreateMpcSetupCallbackResponseTypeEnum[keyof typeof CreateMpcSetupCallbackResponseTypeEnum];


/**
 * Check if a given object implements the CreateMpcSetupCallbackResponse interface.
 */
export function instanceOfCreateMpcSetupCallbackResponse(value: object): value is CreateMpcSetupCallbackResponse {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CreateMpcSetupCallbackResponseFromJSON(json: any): CreateMpcSetupCallbackResponse {
    return CreateMpcSetupCallbackResponseFromJSONTyped(json, false);
}

export function CreateMpcSetupCallbackResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMpcSetupCallbackResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
    };
}

export function CreateMpcSetupCallbackResponseToJSON(json: any): CreateMpcSetupCallbackResponse {
    return CreateMpcSetupCallbackResponseToJSONTyped(json, false);
}

export function CreateMpcSetupCallbackResponseToJSONTyped(value?: CreateMpcSetupCallbackResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
    };
}

