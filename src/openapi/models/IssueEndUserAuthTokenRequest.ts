/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IssueEndUserAuthTokenRequest
 */
export interface IssueEndUserAuthTokenRequest {
    /**
     * 
     * @type {string}
     * @memberof IssueEndUserAuthTokenRequest
     */
    userType: IssueEndUserAuthTokenRequestUserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof IssueEndUserAuthTokenRequest
     */
    userId: string;
    /**
     * 
     * @type {number}
     * @memberof IssueEndUserAuthTokenRequest
     */
    expiration?: number;
}


/**
 * @export
 */
export const IssueEndUserAuthTokenRequestUserTypeEnum = {
    endUser: 'end_user'
} as const;
export type IssueEndUserAuthTokenRequestUserTypeEnum = typeof IssueEndUserAuthTokenRequestUserTypeEnum[keyof typeof IssueEndUserAuthTokenRequestUserTypeEnum];


/**
 * Check if a given object implements the IssueEndUserAuthTokenRequest interface.
 */
export function instanceOfIssueEndUserAuthTokenRequest(value: object): value is IssueEndUserAuthTokenRequest {
    if (!('userType' in value) || value['userType'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function IssueEndUserAuthTokenRequestFromJSON(json: any): IssueEndUserAuthTokenRequest {
    return IssueEndUserAuthTokenRequestFromJSONTyped(json, false);
}

export function IssueEndUserAuthTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): IssueEndUserAuthTokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'userType': json['user_type'],
        'userId': json['user_id'],
        'expiration': json['expiration'] == null ? undefined : json['expiration'],
    };
}

export function IssueEndUserAuthTokenRequestToJSON(json: any): IssueEndUserAuthTokenRequest {
    return IssueEndUserAuthTokenRequestToJSONTyped(json, false);
}

export function IssueEndUserAuthTokenRequestToJSONTyped(value?: IssueEndUserAuthTokenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_type': value['userType'],
        'user_id': value['userId'],
        'expiration': value['expiration'],
    };
}

