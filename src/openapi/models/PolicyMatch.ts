/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionPolicyMatchActionType } from './TransactionPolicyMatchActionType';
import {
    TransactionPolicyMatchActionTypeFromJSON,
    TransactionPolicyMatchActionTypeFromJSONTyped,
    TransactionPolicyMatchActionTypeToJSON,
    TransactionPolicyMatchActionTypeToJSONTyped,
} from './TransactionPolicyMatchActionType';

/**
 * 
 * @export
 * @interface PolicyMatch
 */
export interface PolicyMatch {
    /**
     * 
     * @type {boolean}
     * @memberof PolicyMatch
     */
    isDefault: boolean;
    /**
     * 
     * @type {string}
     * @memberof PolicyMatch
     */
    ruleId: string;
    /**
     * 
     * @type {string}
     * @memberof PolicyMatch
     */
    ruleName: string;
    /**
     * 
     * @type {TransactionPolicyMatchActionType}
     * @memberof PolicyMatch
     */
    actionType: TransactionPolicyMatchActionType;
}



/**
 * Check if a given object implements the PolicyMatch interface.
 */
export function instanceOfPolicyMatch(value: object): value is PolicyMatch {
    if (!('isDefault' in value) || value['isDefault'] === undefined) return false;
    if (!('ruleId' in value) || value['ruleId'] === undefined) return false;
    if (!('ruleName' in value) || value['ruleName'] === undefined) return false;
    if (!('actionType' in value) || value['actionType'] === undefined) return false;
    return true;
}

export function PolicyMatchFromJSON(json: any): PolicyMatch {
    return PolicyMatchFromJSONTyped(json, false);
}

export function PolicyMatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyMatch {
    if (json == null) {
        return json;
    }
    return {
        
        'isDefault': json['is_default'],
        'ruleId': json['rule_id'],
        'ruleName': json['rule_name'],
        'actionType': TransactionPolicyMatchActionTypeFromJSON(json['action_type']),
    };
}

export function PolicyMatchToJSON(json: any): PolicyMatch {
    return PolicyMatchToJSONTyped(json, false);
}

export function PolicyMatchToJSONTyped(value?: PolicyMatch | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_default': value['isDefault'],
        'rule_id': value['ruleId'],
        'rule_name': value['ruleName'],
        'action_type': TransactionPolicyMatchActionTypeToJSON(value['actionType']),
    };
}

