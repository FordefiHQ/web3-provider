/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValidationErrorDetailLocInner } from './ValidationErrorDetailLocInner';
import {
    ValidationErrorDetailLocInnerFromJSON,
    ValidationErrorDetailLocInnerFromJSONTyped,
    ValidationErrorDetailLocInnerToJSON,
    ValidationErrorDetailLocInnerToJSONTyped,
} from './ValidationErrorDetailLocInner';

/**
 * 
 * @export
 * @interface ValidationErrorDetail
 */
export interface ValidationErrorDetail {
    /**
     * 
     * @type {Array<ValidationErrorDetailLocInner>}
     * @memberof ValidationErrorDetail
     */
    loc: Array<ValidationErrorDetailLocInner>;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorDetail
     */
    msg: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorDetail
     */
    type: string;
}

/**
 * Check if a given object implements the ValidationErrorDetail interface.
 */
export function instanceOfValidationErrorDetail(value: object): value is ValidationErrorDetail {
    if (!('loc' in value) || value['loc'] === undefined) return false;
    if (!('msg' in value) || value['msg'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ValidationErrorDetailFromJSON(json: any): ValidationErrorDetail {
    return ValidationErrorDetailFromJSONTyped(json, false);
}

export function ValidationErrorDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationErrorDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'loc': ((json['loc'] as Array<any>).map(ValidationErrorDetailLocInnerFromJSON)),
        'msg': json['msg'],
        'type': json['type'],
    };
}

export function ValidationErrorDetailToJSON(json: any): ValidationErrorDetail {
    return ValidationErrorDetailToJSONTyped(json, false);
}

export function ValidationErrorDetailToJSONTyped(value?: ValidationErrorDetail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'loc': ((value['loc'] as Array<any>).map(ValidationErrorDetailLocInnerToJSON)),
        'msg': value['msg'],
        'type': value['type'],
    };
}

