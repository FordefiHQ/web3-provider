/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedAptosChain } from './EnrichedAptosChain';
import {
    EnrichedAptosChainFromJSON,
    EnrichedAptosChainFromJSONTyped,
    EnrichedAptosChainToJSON,
    EnrichedAptosChainToJSONTyped,
} from './EnrichedAptosChain';
import type { AmlPolicyMatchOutgoing } from './AmlPolicyMatchOutgoing';
import {
    AmlPolicyMatchOutgoingFromJSON,
    AmlPolicyMatchOutgoingFromJSONTyped,
    AmlPolicyMatchOutgoingToJSON,
    AmlPolicyMatchOutgoingToJSONTyped,
} from './AmlPolicyMatchOutgoing';
import type { TransactionRisk } from './TransactionRisk';
import {
    TransactionRiskFromJSON,
    TransactionRiskFromJSONTyped,
    TransactionRiskToJSON,
    TransactionRiskToJSONTyped,
} from './TransactionRisk';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { EnrichedAptosAddress } from './EnrichedAptosAddress';
import {
    EnrichedAptosAddressFromJSON,
    EnrichedAptosAddressFromJSONTyped,
    EnrichedAptosAddressToJSON,
    EnrichedAptosAddressToJSONTyped,
} from './EnrichedAptosAddress';
import type { AptosMessageType } from './AptosMessageType';
import {
    AptosMessageTypeFromJSON,
    AptosMessageTypeFromJSONTyped,
    AptosMessageTypeToJSON,
    AptosMessageTypeToJSONTyped,
} from './AptosMessageType';
import type { PolicyMatch } from './PolicyMatch';
import {
    PolicyMatchFromJSON,
    PolicyMatchFromJSONTyped,
    PolicyMatchToJSON,
    PolicyMatchToJSONTyped,
} from './PolicyMatch';

/**
 * 
 * @export
 * @interface PredictedAptosMessage
 */
export interface PredictedAptosMessage {
    /**
     * 
     * @type {AmlPolicyMatchOutgoing}
     * @memberof PredictedAptosMessage
     */
    amlPolicyMatch?: AmlPolicyMatchOutgoing;
    /**
     * 
     * @type {PolicyMatch}
     * @memberof PredictedAptosMessage
     */
    policyMatch: PolicyMatch;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof PredictedAptosMessage
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {Array<TransactionRisk>}
     * @memberof PredictedAptosMessage
     */
    risks: Array<TransactionRisk>;
    /**
     * 
     * @type {string}
     * @memberof PredictedAptosMessage
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof PredictedAptosMessage
     */
    type: PredictedAptosMessageTypeEnum;
    /**
     * 
     * @type {EnrichedAptosChain}
     * @memberof PredictedAptosMessage
     */
    chain: EnrichedAptosChain;
    /**
     * 
     * @type {EnrichedAptosAddress}
     * @memberof PredictedAptosMessage
     */
    sender: EnrichedAptosAddress;
    /**
     * 
     * @type {AptosMessageType}
     * @memberof PredictedAptosMessage
     */
    aptosMessageType: AptosMessageType;
    /**
     * 
     * @type {string}
     * @memberof PredictedAptosMessage
     */
    messageToDisplay: string;
}


/**
 * @export
 */
export const PredictedAptosMessageTypeEnum = {
    aptosMessage: 'aptos_message'
} as const;
export type PredictedAptosMessageTypeEnum = typeof PredictedAptosMessageTypeEnum[keyof typeof PredictedAptosMessageTypeEnum];


/**
 * Check if a given object implements the PredictedAptosMessage interface.
 */
export function instanceOfPredictedAptosMessage(value: object): value is PredictedAptosMessage {
    if (!('policyMatch' in value) || value['policyMatch'] === undefined) return false;
    if (!('risks' in value) || value['risks'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('aptosMessageType' in value) || value['aptosMessageType'] === undefined) return false;
    if (!('messageToDisplay' in value) || value['messageToDisplay'] === undefined) return false;
    return true;
}

export function PredictedAptosMessageFromJSON(json: any): PredictedAptosMessage {
    return PredictedAptosMessageFromJSONTyped(json, false);
}

export function PredictedAptosMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedAptosMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'amlPolicyMatch': json['aml_policy_match'] == null ? undefined : AmlPolicyMatchOutgoingFromJSON(json['aml_policy_match']),
        'policyMatch': PolicyMatchFromJSON(json['policy_match']),
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'risks': ((json['risks'] as Array<any>).map(TransactionRiskFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'type': json['type'],
        'chain': EnrichedAptosChainFromJSON(json['chain']),
        'sender': EnrichedAptosAddressFromJSON(json['sender']),
        'aptosMessageType': AptosMessageTypeFromJSON(json['aptos_message_type']),
        'messageToDisplay': json['message_to_display'],
    };
}

export function PredictedAptosMessageToJSON(json: any): PredictedAptosMessage {
    return PredictedAptosMessageToJSONTyped(json, false);
}

export function PredictedAptosMessageToJSONTyped(value?: PredictedAptosMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aml_policy_match': AmlPolicyMatchOutgoingToJSON(value['amlPolicyMatch']),
        'policy_match': PolicyMatchToJSON(value['policyMatch']),
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'risks': ((value['risks'] as Array<any>).map(TransactionRiskToJSON)),
        'note': value['note'],
        'type': value['type'],
        'chain': EnrichedAptosChainToJSON(value['chain']),
        'sender': EnrichedAptosAddressToJSON(value['sender']),
        'aptos_message_type': AptosMessageTypeToJSON(value['aptosMessageType']),
        'message_to_display': value['messageToDisplay'],
    };
}

