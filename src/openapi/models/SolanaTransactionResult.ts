/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SolanaReversion } from './SolanaReversion';
import {
    SolanaReversionFromJSON,
    SolanaReversionFromJSONTyped,
    SolanaReversionToJSON,
    SolanaReversionToJSONTyped,
} from './SolanaReversion';
import type { SolanaFee } from './SolanaFee';
import {
    SolanaFeeFromJSON,
    SolanaFeeFromJSONTyped,
    SolanaFeeToJSON,
    SolanaFeeToJSONTyped,
} from './SolanaFee';
import type { InstructionError } from './InstructionError';
import {
    InstructionErrorFromJSON,
    InstructionErrorFromJSONTyped,
    InstructionErrorToJSON,
    InstructionErrorToJSONTyped,
} from './InstructionError';
import type { SolanaEffects } from './SolanaEffects';
import {
    SolanaEffectsFromJSON,
    SolanaEffectsFromJSONTyped,
    SolanaEffectsToJSON,
    SolanaEffectsToJSONTyped,
} from './SolanaEffects';

/**
 * 
 * @export
 * @interface SolanaTransactionResult
 */
export interface SolanaTransactionResult {
    /**
     * 
     * @type {SolanaReversion}
     * @memberof SolanaTransactionResult
     */
    reversion: SolanaReversion;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransactionResult
     */
    transactionError?: string;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransactionResult
     * @deprecated
     */
    fee: string;
    /**
     * 
     * @type {SolanaFee}
     * @memberof SolanaTransactionResult
     */
    enrichedFee: SolanaFee;
    /**
     * 
     * @type {SolanaEffects}
     * @memberof SolanaTransactionResult
     */
    effects: SolanaEffects;
    /**
     * 
     * @type {InstructionError}
     * @memberof SolanaTransactionResult
     */
    instructionError?: InstructionError;
}

/**
 * Check if a given object implements the SolanaTransactionResult interface.
 */
export function instanceOfSolanaTransactionResult(value: object): value is SolanaTransactionResult {
    if (!('reversion' in value) || value['reversion'] === undefined) return false;
    if (!('fee' in value) || value['fee'] === undefined) return false;
    if (!('enrichedFee' in value) || value['enrichedFee'] === undefined) return false;
    if (!('effects' in value) || value['effects'] === undefined) return false;
    return true;
}

export function SolanaTransactionResultFromJSON(json: any): SolanaTransactionResult {
    return SolanaTransactionResultFromJSONTyped(json, false);
}

export function SolanaTransactionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolanaTransactionResult {
    if (json == null) {
        return json;
    }
    return {
        
        'reversion': SolanaReversionFromJSON(json['reversion']),
        'transactionError': json['transaction_error'] == null ? undefined : json['transaction_error'],
        'fee': json['fee'],
        'enrichedFee': SolanaFeeFromJSON(json['enriched_fee']),
        'effects': SolanaEffectsFromJSON(json['effects']),
        'instructionError': json['instruction_error'] == null ? undefined : InstructionErrorFromJSON(json['instruction_error']),
    };
}

export function SolanaTransactionResultToJSON(json: any): SolanaTransactionResult {
    return SolanaTransactionResultToJSONTyped(json, false);
}

export function SolanaTransactionResultToJSONTyped(value?: SolanaTransactionResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reversion': SolanaReversionToJSON(value['reversion']),
        'transaction_error': value['transactionError'],
        'fee': value['fee'],
        'enriched_fee': SolanaFeeToJSON(value['enrichedFee']),
        'effects': SolanaEffectsToJSON(value['effects']),
        'instruction_error': InstructionErrorToJSON(value['instructionError']),
    };
}

