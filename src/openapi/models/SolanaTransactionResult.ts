/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstructionError } from './InstructionError';
import {
    InstructionErrorFromJSON,
    InstructionErrorFromJSONTyped,
    InstructionErrorToJSON,
} from './InstructionError';
import type { SolanaEffects } from './SolanaEffects';
import {
    SolanaEffectsFromJSON,
    SolanaEffectsFromJSONTyped,
    SolanaEffectsToJSON,
} from './SolanaEffects';
import type { SolanaFee } from './SolanaFee';
import {
    SolanaFeeFromJSON,
    SolanaFeeFromJSONTyped,
    SolanaFeeToJSON,
} from './SolanaFee';
import type { SolanaReversion } from './SolanaReversion';
import {
    SolanaReversionFromJSON,
    SolanaReversionFromJSONTyped,
    SolanaReversionToJSON,
} from './SolanaReversion';

/**
 * 
 * @export
 * @interface SolanaTransactionResult
 */
export interface SolanaTransactionResult {
    /**
     * 
     * @type {SolanaReversion}
     * @memberof SolanaTransactionResult
     */
    reversion: SolanaReversion;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransactionResult
     */
    transactionError?: string;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransactionResult
     * @deprecated
     */
    fee: string;
    /**
     * 
     * @type {SolanaFee}
     * @memberof SolanaTransactionResult
     */
    enrichedFee: SolanaFee;
    /**
     * 
     * @type {SolanaEffects}
     * @memberof SolanaTransactionResult
     */
    effects: SolanaEffects;
    /**
     * 
     * @type {InstructionError}
     * @memberof SolanaTransactionResult
     */
    instructionError?: InstructionError;
}

/**
 * Check if a given object implements the SolanaTransactionResult interface.
 */
export function instanceOfSolanaTransactionResult(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "reversion" in value;
    isInstance = isInstance && "fee" in value;
    isInstance = isInstance && "enrichedFee" in value;
    isInstance = isInstance && "effects" in value;

    return isInstance;
}

export function SolanaTransactionResultFromJSON(json: any): SolanaTransactionResult {
    return SolanaTransactionResultFromJSONTyped(json, false);
}

export function SolanaTransactionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolanaTransactionResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reversion': SolanaReversionFromJSON(json['reversion']),
        'transactionError': !exists(json, 'transaction_error') ? undefined : json['transaction_error'],
        'fee': json['fee'],
        'enrichedFee': SolanaFeeFromJSON(json['enriched_fee']),
        'effects': SolanaEffectsFromJSON(json['effects']),
        'instructionError': !exists(json, 'instruction_error') ? undefined : InstructionErrorFromJSON(json['instruction_error']),
    };
}

export function SolanaTransactionResultToJSON(value?: SolanaTransactionResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reversion': SolanaReversionToJSON(value.reversion),
        'transaction_error': value.transactionError,
        'fee': value.fee,
        'enriched_fee': SolanaFeeToJSON(value.enrichedFee),
        'effects': SolanaEffectsToJSON(value.effects),
        'instruction_error': InstructionErrorToJSON(value.instructionError),
    };
}

