/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IssueAuthTokenForClientOauthResponse
 */
export interface IssueAuthTokenForClientOauthResponse {
    /**
     * 
     * @type {string}
     * @memberof IssueAuthTokenForClientOauthResponse
     */
    accessToken: string;
    /**
     * 
     * @type {string}
     * @memberof IssueAuthTokenForClientOauthResponse
     */
    tokenType: string;
    /**
     * 
     * @type {number}
     * @memberof IssueAuthTokenForClientOauthResponse
     */
    expiresIn: number;
}

/**
 * Check if a given object implements the IssueAuthTokenForClientOauthResponse interface.
 */
export function instanceOfIssueAuthTokenForClientOauthResponse(value: object): value is IssueAuthTokenForClientOauthResponse {
    if (!('accessToken' in value) || value['accessToken'] === undefined) return false;
    if (!('tokenType' in value) || value['tokenType'] === undefined) return false;
    if (!('expiresIn' in value) || value['expiresIn'] === undefined) return false;
    return true;
}

export function IssueAuthTokenForClientOauthResponseFromJSON(json: any): IssueAuthTokenForClientOauthResponse {
    return IssueAuthTokenForClientOauthResponseFromJSONTyped(json, false);
}

export function IssueAuthTokenForClientOauthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IssueAuthTokenForClientOauthResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'accessToken': json['access_token'],
        'tokenType': json['token_type'],
        'expiresIn': json['expires_in'],
    };
}

export function IssueAuthTokenForClientOauthResponseToJSON(json: any): IssueAuthTokenForClientOauthResponse {
    return IssueAuthTokenForClientOauthResponseToJSONTyped(json, false);
}

export function IssueAuthTokenForClientOauthResponseToJSONTyped(value?: IssueAuthTokenForClientOauthResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_token': value['accessToken'],
        'token_type': value['tokenType'],
        'expires_in': value['expiresIn'],
    };
}

