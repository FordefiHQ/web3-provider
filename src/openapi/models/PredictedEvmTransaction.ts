/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EvmSuggestedFees } from './EvmSuggestedFees';
import {
    EvmSuggestedFeesFromJSON,
    EvmSuggestedFeesFromJSONTyped,
    EvmSuggestedFeesToJSON,
    EvmSuggestedFeesToJSONTyped,
} from './EvmSuggestedFees';
import type { EvmTransactionResult } from './EvmTransactionResult';
import {
    EvmTransactionResultFromJSON,
    EvmTransactionResultFromJSONTyped,
    EvmTransactionResultToJSON,
    EvmTransactionResultToJSONTyped,
} from './EvmTransactionResult';
import type { AmlPolicyMatchOutgoing } from './AmlPolicyMatchOutgoing';
import {
    AmlPolicyMatchOutgoingFromJSON,
    AmlPolicyMatchOutgoingFromJSONTyped,
    AmlPolicyMatchOutgoingToJSON,
    AmlPolicyMatchOutgoingToJSONTyped,
} from './AmlPolicyMatchOutgoing';
import type { EvmTransactionGasSubmitted } from './EvmTransactionGasSubmitted';
import {
    EvmTransactionGasSubmittedFromJSON,
    EvmTransactionGasSubmittedFromJSONTyped,
    EvmTransactionGasSubmittedToJSON,
    EvmTransactionGasSubmittedToJSONTyped,
} from './EvmTransactionGasSubmitted';
import type { EvmTransactionParsedData } from './EvmTransactionParsedData';
import {
    EvmTransactionParsedDataFromJSON,
    EvmTransactionParsedDataFromJSONTyped,
    EvmTransactionParsedDataToJSON,
    EvmTransactionParsedDataToJSONTyped,
} from './EvmTransactionParsedData';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { EnrichedEvmAddress } from './EnrichedEvmAddress';
import {
    EnrichedEvmAddressFromJSON,
    EnrichedEvmAddressFromJSONTyped,
    EnrichedEvmAddressToJSON,
    EnrichedEvmAddressToJSONTyped,
} from './EnrichedEvmAddress';
import type { PolicyMatch } from './PolicyMatch';
import {
    PolicyMatchFromJSON,
    PolicyMatchFromJSONTyped,
    PolicyMatchToJSON,
    PolicyMatchToJSONTyped,
} from './PolicyMatch';
import type { TransactionRisk } from './TransactionRisk';
import {
    TransactionRiskFromJSON,
    TransactionRiskFromJSONTyped,
    TransactionRiskToJSON,
    TransactionRiskToJSONTyped,
} from './TransactionRisk';
import type { EnrichedEvmChain } from './EnrichedEvmChain';
import {
    EnrichedEvmChainFromJSON,
    EnrichedEvmChainFromJSONTyped,
    EnrichedEvmChainToJSON,
    EnrichedEvmChainToJSONTyped,
} from './EnrichedEvmChain';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
    SimulationStatusResultToJSONTyped,
} from './SimulationStatusResult';
import type { EvmTransactionEvmTransactionTypeDetails } from './EvmTransactionEvmTransactionTypeDetails';
import {
    EvmTransactionEvmTransactionTypeDetailsFromJSON,
    EvmTransactionEvmTransactionTypeDetailsFromJSONTyped,
    EvmTransactionEvmTransactionTypeDetailsToJSON,
    EvmTransactionEvmTransactionTypeDetailsToJSONTyped,
} from './EvmTransactionEvmTransactionTypeDetails';
import type { EvmGasEstimation } from './EvmGasEstimation';
import {
    EvmGasEstimationFromJSON,
    EvmGasEstimationFromJSONTyped,
    EvmGasEstimationToJSON,
    EvmGasEstimationToJSONTyped,
} from './EvmGasEstimation';
import type { AmlResults } from './AmlResults';
import {
    AmlResultsFromJSON,
    AmlResultsFromJSONTyped,
    AmlResultsToJSON,
    AmlResultsToJSONTyped,
} from './AmlResults';

/**
 * 
 * @export
 * @interface PredictedEvmTransaction
 */
export interface PredictedEvmTransaction {
    /**
     * 
     * @type {AmlPolicyMatchOutgoing}
     * @memberof PredictedEvmTransaction
     */
    amlPolicyMatch?: AmlPolicyMatchOutgoing;
    /**
     * 
     * @type {PolicyMatch}
     * @memberof PredictedEvmTransaction
     */
    policyMatch: PolicyMatch;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof PredictedEvmTransaction
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {Array<TransactionRisk>}
     * @memberof PredictedEvmTransaction
     */
    risks: Array<TransactionRisk>;
    /**
     * 
     * @type {string}
     * @memberof PredictedEvmTransaction
     */
    note?: string;
    /**
     * 
     * @type {AmlResults}
     * @memberof PredictedEvmTransaction
     */
    amlResults?: AmlResults;
    /**
     * 
     * @type {string}
     * @memberof PredictedEvmTransaction
     */
    type: PredictedEvmTransactionTypeEnum;
    /**
     * 
     * @type {EvmTransactionResult}
     * @memberof PredictedEvmTransaction
     */
    expectedResult: EvmTransactionResult;
    /**
     * 
     * @type {EnrichedEvmChain}
     * @memberof PredictedEvmTransaction
     */
    chain: EnrichedEvmChain;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof PredictedEvmTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {EvmTransactionEvmTransactionTypeDetails}
     * @memberof PredictedEvmTransaction
     */
    evmTransactionTypeDetails: EvmTransactionEvmTransactionTypeDetails;
    /**
     * 
     * @type {EvmTransactionParsedData}
     * @memberof PredictedEvmTransaction
     */
    parsedData: EvmTransactionParsedData;
    /**
     * 
     * @type {EvmGasEstimation}
     * @memberof PredictedEvmTransaction
     */
    gasEstimation?: EvmGasEstimation;
    /**
     * 
     * @type {EvmSuggestedFees}
     * @memberof PredictedEvmTransaction
     */
    suggestedFees: EvmSuggestedFees;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof PredictedEvmTransaction
     */
    sender: EnrichedEvmAddress;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof PredictedEvmTransaction
     */
    to: EnrichedEvmAddress;
    /**
     * 
     * @type {string}
     * @memberof PredictedEvmTransaction
     */
    hexData?: string;
    /**
     * 
     * @type {EvmTransactionGasSubmitted}
     * @memberof PredictedEvmTransaction
     */
    gasSubmitted: EvmTransactionGasSubmitted;
}


/**
 * @export
 */
export const PredictedEvmTransactionTypeEnum = {
    evmTransaction: 'evm_transaction'
} as const;
export type PredictedEvmTransactionTypeEnum = typeof PredictedEvmTransactionTypeEnum[keyof typeof PredictedEvmTransactionTypeEnum];


/**
 * Check if a given object implements the PredictedEvmTransaction interface.
 */
export function instanceOfPredictedEvmTransaction(value: object): value is PredictedEvmTransaction {
    if (!('policyMatch' in value) || value['policyMatch'] === undefined) return false;
    if (!('risks' in value) || value['risks'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('expectedResult' in value) || value['expectedResult'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('simulationStatusResult' in value) || value['simulationStatusResult'] === undefined) return false;
    if (!('evmTransactionTypeDetails' in value) || value['evmTransactionTypeDetails'] === undefined) return false;
    if (!('parsedData' in value) || value['parsedData'] === undefined) return false;
    if (!('suggestedFees' in value) || value['suggestedFees'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('gasSubmitted' in value) || value['gasSubmitted'] === undefined) return false;
    return true;
}

export function PredictedEvmTransactionFromJSON(json: any): PredictedEvmTransaction {
    return PredictedEvmTransactionFromJSONTyped(json, false);
}

export function PredictedEvmTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedEvmTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'amlPolicyMatch': json['aml_policy_match'] == null ? undefined : AmlPolicyMatchOutgoingFromJSON(json['aml_policy_match']),
        'policyMatch': PolicyMatchFromJSON(json['policy_match']),
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'risks': ((json['risks'] as Array<any>).map(TransactionRiskFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'amlResults': json['aml_results'] == null ? undefined : AmlResultsFromJSON(json['aml_results']),
        'type': json['type'],
        'expectedResult': EvmTransactionResultFromJSON(json['expected_result']),
        'chain': EnrichedEvmChainFromJSON(json['chain']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'evmTransactionTypeDetails': EvmTransactionEvmTransactionTypeDetailsFromJSON(json['evm_transaction_type_details']),
        'parsedData': EvmTransactionParsedDataFromJSON(json['parsed_data']),
        'gasEstimation': json['gas_estimation'] == null ? undefined : EvmGasEstimationFromJSON(json['gas_estimation']),
        'suggestedFees': EvmSuggestedFeesFromJSON(json['suggested_fees']),
        'sender': EnrichedEvmAddressFromJSON(json['sender']),
        'to': EnrichedEvmAddressFromJSON(json['to']),
        'hexData': json['hex_data'] == null ? undefined : json['hex_data'],
        'gasSubmitted': EvmTransactionGasSubmittedFromJSON(json['gas_submitted']),
    };
}

export function PredictedEvmTransactionToJSON(json: any): PredictedEvmTransaction {
    return PredictedEvmTransactionToJSONTyped(json, false);
}

export function PredictedEvmTransactionToJSONTyped(value?: PredictedEvmTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aml_policy_match': AmlPolicyMatchOutgoingToJSON(value['amlPolicyMatch']),
        'policy_match': PolicyMatchToJSON(value['policyMatch']),
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'risks': ((value['risks'] as Array<any>).map(TransactionRiskToJSON)),
        'note': value['note'],
        'aml_results': AmlResultsToJSON(value['amlResults']),
        'type': value['type'],
        'expected_result': EvmTransactionResultToJSON(value['expectedResult']),
        'chain': EnrichedEvmChainToJSON(value['chain']),
        'simulation_status_result': SimulationStatusResultToJSON(value['simulationStatusResult']),
        'evm_transaction_type_details': EvmTransactionEvmTransactionTypeDetailsToJSON(value['evmTransactionTypeDetails']),
        'parsed_data': EvmTransactionParsedDataToJSON(value['parsedData']),
        'gas_estimation': EvmGasEstimationToJSON(value['gasEstimation']),
        'suggested_fees': EvmSuggestedFeesToJSON(value['suggestedFees']),
        'sender': EnrichedEvmAddressToJSON(value['sender']),
        'to': EnrichedEvmAddressToJSON(value['to']),
        'hex_data': value['hexData'],
        'gas_submitted': EvmTransactionGasSubmittedToJSON(value['gasSubmitted']),
    };
}

