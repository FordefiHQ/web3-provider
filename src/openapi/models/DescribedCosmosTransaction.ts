/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosGasDebit } from './CosmosGasDebit';
import {
    CosmosGasDebitFromJSON,
    CosmosGasDebitFromJSONTyped,
    CosmosGasDebitToJSON,
} from './CosmosGasDebit';
import type { CosmosSuggestedFees } from './CosmosSuggestedFees';
import {
    CosmosSuggestedFeesFromJSON,
    CosmosSuggestedFeesFromJSONTyped,
    CosmosSuggestedFeesToJSON,
} from './CosmosSuggestedFees';
import type { CosmosTransactionTypeDetails } from './CosmosTransactionTypeDetails';
import {
    CosmosTransactionTypeDetailsFromJSON,
    CosmosTransactionTypeDetailsFromJSONTyped,
    CosmosTransactionTypeDetailsToJSON,
} from './CosmosTransactionTypeDetails';
import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
    EnrichedCosmosBechAddressFromJSONTyped,
    EnrichedCosmosBechAddressToJSON,
} from './EnrichedCosmosBechAddress';
import type { EnrichedCosmosChain } from './EnrichedCosmosChain';
import {
    EnrichedCosmosChainFromJSON,
    EnrichedCosmosChainFromJSONTyped,
    EnrichedCosmosChainToJSON,
} from './EnrichedCosmosChain';

/**
 * 
 * @export
 * @interface DescribedCosmosTransaction
 */
export interface DescribedCosmosTransaction {
    /**
     * 
     * @type {string}
     * @memberof DescribedCosmosTransaction
     */
    type: DescribedCosmosTransactionTypeEnum;
    /**
     * 
     * @type {CosmosTransactionTypeDetails}
     * @memberof DescribedCosmosTransaction
     */
    cosmosTransactionTypeDetails: CosmosTransactionTypeDetails;
    /**
     * 
     * @type {string}
     * @memberof DescribedCosmosTransaction
     */
    memo?: string;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof DescribedCosmosTransaction
     */
    sender: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {EnrichedCosmosChain}
     * @memberof DescribedCosmosTransaction
     */
    chain: EnrichedCosmosChain;
    /**
     * 
     * @type {CosmosGasDebit}
     * @memberof DescribedCosmosTransaction
     */
    gasDebit: CosmosGasDebit;
    /**
     * 
     * @type {CosmosSuggestedFees}
     * @memberof DescribedCosmosTransaction
     */
    suggestedFees: CosmosSuggestedFees;
}


/**
 * @export
 */
export const DescribedCosmosTransactionTypeEnum = {
    cosmosTransaction: 'cosmos_transaction'
} as const;
export type DescribedCosmosTransactionTypeEnum = typeof DescribedCosmosTransactionTypeEnum[keyof typeof DescribedCosmosTransactionTypeEnum];


/**
 * Check if a given object implements the DescribedCosmosTransaction interface.
 */
export function instanceOfDescribedCosmosTransaction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "cosmosTransactionTypeDetails" in value;
    isInstance = isInstance && "sender" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "gasDebit" in value;
    isInstance = isInstance && "suggestedFees" in value;

    return isInstance;
}

export function DescribedCosmosTransactionFromJSON(json: any): DescribedCosmosTransaction {
    return DescribedCosmosTransactionFromJSONTyped(json, false);
}

export function DescribedCosmosTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DescribedCosmosTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'cosmosTransactionTypeDetails': CosmosTransactionTypeDetailsFromJSON(json['cosmos_transaction_type_details']),
        'memo': !exists(json, 'memo') ? undefined : json['memo'],
        'sender': EnrichedCosmosBechAddressFromJSON(json['sender']),
        'chain': EnrichedCosmosChainFromJSON(json['chain']),
        'gasDebit': CosmosGasDebitFromJSON(json['gas_debit']),
        'suggestedFees': CosmosSuggestedFeesFromJSON(json['suggested_fees']),
    };
}

export function DescribedCosmosTransactionToJSON(value?: DescribedCosmosTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'cosmos_transaction_type_details': CosmosTransactionTypeDetailsToJSON(value.cosmosTransactionTypeDetails),
        'memo': value.memo,
        'sender': EnrichedCosmosBechAddressToJSON(value.sender),
        'chain': EnrichedCosmosChainToJSON(value.chain),
        'gas_debit': CosmosGasDebitToJSON(value.gasDebit),
        'suggested_fees': CosmosSuggestedFeesToJSON(value.suggestedFees),
    };
}

