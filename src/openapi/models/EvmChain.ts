/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EvmChain
 */
export interface EvmChain {
    /**
     * 
     * @type {string}
     * @memberof EvmChain
     */
    chainType: EvmChainChainTypeEnum;
    /**
     * The EVM chain name can be either one of those supported by the default chains below or a custom chain name if one was added to your organization. <ul><li>`arbitrum_mainnet`</li><li>`arbitrum_sepolia`</li><li>`avalanche_chain`</li><li>`base_mainnet`</li><li>`berachain_mainnet`</li><li>`blast_mainnet`</li><li>`bsc_mainnet`</li><li>`canto_mainnet`</li><li>`clink_mainnet`</li><li>`clink_testnet`</li><li>`conflux_mainnet`</li><li>`dymension_mainnet`</li><li>`ethereum_goerli`</li><li>`ethereum_holesky`</li><li>`ethereum_mainnet`</li><li>`ethereum_sepolia`</li><li>`fantom_mainnet`</li><li>`flare_mainnet`</li><li>`flare_testnet`</li><li>`gnosis_mainnet`</li><li>`kava_mainnet`</li><li>`linea_mainnet`</li><li>`optimism_mainnet`</li><li>`manta_pacific_mainnet`</li><li>`mantle_mainnet`</li><li>`merlin_mainnet`</li><li>`polygon_mainnet`</li><li>`polygon_mumbai`</li><li>`polygon_zkevm_mainnet`</li><li>`reya_mainnet`</li><li>`scroll_mainnet`</li><li>`sei_mainnet`</li><li>`sonic_mainnet`</li><li>`xai_mainnet`</li><li>`zeta_mainnet`</li><li>`zklink_nova_mainnet`</li><li>`zksync_era_mainnet`</li></ul>
     * @type {string}
     * @memberof EvmChain
     */
    namedChainId?: string;
    /**
     * 
     * @type {number}
     * @memberof EvmChain
     */
    chainId: number;
    /**
     * 
     * @type {string}
     * @memberof EvmChain
     */
    uniqueId: string;
}


/**
 * @export
 */
export const EvmChainChainTypeEnum = {
    evm: 'evm'
} as const;
export type EvmChainChainTypeEnum = typeof EvmChainChainTypeEnum[keyof typeof EvmChainChainTypeEnum];


/**
 * Check if a given object implements the EvmChain interface.
 */
export function instanceOfEvmChain(value: object): value is EvmChain {
    if (!('chainType' in value) || value['chainType'] === undefined) return false;
    if (!('chainId' in value) || value['chainId'] === undefined) return false;
    if (!('uniqueId' in value) || value['uniqueId'] === undefined) return false;
    return true;
}

export function EvmChainFromJSON(json: any): EvmChain {
    return EvmChainFromJSONTyped(json, false);
}

export function EvmChainFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmChain {
    if (json == null) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'namedChainId': json['named_chain_id'] == null ? undefined : json['named_chain_id'],
        'chainId': json['chain_id'],
        'uniqueId': json['unique_id'],
    };
}

export function EvmChainToJSON(json: any): EvmChain {
    return EvmChainToJSONTyped(json, false);
}

export function EvmChainToJSONTyped(value?: EvmChain | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain_type': value['chainType'],
        'named_chain_id': value['namedChainId'],
        'chain_id': value['chainId'],
        'unique_id': value['uniqueId'],
    };
}

