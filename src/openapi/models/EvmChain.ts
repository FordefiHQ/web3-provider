/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmChainId } from './EvmChainId';
import {
    EvmChainIdFromJSON,
    EvmChainIdFromJSONTyped,
    EvmChainIdToJSON,
} from './EvmChainId';
import type { EvmChainName } from './EvmChainName';
import {
    EvmChainNameFromJSON,
    EvmChainNameFromJSONTyped,
    EvmChainNameToJSON,
} from './EvmChainName';
import type { EvmChainUniqueId } from './EvmChainUniqueId';
import {
    EvmChainUniqueIdFromJSON,
    EvmChainUniqueIdFromJSONTyped,
    EvmChainUniqueIdToJSON,
} from './EvmChainUniqueId';

/**
 * 
 * @export
 * @interface EvmChain
 */
export interface EvmChain {
    /**
     * 
     * @type {string}
     * @memberof EvmChain
     */
    chainType: EvmChainChainTypeEnum;
    /**
     * 
     * @type {EvmChainName}
     * @memberof EvmChain
     */
    namedChainId: EvmChainName;
    /**
     * 
     * @type {EvmChainId}
     * @memberof EvmChain
     */
    chainId: EvmChainId;
    /**
     * 
     * @type {EvmChainUniqueId}
     * @memberof EvmChain
     */
    uniqueId: EvmChainUniqueId;
}


/**
 * @export
 */
export const EvmChainChainTypeEnum = {
    evm: 'evm'
} as const;
export type EvmChainChainTypeEnum = typeof EvmChainChainTypeEnum[keyof typeof EvmChainChainTypeEnum];


/**
 * Check if a given object implements the EvmChain interface.
 */
export function instanceOfEvmChain(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chainType" in value;
    isInstance = isInstance && "namedChainId" in value;
    isInstance = isInstance && "chainId" in value;
    isInstance = isInstance && "uniqueId" in value;

    return isInstance;
}

export function EvmChainFromJSON(json: any): EvmChain {
    return EvmChainFromJSONTyped(json, false);
}

export function EvmChainFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmChain {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'namedChainId': EvmChainNameFromJSON(json['named_chain_id']),
        'chainId': EvmChainIdFromJSON(json['chain_id']),
        'uniqueId': EvmChainUniqueIdFromJSON(json['unique_id']),
    };
}

export function EvmChainToJSON(value?: EvmChain | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chain_type': value.chainType,
        'named_chain_id': EvmChainNameToJSON(value.namedChainId),
        'chain_id': EvmChainIdToJSON(value.chainId),
        'unique_id': EvmChainUniqueIdToJSON(value.uniqueId),
    };
}

