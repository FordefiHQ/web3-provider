/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedTronAddress } from './EnrichedTronAddress';
import {
    EnrichedTronAddressFromJSON,
    EnrichedTronAddressFromJSONTyped,
    EnrichedTronAddressToJSON,
    EnrichedTronAddressToJSONTyped,
} from './EnrichedTronAddress';

/**
 * 
 * @export
 * @interface TronTokenTransferDetails
 */
export interface TronTokenTransferDetails {
    /**
     * 
     * @type {string}
     * @memberof TronTokenTransferDetails
     */
    type: TronTokenTransferDetailsTypeEnum;
    /**
     * 
     * @type {EnrichedTronAddress}
     * @memberof TronTokenTransferDetails
     */
    sender: EnrichedTronAddress;
    /**
     * 
     * @type {EnrichedTronAddress}
     * @memberof TronTokenTransferDetails
     */
    recipient: EnrichedTronAddress;
    /**
     * 
     * @type {boolean}
     * @memberof TronTokenTransferDetails
     */
    isInternal?: boolean;
}


/**
 * @export
 */
export const TronTokenTransferDetailsTypeEnum = {
    tokenTransfer: 'token_transfer'
} as const;
export type TronTokenTransferDetailsTypeEnum = typeof TronTokenTransferDetailsTypeEnum[keyof typeof TronTokenTransferDetailsTypeEnum];


/**
 * Check if a given object implements the TronTokenTransferDetails interface.
 */
export function instanceOfTronTokenTransferDetails(value: object): value is TronTokenTransferDetails {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('recipient' in value) || value['recipient'] === undefined) return false;
    return true;
}

export function TronTokenTransferDetailsFromJSON(json: any): TronTokenTransferDetails {
    return TronTokenTransferDetailsFromJSONTyped(json, false);
}

export function TronTokenTransferDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TronTokenTransferDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'sender': EnrichedTronAddressFromJSON(json['sender']),
        'recipient': EnrichedTronAddressFromJSON(json['recipient']),
        'isInternal': json['is_internal'] == null ? undefined : json['is_internal'],
    };
}

export function TronTokenTransferDetailsToJSON(json: any): TronTokenTransferDetails {
    return TronTokenTransferDetailsToJSONTyped(json, false);
}

export function TronTokenTransferDetailsToJSONTyped(value?: TronTokenTransferDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'sender': EnrichedTronAddressToJSON(value['sender']),
        'recipient': EnrichedTronAddressToJSON(value['recipient']),
        'is_internal': value['isInternal'],
    };
}

