/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UtxoChainUniqueId } from './UtxoChainUniqueId';
import {
    UtxoChainUniqueIdFromJSON,
    UtxoChainUniqueIdFromJSONTyped,
    UtxoChainUniqueIdToJSON,
} from './UtxoChainUniqueId';

/**
 * 
 * @export
 * @interface CreateUtxoContactRequest
 */
export interface CreateUtxoContactRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateUtxoContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUtxoContactRequest
     */
    type: CreateUtxoContactRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateUtxoContactRequest
     */
    address: string;
    /**
     * 
     * @type {UtxoChainUniqueId}
     * @memberof CreateUtxoContactRequest
     */
    chain: UtxoChainUniqueId;
}


/**
 * @export
 */
export const CreateUtxoContactRequestTypeEnum = {
    utxo: 'utxo'
} as const;
export type CreateUtxoContactRequestTypeEnum = typeof CreateUtxoContactRequestTypeEnum[keyof typeof CreateUtxoContactRequestTypeEnum];


/**
 * Check if a given object implements the CreateUtxoContactRequest interface.
 */
export function instanceOfCreateUtxoContactRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "chain" in value;

    return isInstance;
}

export function CreateUtxoContactRequestFromJSON(json: any): CreateUtxoContactRequest {
    return CreateUtxoContactRequestFromJSONTyped(json, false);
}

export function CreateUtxoContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUtxoContactRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'address': json['address'],
        'chain': UtxoChainUniqueIdFromJSON(json['chain']),
    };
}

export function CreateUtxoContactRequestToJSON(value?: CreateUtxoContactRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'address': value.address,
        'chain': UtxoChainUniqueIdToJSON(value.chain),
    };
}

