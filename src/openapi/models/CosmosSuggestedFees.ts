/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosChainUniqueId } from './CosmosChainUniqueId';
import {
    CosmosChainUniqueIdFromJSON,
    CosmosChainUniqueIdFromJSONTyped,
    CosmosChainUniqueIdToJSON,
    CosmosChainUniqueIdToJSONTyped,
} from './CosmosChainUniqueId';

/**
 * 
 * @export
 * @interface CosmosSuggestedFees
 */
export interface CosmosSuggestedFees {
    /**
     * 
     * @type {string}
     * @memberof CosmosSuggestedFees
     */
    type: CosmosSuggestedFeesTypeEnum;
    /**
     * 
     * @type {CosmosChainUniqueId}
     * @memberof CosmosSuggestedFees
     */
    chainUniqueId: CosmosChainUniqueId;
    /**
     * 
     * @type {number}
     * @memberof CosmosSuggestedFees
     */
    feePerSignature?: number;
}


/**
 * @export
 */
export const CosmosSuggestedFeesTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type CosmosSuggestedFeesTypeEnum = typeof CosmosSuggestedFeesTypeEnum[keyof typeof CosmosSuggestedFeesTypeEnum];


/**
 * Check if a given object implements the CosmosSuggestedFees interface.
 */
export function instanceOfCosmosSuggestedFees(value: object): value is CosmosSuggestedFees {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chainUniqueId' in value) || value['chainUniqueId'] === undefined) return false;
    return true;
}

export function CosmosSuggestedFeesFromJSON(json: any): CosmosSuggestedFees {
    return CosmosSuggestedFeesFromJSONTyped(json, false);
}

export function CosmosSuggestedFeesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosSuggestedFees {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'chainUniqueId': CosmosChainUniqueIdFromJSON(json['chain_unique_id']),
        'feePerSignature': json['fee_per_signature'] == null ? undefined : json['fee_per_signature'],
    };
}

export function CosmosSuggestedFeesToJSON(json: any): CosmosSuggestedFees {
    return CosmosSuggestedFeesToJSONTyped(json, false);
}

export function CosmosSuggestedFeesToJSONTyped(value?: CosmosSuggestedFees | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'chain_unique_id': CosmosChainUniqueIdToJSON(value['chainUniqueId']),
        'fee_per_signature': value['feePerSignature'],
    };
}

