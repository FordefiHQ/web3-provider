/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    BlackBoxSignatureEcdsaSecp256k1Details,
    instanceOfBlackBoxSignatureEcdsaSecp256k1Details,
    BlackBoxSignatureEcdsaSecp256k1DetailsFromJSON,
    BlackBoxSignatureEcdsaSecp256k1DetailsFromJSONTyped,
    BlackBoxSignatureEcdsaSecp256k1DetailsToJSON,
} from './BlackBoxSignatureEcdsaSecp256k1Details';
import {
    BlackBoxSignatureEcdsaStarkDetails,
    instanceOfBlackBoxSignatureEcdsaStarkDetails,
    BlackBoxSignatureEcdsaStarkDetailsFromJSON,
    BlackBoxSignatureEcdsaStarkDetailsFromJSONTyped,
    BlackBoxSignatureEcdsaStarkDetailsToJSON,
} from './BlackBoxSignatureEcdsaStarkDetails';

/**
 * @type BlackBoxSignatureDetails
 * 
 * @export
 */
export type BlackBoxSignatureDetails = { type: 'ecdsa_secp256k1' } & BlackBoxSignatureEcdsaSecp256k1Details | { type: 'ecdsa_stark' } & BlackBoxSignatureEcdsaStarkDetails;

export function BlackBoxSignatureDetailsFromJSON(json: any): BlackBoxSignatureDetails {
    return BlackBoxSignatureDetailsFromJSONTyped(json, false);
}

export function BlackBoxSignatureDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlackBoxSignatureDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'ecdsa_secp256k1':
            return {...BlackBoxSignatureEcdsaSecp256k1DetailsFromJSONTyped(json, true), type: 'ecdsa_secp256k1'};
        case 'ecdsa_stark':
            return {...BlackBoxSignatureEcdsaStarkDetailsFromJSONTyped(json, true), type: 'ecdsa_stark'};
        default:
            throw new Error(`No variant of BlackBoxSignatureDetails exists with 'type=${json['type']}'`);
    }
}

export function BlackBoxSignatureDetailsToJSON(value?: BlackBoxSignatureDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'ecdsa_secp256k1':
            return BlackBoxSignatureEcdsaSecp256k1DetailsToJSON(value);
        case 'ecdsa_stark':
            return BlackBoxSignatureEcdsaStarkDetailsToJSON(value);
        default:
            throw new Error(`No variant of BlackBoxSignatureDetails exists with 'type=${value['type']}'`);
    }

}

