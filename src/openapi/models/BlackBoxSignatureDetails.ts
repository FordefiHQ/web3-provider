/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { BlackBoxSignatureEcdsaSecp256k1Details } from './BlackBoxSignatureEcdsaSecp256k1Details';
import {
    instanceOfBlackBoxSignatureEcdsaSecp256k1Details,
    BlackBoxSignatureEcdsaSecp256k1DetailsFromJSON,
    BlackBoxSignatureEcdsaSecp256k1DetailsFromJSONTyped,
    BlackBoxSignatureEcdsaSecp256k1DetailsToJSON,
} from './BlackBoxSignatureEcdsaSecp256k1Details';
import type { BlackBoxSignatureEcdsaStarkDetails } from './BlackBoxSignatureEcdsaStarkDetails';
import {
    instanceOfBlackBoxSignatureEcdsaStarkDetails,
    BlackBoxSignatureEcdsaStarkDetailsFromJSON,
    BlackBoxSignatureEcdsaStarkDetailsFromJSONTyped,
    BlackBoxSignatureEcdsaStarkDetailsToJSON,
} from './BlackBoxSignatureEcdsaStarkDetails';
import type { BlackBoxSignatureEddsaEd25519Details } from './BlackBoxSignatureEddsaEd25519Details';
import {
    instanceOfBlackBoxSignatureEddsaEd25519Details,
    BlackBoxSignatureEddsaEd25519DetailsFromJSON,
    BlackBoxSignatureEddsaEd25519DetailsFromJSONTyped,
    BlackBoxSignatureEddsaEd25519DetailsToJSON,
} from './BlackBoxSignatureEddsaEd25519Details';
import type { BlackBoxSignatureSchnorrSecp256k1Details } from './BlackBoxSignatureSchnorrSecp256k1Details';
import {
    instanceOfBlackBoxSignatureSchnorrSecp256k1Details,
    BlackBoxSignatureSchnorrSecp256k1DetailsFromJSON,
    BlackBoxSignatureSchnorrSecp256k1DetailsFromJSONTyped,
    BlackBoxSignatureSchnorrSecp256k1DetailsToJSON,
} from './BlackBoxSignatureSchnorrSecp256k1Details';

/**
 * @type BlackBoxSignatureDetails
 * 
 * @export
 */
export type BlackBoxSignatureDetails = { type: 'ecdsa_secp256k1' } & BlackBoxSignatureEcdsaSecp256k1Details | { type: 'ecdsa_stark' } & BlackBoxSignatureEcdsaStarkDetails | { type: 'eddsa_ed25519' } & BlackBoxSignatureEddsaEd25519Details | { type: 'schnorr_secp256k1' } & BlackBoxSignatureSchnorrSecp256k1Details;

export function BlackBoxSignatureDetailsFromJSON(json: any): BlackBoxSignatureDetails {
    return BlackBoxSignatureDetailsFromJSONTyped(json, false);
}

export function BlackBoxSignatureDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlackBoxSignatureDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'ecdsa_secp256k1':
            return Object.assign({}, BlackBoxSignatureEcdsaSecp256k1DetailsFromJSONTyped(json, true), { type: 'ecdsa_secp256k1' } as const);
        case 'ecdsa_stark':
            return Object.assign({}, BlackBoxSignatureEcdsaStarkDetailsFromJSONTyped(json, true), { type: 'ecdsa_stark' } as const);
        case 'eddsa_ed25519':
            return Object.assign({}, BlackBoxSignatureEddsaEd25519DetailsFromJSONTyped(json, true), { type: 'eddsa_ed25519' } as const);
        case 'schnorr_secp256k1':
            return Object.assign({}, BlackBoxSignatureSchnorrSecp256k1DetailsFromJSONTyped(json, true), { type: 'schnorr_secp256k1' } as const);
        default:
            throw new Error(`No variant of BlackBoxSignatureDetails exists with 'type=${json['type']}'`);
    }
}

export function BlackBoxSignatureDetailsToJSON(json: any): any {
    return BlackBoxSignatureDetailsToJSONTyped(json, false);
}

export function BlackBoxSignatureDetailsToJSONTyped(value?: BlackBoxSignatureDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'ecdsa_secp256k1':
            return Object.assign({}, BlackBoxSignatureEcdsaSecp256k1DetailsToJSON(value), { type: 'ecdsa_secp256k1' } as const);
        case 'ecdsa_stark':
            return Object.assign({}, BlackBoxSignatureEcdsaStarkDetailsToJSON(value), { type: 'ecdsa_stark' } as const);
        case 'eddsa_ed25519':
            return Object.assign({}, BlackBoxSignatureEddsaEd25519DetailsToJSON(value), { type: 'eddsa_ed25519' } as const);
        case 'schnorr_secp256k1':
            return Object.assign({}, BlackBoxSignatureSchnorrSecp256k1DetailsToJSON(value), { type: 'schnorr_secp256k1' } as const);
        default:
            throw new Error(`No variant of BlackBoxSignatureDetails exists with 'type=${value['type']}'`);
    }

}

