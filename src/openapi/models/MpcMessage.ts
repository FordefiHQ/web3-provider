/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MpcMessage
 */
export interface MpcMessage {
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    signature: string;
    /**
     * 
     * @type {number}
     * @memberof MpcMessage
     */
    messageNumber: number;
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    protocolName: string;
    /**
     * 
     * @type {boolean}
     * @memberof MpcMessage
     */
    isLastMessage: boolean;
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    sessionId?: string;
}

/**
 * Check if a given object implements the MpcMessage interface.
 */
export function instanceOfMpcMessage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "signature" in value;
    isInstance = isInstance && "messageNumber" in value;
    isInstance = isInstance && "protocolName" in value;
    isInstance = isInstance && "isLastMessage" in value;

    return isInstance;
}

export function MpcMessageFromJSON(json: any): MpcMessage {
    return MpcMessageFromJSONTyped(json, false);
}

export function MpcMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): MpcMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': json['message'],
        'signature': json['signature'],
        'messageNumber': json['message_number'],
        'protocolName': json['protocol_name'],
        'isLastMessage': json['is_last_message'],
        'sessionId': !exists(json, 'session_id') ? undefined : json['session_id'],
    };
}

export function MpcMessageToJSON(value?: MpcMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'signature': value.signature,
        'message_number': value.messageNumber,
        'protocol_name': value.protocolName,
        'is_last_message': value.isLastMessage,
        'session_id': value.sessionId,
    };
}

