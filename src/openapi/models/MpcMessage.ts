/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MpcMessage
 */
export interface MpcMessage {
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    signature: string;
    /**
     * 
     * @type {number}
     * @memberof MpcMessage
     */
    messageNumber: number;
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    protocolName: string;
    /**
     * 
     * @type {boolean}
     * @memberof MpcMessage
     */
    isLastMessage: boolean;
    /**
     * 
     * @type {string}
     * @memberof MpcMessage
     */
    sessionId?: string;
}

/**
 * Check if a given object implements the MpcMessage interface.
 */
export function instanceOfMpcMessage(value: object): value is MpcMessage {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('messageNumber' in value) || value['messageNumber'] === undefined) return false;
    if (!('protocolName' in value) || value['protocolName'] === undefined) return false;
    if (!('isLastMessage' in value) || value['isLastMessage'] === undefined) return false;
    return true;
}

export function MpcMessageFromJSON(json: any): MpcMessage {
    return MpcMessageFromJSONTyped(json, false);
}

export function MpcMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): MpcMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'signature': json['signature'],
        'messageNumber': json['message_number'],
        'protocolName': json['protocol_name'],
        'isLastMessage': json['is_last_message'],
        'sessionId': json['session_id'] == null ? undefined : json['session_id'],
    };
}

export function MpcMessageToJSON(json: any): MpcMessage {
    return MpcMessageToJSONTyped(json, false);
}

export function MpcMessageToJSONTyped(value?: MpcMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'signature': value['signature'],
        'message_number': value['messageNumber'],
        'protocol_name': value['protocolName'],
        'is_last_message': value['isLastMessage'],
        'session_id': value['sessionId'],
    };
}

