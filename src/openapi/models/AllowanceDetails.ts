/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnrichedEvmAddress } from './EnrichedEvmAddress';
import {
    EnrichedEvmAddressFromJSON,
    EnrichedEvmAddressFromJSONTyped,
    EnrichedEvmAddressToJSON,
} from './EnrichedEvmAddress';

/**
 * 
 * @export
 * @interface AllowanceDetails
 */
export interface AllowanceDetails {
    /**
     * 
     * @type {string}
     * @memberof AllowanceDetails
     */
    type: AllowanceDetailsTypeEnum;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof AllowanceDetails
     */
    spender: EnrichedEvmAddress;
}


/**
 * @export
 */
export const AllowanceDetailsTypeEnum = {
    allowance: 'allowance'
} as const;
export type AllowanceDetailsTypeEnum = typeof AllowanceDetailsTypeEnum[keyof typeof AllowanceDetailsTypeEnum];


/**
 * Check if a given object implements the AllowanceDetails interface.
 */
export function instanceOfAllowanceDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "spender" in value;

    return isInstance;
}

export function AllowanceDetailsFromJSON(json: any): AllowanceDetails {
    return AllowanceDetailsFromJSONTyped(json, false);
}

export function AllowanceDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllowanceDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'spender': EnrichedEvmAddressFromJSON(json['spender']),
    };
}

export function AllowanceDetailsToJSON(value?: AllowanceDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'spender': EnrichedEvmAddressToJSON(value.spender),
    };
}

