/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EvmAddress } from './EvmAddress';
import {
    EvmAddressFromJSON,
    EvmAddressFromJSONTyped,
    EvmAddressToJSON,
    EvmAddressToJSONTyped,
} from './EvmAddress';

/**
 * 
 * @export
 * @interface Erc721
 */
export interface Erc721 {
    /**
     * 
     * @type {EvmAddress}
     * @memberof Erc721
     */
    address: EvmAddress;
    /**
     * 
     * @type {string}
     * @memberof Erc721
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Erc721
     */
    symbol: string;
    /**
     * 
     * @type {string}
     * @memberof Erc721
     */
    type: Erc721TypeEnum;
}


/**
 * @export
 */
export const Erc721TypeEnum = {
    erc721: 'erc721'
} as const;
export type Erc721TypeEnum = typeof Erc721TypeEnum[keyof typeof Erc721TypeEnum];


/**
 * Check if a given object implements the Erc721 interface.
 */
export function instanceOfErc721(value: object): value is Erc721 {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function Erc721FromJSON(json: any): Erc721 {
    return Erc721FromJSONTyped(json, false);
}

export function Erc721FromJSONTyped(json: any, ignoreDiscriminator: boolean): Erc721 {
    if (json == null) {
        return json;
    }
    return {
        
        'address': EvmAddressFromJSON(json['address']),
        'name': json['name'],
        'symbol': json['symbol'],
        'type': json['type'],
    };
}

export function Erc721ToJSON(json: any): Erc721 {
    return Erc721ToJSONTyped(json, false);
}

export function Erc721ToJSONTyped(value?: Erc721 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': EvmAddressToJSON(value['address']),
        'name': value['name'],
        'symbol': value['symbol'],
        'type': value['type'],
    };
}

