/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedCosmosChain } from './EnrichedCosmosChain';
import {
    EnrichedCosmosChainFromJSON,
    EnrichedCosmosChainFromJSONTyped,
    EnrichedCosmosChainToJSON,
    EnrichedCosmosChainToJSONTyped,
} from './EnrichedCosmosChain';
import type { CosmosTokenAsset } from './CosmosTokenAsset';
import {
    CosmosTokenAssetFromJSON,
    CosmosTokenAssetFromJSONTyped,
    CosmosTokenAssetToJSON,
    CosmosTokenAssetToJSONTyped,
} from './CosmosTokenAsset';
import type { CosmosNativeAsset } from './CosmosNativeAsset';
import {
    CosmosNativeAssetFromJSON,
    CosmosNativeAssetFromJSONTyped,
    CosmosNativeAssetToJSON,
    CosmosNativeAssetToJSONTyped,
} from './CosmosNativeAsset';

/**
 * 
 * @export
 * @interface CosmosAssetDetails
 */
export interface CosmosAssetDetails {
    /**
     * 
     * @type {EnrichedCosmosChain}
     * @memberof CosmosAssetDetails
     */
    chain: EnrichedCosmosChain;
    /**
     * 
     * @type {string}
     * @memberof CosmosAssetDetails
     */
    type: CosmosAssetDetailsTypeEnum;
}


/**
 * @export
 */
export const CosmosAssetDetailsTypeEnum = {
    nativeAsset: 'cosmos_native_asset',
    tokenAsset: 'cosmos_token_asset'
} as const;
export type CosmosAssetDetailsTypeEnum = typeof CosmosAssetDetailsTypeEnum[keyof typeof CosmosAssetDetailsTypeEnum];


/**
 * Check if a given object implements the CosmosAssetDetails interface.
 */
export function instanceOfCosmosAssetDetails(value: object): value is CosmosAssetDetails {
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CosmosAssetDetailsFromJSON(json: any): CosmosAssetDetails {
    return CosmosAssetDetailsFromJSONTyped(json, false);
}

export function CosmosAssetDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosAssetDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'chain': EnrichedCosmosChainFromJSON(json['chain']),
        'type': json['type'],
    };
}

export function CosmosAssetDetailsToJSON(json: any): CosmosAssetDetails {
    return CosmosAssetDetailsToJSONTyped(json, false);
}

export function CosmosAssetDetailsToJSONTyped(value?: CosmosAssetDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain': EnrichedCosmosChainToJSON(value['chain']),
        'type': value['type'],
    };
}

