/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    EvmDataRequestBase64,
    instanceOfEvmDataRequestBase64,
    EvmDataRequestBase64FromJSON,
    EvmDataRequestBase64FromJSONTyped,
    EvmDataRequestBase64ToJSON,
} from './EvmDataRequestBase64';
import {
    EvmDataRequestFullDetails,
    instanceOfEvmDataRequestFullDetails,
    EvmDataRequestFullDetailsFromJSON,
    EvmDataRequestFullDetailsFromJSONTyped,
    EvmDataRequestFullDetailsToJSON,
} from './EvmDataRequestFullDetails';
import {
    EvmDataRequestHex,
    instanceOfEvmDataRequestHex,
    EvmDataRequestHexFromJSON,
    EvmDataRequestHexFromJSONTyped,
    EvmDataRequestHexToJSON,
} from './EvmDataRequestHex';

/**
 * @type EvmDataRequest
 * 
 * @export
 */
export type EvmDataRequest = { type: 'base64' } & EvmDataRequestBase64 | { type: 'full_details' } & EvmDataRequestFullDetails | { type: 'hex' } & EvmDataRequestHex;

export function EvmDataRequestFromJSON(json: any): EvmDataRequest {
    return EvmDataRequestFromJSONTyped(json, false);
}

export function EvmDataRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmDataRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'base64':
            return {...EvmDataRequestBase64FromJSONTyped(json, true), type: 'base64'};
        case 'full_details':
            return {...EvmDataRequestFullDetailsFromJSONTyped(json, true), type: 'full_details'};
        case 'hex':
            return {...EvmDataRequestHexFromJSONTyped(json, true), type: 'hex'};
        default:
            throw new Error(`No variant of EvmDataRequest exists with 'type=${json['type']}'`);
    }
}

export function EvmDataRequestToJSON(value?: EvmDataRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'base64':
            return EvmDataRequestBase64ToJSON(value);
        case 'full_details':
            return EvmDataRequestFullDetailsToJSON(value);
        case 'hex':
            return EvmDataRequestHexToJSON(value);
        default:
            throw new Error(`No variant of EvmDataRequest exists with 'type=${value['type']}'`);
    }

}

