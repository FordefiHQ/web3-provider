/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CosmosAccountRepr
 */
export interface CosmosAccountRepr {
    /**
     * 
     * @type {string}
     * @memberof CosmosAccountRepr
     */
    chainType: CosmosAccountReprChainTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CosmosAccountRepr
     */
    bech32Repr: string;
}


/**
 * @export
 */
export const CosmosAccountReprChainTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type CosmosAccountReprChainTypeEnum = typeof CosmosAccountReprChainTypeEnum[keyof typeof CosmosAccountReprChainTypeEnum];


/**
 * Check if a given object implements the CosmosAccountRepr interface.
 */
export function instanceOfCosmosAccountRepr(value: object): value is CosmosAccountRepr {
    if (!('chainType' in value) || value['chainType'] === undefined) return false;
    if (!('bech32Repr' in value) || value['bech32Repr'] === undefined) return false;
    return true;
}

export function CosmosAccountReprFromJSON(json: any): CosmosAccountRepr {
    return CosmosAccountReprFromJSONTyped(json, false);
}

export function CosmosAccountReprFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosAccountRepr {
    if (json == null) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'bech32Repr': json['bech32_repr'],
    };
}

export function CosmosAccountReprToJSON(json: any): CosmosAccountRepr {
    return CosmosAccountReprToJSONTyped(json, false);
}

export function CosmosAccountReprToJSONTyped(value?: CosmosAccountRepr | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain_type': value['chainType'],
        'bech32_repr': value['bech32Repr'],
    };
}

