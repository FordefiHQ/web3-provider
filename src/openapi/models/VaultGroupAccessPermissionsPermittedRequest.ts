/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VaultGroupAccessPermissionsPermittedRequest
 */
export interface VaultGroupAccessPermissionsPermittedRequest {
    /**
     * 
     * @type {string}
     * @memberof VaultGroupAccessPermissionsPermittedRequest
     */
    accessType: VaultGroupAccessPermissionsPermittedRequestAccessTypeEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof VaultGroupAccessPermissionsPermittedRequest
     */
    userGroupIds: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof VaultGroupAccessPermissionsPermittedRequest
     */
    userIds: Array<string>;
}


/**
 * @export
 */
export const VaultGroupAccessPermissionsPermittedRequestAccessTypeEnum = {
    permitted: 'permitted'
} as const;
export type VaultGroupAccessPermissionsPermittedRequestAccessTypeEnum = typeof VaultGroupAccessPermissionsPermittedRequestAccessTypeEnum[keyof typeof VaultGroupAccessPermissionsPermittedRequestAccessTypeEnum];


/**
 * Check if a given object implements the VaultGroupAccessPermissionsPermittedRequest interface.
 */
export function instanceOfVaultGroupAccessPermissionsPermittedRequest(value: object): value is VaultGroupAccessPermissionsPermittedRequest {
    if (!('accessType' in value) || value['accessType'] === undefined) return false;
    if (!('userGroupIds' in value) || value['userGroupIds'] === undefined) return false;
    if (!('userIds' in value) || value['userIds'] === undefined) return false;
    return true;
}

export function VaultGroupAccessPermissionsPermittedRequestFromJSON(json: any): VaultGroupAccessPermissionsPermittedRequest {
    return VaultGroupAccessPermissionsPermittedRequestFromJSONTyped(json, false);
}

export function VaultGroupAccessPermissionsPermittedRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaultGroupAccessPermissionsPermittedRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'accessType': json['access_type'],
        'userGroupIds': json['user_group_ids'],
        'userIds': json['user_ids'],
    };
}

export function VaultGroupAccessPermissionsPermittedRequestToJSON(json: any): VaultGroupAccessPermissionsPermittedRequest {
    return VaultGroupAccessPermissionsPermittedRequestToJSONTyped(json, false);
}

export function VaultGroupAccessPermissionsPermittedRequestToJSONTyped(value?: VaultGroupAccessPermissionsPermittedRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_type': value['accessType'],
        'user_group_ids': value['userGroupIds'],
        'user_ids': value['userIds'],
    };
}

