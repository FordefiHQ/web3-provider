/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EcdsaSecp256k1BlackBoxVault
 */
export interface EcdsaSecp256k1BlackBoxVault {
    /**
     * 
     * @type {string}
     * @memberof EcdsaSecp256k1BlackBoxVault
     */
    type: EcdsaSecp256k1BlackBoxVaultTypeEnum;
}


/**
 * @export
 */
export const EcdsaSecp256k1BlackBoxVaultTypeEnum = {
    ecdsaSecp256k1: 'ecdsa_secp256k1'
} as const;
export type EcdsaSecp256k1BlackBoxVaultTypeEnum = typeof EcdsaSecp256k1BlackBoxVaultTypeEnum[keyof typeof EcdsaSecp256k1BlackBoxVaultTypeEnum];


/**
 * Check if a given object implements the EcdsaSecp256k1BlackBoxVault interface.
 */
export function instanceOfEcdsaSecp256k1BlackBoxVault(value: object): value is EcdsaSecp256k1BlackBoxVault {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function EcdsaSecp256k1BlackBoxVaultFromJSON(json: any): EcdsaSecp256k1BlackBoxVault {
    return EcdsaSecp256k1BlackBoxVaultFromJSONTyped(json, false);
}

export function EcdsaSecp256k1BlackBoxVaultFromJSONTyped(json: any, ignoreDiscriminator: boolean): EcdsaSecp256k1BlackBoxVault {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
    };
}

export function EcdsaSecp256k1BlackBoxVaultToJSON(json: any): EcdsaSecp256k1BlackBoxVault {
    return EcdsaSecp256k1BlackBoxVaultToJSONTyped(json, false);
}

export function EcdsaSecp256k1BlackBoxVaultToJSONTyped(value?: EcdsaSecp256k1BlackBoxVault | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
    };
}

