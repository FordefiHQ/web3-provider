/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseSuiPureInput } from './BaseSuiPureInput';
import {
    BaseSuiPureInputFromJSON,
    BaseSuiPureInputFromJSONTyped,
    BaseSuiPureInputToJSON,
} from './BaseSuiPureInput';

/**
 * 
 * @export
 * @interface SuiPureInputArgument
 */
export interface SuiPureInputArgument {
    /**
     * 
     * @type {string}
     * @memberof SuiPureInputArgument
     */
    type: SuiPureInputArgumentTypeEnum;
    /**
     * 
     * @type {BaseSuiPureInput}
     * @memberof SuiPureInputArgument
     */
    details: BaseSuiPureInput;
}


/**
 * @export
 */
export const SuiPureInputArgumentTypeEnum = {
    pure: 'pure'
} as const;
export type SuiPureInputArgumentTypeEnum = typeof SuiPureInputArgumentTypeEnum[keyof typeof SuiPureInputArgumentTypeEnum];


/**
 * Check if a given object implements the SuiPureInputArgument interface.
 */
export function instanceOfSuiPureInputArgument(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "details" in value;

    return isInstance;
}

export function SuiPureInputArgumentFromJSON(json: any): SuiPureInputArgument {
    return SuiPureInputArgumentFromJSONTyped(json, false);
}

export function SuiPureInputArgumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiPureInputArgument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'details': BaseSuiPureInputFromJSON(json['details']),
    };
}

export function SuiPureInputArgumentToJSON(value?: SuiPureInputArgument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'details': BaseSuiPureInputToJSON(value.details),
    };
}

