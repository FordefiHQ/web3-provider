/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SignSession } from './SignSession';
import {
    SignSessionFromJSON,
    SignSessionFromJSONTyped,
    SignSessionToJSON,
    SignSessionToJSONTyped,
} from './SignSession';
import type { KeyDerivationArgs } from './KeyDerivationArgs';
import {
    KeyDerivationArgsFromJSON,
    KeyDerivationArgsFromJSONTyped,
    KeyDerivationArgsToJSON,
    KeyDerivationArgsToJSONTyped,
} from './KeyDerivationArgs';
import type { TimestampedSignature } from './TimestampedSignature';
import {
    TimestampedSignatureFromJSON,
    TimestampedSignatureFromJSONTyped,
    TimestampedSignatureToJSON,
    TimestampedSignatureToJSONTyped,
} from './TimestampedSignature';

/**
 * 
 * @export
 * @interface RegisterTransactionSignSessionResponse
 */
export interface RegisterTransactionSignSessionResponse {
    /**
     * 
     * @type {string}
     * @memberof RegisterTransactionSignSessionResponse
     * @deprecated
     */
    sessionId: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterTransactionSignSessionResponse
     * @deprecated
     */
    hash: string;
    /**
     * 
     * @type {TimestampedSignature}
     * @memberof RegisterTransactionSignSessionResponse
     */
    timestampedSignature?: TimestampedSignature;
    /**
     * 
     * @type {TimestampedSignature}
     * @memberof RegisterTransactionSignSessionResponse
     */
    timestampedSignatureV2: TimestampedSignature;
    /**
     * 
     * @type {KeyDerivationArgs}
     * @memberof RegisterTransactionSignSessionResponse
     */
    keyDerivationArgs: KeyDerivationArgs;
    /**
     * 
     * @type {Array<SignSession>}
     * @memberof RegisterTransactionSignSessionResponse
     */
    signSessions: Array<SignSession>;
    /**
     * 
     * @type {boolean}
     * @memberof RegisterTransactionSignSessionResponse
     */
    dklsEnabled?: boolean;
}

/**
 * Check if a given object implements the RegisterTransactionSignSessionResponse interface.
 */
export function instanceOfRegisterTransactionSignSessionResponse(value: object): value is RegisterTransactionSignSessionResponse {
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('hash' in value) || value['hash'] === undefined) return false;
    if (!('timestampedSignatureV2' in value) || value['timestampedSignatureV2'] === undefined) return false;
    if (!('keyDerivationArgs' in value) || value['keyDerivationArgs'] === undefined) return false;
    if (!('signSessions' in value) || value['signSessions'] === undefined) return false;
    return true;
}

export function RegisterTransactionSignSessionResponseFromJSON(json: any): RegisterTransactionSignSessionResponse {
    return RegisterTransactionSignSessionResponseFromJSONTyped(json, false);
}

export function RegisterTransactionSignSessionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterTransactionSignSessionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'sessionId': json['session_id'],
        'hash': json['hash'],
        'timestampedSignature': json['timestamped_signature'] == null ? undefined : TimestampedSignatureFromJSON(json['timestamped_signature']),
        'timestampedSignatureV2': TimestampedSignatureFromJSON(json['timestamped_signature_v2']),
        'keyDerivationArgs': KeyDerivationArgsFromJSON(json['key_derivation_args']),
        'signSessions': ((json['sign_sessions'] as Array<any>).map(SignSessionFromJSON)),
        'dklsEnabled': json['dkls_enabled'] == null ? undefined : json['dkls_enabled'],
    };
}

export function RegisterTransactionSignSessionResponseToJSON(json: any): RegisterTransactionSignSessionResponse {
    return RegisterTransactionSignSessionResponseToJSONTyped(json, false);
}

export function RegisterTransactionSignSessionResponseToJSONTyped(value?: RegisterTransactionSignSessionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'session_id': value['sessionId'],
        'hash': value['hash'],
        'timestamped_signature': TimestampedSignatureToJSON(value['timestampedSignature']),
        'timestamped_signature_v2': TimestampedSignatureToJSON(value['timestampedSignatureV2']),
        'key_derivation_args': KeyDerivationArgsToJSON(value['keyDerivationArgs']),
        'sign_sessions': ((value['signSessions'] as Array<any>).map(SignSessionToJSON)),
        'dkls_enabled': value['dklsEnabled'],
    };
}

