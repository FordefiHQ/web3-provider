/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActionSigningRequest } from './ActionSigningRequest';
import {
    ActionSigningRequestFromJSON,
    ActionSigningRequestFromJSONTyped,
    ActionSigningRequestToJSON,
    ActionSigningRequestToJSONTyped,
} from './ActionSigningRequest';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';
import type { VerificationRequest } from './VerificationRequest';
import {
    VerificationRequestFromJSON,
    VerificationRequestFromJSONTyped,
    VerificationRequestToJSON,
    VerificationRequestToJSONTyped,
} from './VerificationRequest';
import type { AddressBookContactDetails } from './AddressBookContactDetails';
import {
    AddressBookContactDetailsFromJSON,
    AddressBookContactDetailsFromJSONTyped,
    AddressBookContactDetailsToJSON,
    AddressBookContactDetailsToJSONTyped,
} from './AddressBookContactDetails';

/**
 * 
 * @export
 * @interface ContactChangeAction
 */
export interface ContactChangeAction {
    /**
     * 
     * @type {string}
     * @memberof ContactChangeAction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ContactChangeAction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ContactChangeAction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof ContactChangeAction
     */
    isPending: boolean;
    /**
     * 
     * @type {string}
     * @memberof ContactChangeAction
     */
    type: ContactChangeActionTypeEnum;
    /**
     * 
     * @type {UserRef}
     * @memberof ContactChangeAction
     */
    createdBy: UserRef;
    /**
     * 
     * @type {UserRef}
     * @memberof ContactChangeAction
     */
    abortedBy?: UserRef;
    /**
     * 
     * @type {string}
     * @memberof ContactChangeAction
     */
    contactId: string;
    /**
     * 
     * @type {AddressBookContactDetails}
     * @memberof ContactChangeAction
     */
    contactInfo: AddressBookContactDetails;
    /**
     * 
     * @type {AddressBookContactDetails}
     * @memberof ContactChangeAction
     */
    previousContactInfo?: AddressBookContactDetails;
    /**
     * 
     * @type {string}
     * @memberof ContactChangeAction
     */
    changeRequestId: string;
    /**
     * 
     * @type {string}
     * @memberof ContactChangeAction
     */
    state: ContactChangeActionStateEnum;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof ContactChangeAction
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {VerificationRequest}
     * @memberof ContactChangeAction
     */
    verificationRequest?: VerificationRequest;
    /**
     * 
     * @type {ActionSigningRequest}
     * @memberof ContactChangeAction
     */
    deviceSigningRequest?: ActionSigningRequest;
}


/**
 * @export
 */
export const ContactChangeActionTypeEnum = {
    addressbookContactChange: 'addressbook_contact_change'
} as const;
export type ContactChangeActionTypeEnum = typeof ContactChangeActionTypeEnum[keyof typeof ContactChangeActionTypeEnum];

/**
 * @export
 */
export const ContactChangeActionStateEnum = {
    pendingVerification: 'pending_verification',
    pendingApproval: 'pending_approval',
    created: 'created',
    signed: 'signed',
    completed: 'completed',
    aborted: 'aborted'
} as const;
export type ContactChangeActionStateEnum = typeof ContactChangeActionStateEnum[keyof typeof ContactChangeActionStateEnum];


/**
 * Check if a given object implements the ContactChangeAction interface.
 */
export function instanceOfContactChangeAction(value: object): value is ContactChangeAction {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('isPending' in value) || value['isPending'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('contactId' in value) || value['contactId'] === undefined) return false;
    if (!('contactInfo' in value) || value['contactInfo'] === undefined) return false;
    if (!('changeRequestId' in value) || value['changeRequestId'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function ContactChangeActionFromJSON(json: any): ContactChangeAction {
    return ContactChangeActionFromJSONTyped(json, false);
}

export function ContactChangeActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactChangeAction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'isPending': json['is_pending'],
        'type': json['type'],
        'createdBy': UserRefFromJSON(json['created_by']),
        'abortedBy': json['aborted_by'] == null ? undefined : UserRefFromJSON(json['aborted_by']),
        'contactId': json['contact_id'],
        'contactInfo': AddressBookContactDetailsFromJSON(json['contact_info']),
        'previousContactInfo': json['previous_contact_info'] == null ? undefined : AddressBookContactDetailsFromJSON(json['previous_contact_info']),
        'changeRequestId': json['change_request_id'],
        'state': json['state'],
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'verificationRequest': json['verification_request'] == null ? undefined : VerificationRequestFromJSON(json['verification_request']),
        'deviceSigningRequest': json['device_signing_request'] == null ? undefined : ActionSigningRequestFromJSON(json['device_signing_request']),
    };
}

export function ContactChangeActionToJSON(json: any): ContactChangeAction {
    return ContactChangeActionToJSONTyped(json, false);
}

export function ContactChangeActionToJSONTyped(value?: ContactChangeAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'is_pending': value['isPending'],
        'type': value['type'],
        'created_by': UserRefToJSON(value['createdBy']),
        'aborted_by': UserRefToJSON(value['abortedBy']),
        'contact_id': value['contactId'],
        'contact_info': AddressBookContactDetailsToJSON(value['contactInfo']),
        'previous_contact_info': AddressBookContactDetailsToJSON(value['previousContactInfo']),
        'change_request_id': value['changeRequestId'],
        'state': value['state'],
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'verification_request': VerificationRequestToJSON(value['verificationRequest']),
        'device_signing_request': ActionSigningRequestToJSON(value['deviceSigningRequest']),
    };
}

