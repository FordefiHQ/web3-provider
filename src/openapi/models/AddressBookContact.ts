/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    CosmosAddressBookContact,
    instanceOfCosmosAddressBookContact,
    CosmosAddressBookContactFromJSON,
    CosmosAddressBookContactFromJSONTyped,
    CosmosAddressBookContactToJSON,
} from './CosmosAddressBookContact';
import {
    EVMAddressBookContact,
    instanceOfEVMAddressBookContact,
    EVMAddressBookContactFromJSON,
    EVMAddressBookContactFromJSONTyped,
    EVMAddressBookContactToJSON,
} from './EVMAddressBookContact';
import {
    SolanaAddressBookContact,
    instanceOfSolanaAddressBookContact,
    SolanaAddressBookContactFromJSON,
    SolanaAddressBookContactFromJSONTyped,
    SolanaAddressBookContactToJSON,
} from './SolanaAddressBookContact';
import {
    UtxoAddressBookContact,
    instanceOfUtxoAddressBookContact,
    UtxoAddressBookContactFromJSON,
    UtxoAddressBookContactFromJSONTyped,
    UtxoAddressBookContactToJSON,
} from './UtxoAddressBookContact';

/**
 * @type AddressBookContact
 * 
 * @export
 */
export type AddressBookContact = { chainType: 'cosmos' } & CosmosAddressBookContact | { chainType: 'evm' } & EVMAddressBookContact | { chainType: 'solana' } & SolanaAddressBookContact | { chainType: 'utxo' } & UtxoAddressBookContact;

export function AddressBookContactFromJSON(json: any): AddressBookContact {
    return AddressBookContactFromJSONTyped(json, false);
}

export function AddressBookContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressBookContact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['chain_type']) {
        case 'cosmos':
            return {...CosmosAddressBookContactFromJSONTyped(json, true), chainType: 'cosmos'};
        case 'evm':
            return {...EVMAddressBookContactFromJSONTyped(json, true), chainType: 'evm'};
        case 'solana':
            return {...SolanaAddressBookContactFromJSONTyped(json, true), chainType: 'solana'};
        case 'utxo':
            return {...UtxoAddressBookContactFromJSONTyped(json, true), chainType: 'utxo'};
        default:
            throw new Error(`No variant of AddressBookContact exists with 'chainType=${json['chainType']}'`);
    }
}

export function AddressBookContactToJSON(value?: AddressBookContact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['chainType']) {
        case 'cosmos':
            return CosmosAddressBookContactToJSON(value);
        case 'evm':
            return EVMAddressBookContactToJSON(value);
        case 'solana':
            return SolanaAddressBookContactToJSON(value);
        case 'utxo':
            return UtxoAddressBookContactToJSON(value);
        default:
            throw new Error(`No variant of AddressBookContact exists with 'chainType=${value['chainType']}'`);
    }

}

