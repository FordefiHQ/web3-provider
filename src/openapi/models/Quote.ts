/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssetIdentifier } from './AssetIdentifier';
import {
    AssetIdentifierFromJSON,
    AssetIdentifierFromJSONTyped,
    AssetIdentifierToJSON,
    AssetIdentifierToJSONTyped,
} from './AssetIdentifier';

/**
 * 
 * @export
 * @interface Quote
 */
export interface Quote {
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    type: QuoteTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    quoteId: string;
    /**
     * 
     * @type {AssetIdentifier}
     * @memberof Quote
     */
    inputAssetIdentifier: AssetIdentifier;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    inputAmount: string;
    /**
     * 
     * @type {AssetIdentifier}
     * @memberof Quote
     */
    outputAssetIdentifier: AssetIdentifier;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    outputAmount: string;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    slippageBps: string;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    priceImpactPct: string;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    price: string;
    /**
     * 
     * @type {Date}
     * @memberof Quote
     */
    expirationTime: Date;
}


/**
 * @export
 */
export const QuoteTypeEnum = {
    solanaTransaction: 'solana_transaction'
} as const;
export type QuoteTypeEnum = typeof QuoteTypeEnum[keyof typeof QuoteTypeEnum];


/**
 * Check if a given object implements the Quote interface.
 */
export function instanceOfQuote(value: object): value is Quote {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('quoteId' in value) || value['quoteId'] === undefined) return false;
    if (!('inputAssetIdentifier' in value) || value['inputAssetIdentifier'] === undefined) return false;
    if (!('inputAmount' in value) || value['inputAmount'] === undefined) return false;
    if (!('outputAssetIdentifier' in value) || value['outputAssetIdentifier'] === undefined) return false;
    if (!('outputAmount' in value) || value['outputAmount'] === undefined) return false;
    if (!('slippageBps' in value) || value['slippageBps'] === undefined) return false;
    if (!('priceImpactPct' in value) || value['priceImpactPct'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('expirationTime' in value) || value['expirationTime'] === undefined) return false;
    return true;
}

export function QuoteFromJSON(json: any): Quote {
    return QuoteFromJSONTyped(json, false);
}

export function QuoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Quote {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'quoteId': json['quote_id'],
        'inputAssetIdentifier': AssetIdentifierFromJSON(json['input_asset_identifier']),
        'inputAmount': json['input_amount'],
        'outputAssetIdentifier': AssetIdentifierFromJSON(json['output_asset_identifier']),
        'outputAmount': json['output_amount'],
        'slippageBps': json['slippage_bps'],
        'priceImpactPct': json['price_impact_pct'],
        'price': json['price'],
        'expirationTime': (new Date(json['expiration_time'])),
    };
}

export function QuoteToJSON(json: any): Quote {
    return QuoteToJSONTyped(json, false);
}

export function QuoteToJSONTyped(value?: Quote | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'quote_id': value['quoteId'],
        'input_asset_identifier': AssetIdentifierToJSON(value['inputAssetIdentifier']),
        'input_amount': value['inputAmount'],
        'output_asset_identifier': AssetIdentifierToJSON(value['outputAssetIdentifier']),
        'output_amount': value['outputAmount'],
        'slippage_bps': value['slippageBps'],
        'price_impact_pct': value['priceImpactPct'],
        'price': value['price'],
        'expiration_time': ((value['expirationTime']).toISOString()),
    };
}

