/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContactRef } from './ContactRef';
import {
    ContactRefFromJSON,
    ContactRefFromJSONTyped,
    ContactRefToJSON,
} from './ContactRef';
import type { VaultRef } from './VaultRef';
import {
    VaultRefFromJSON,
    VaultRefFromJSONTyped,
    VaultRefToJSON,
} from './VaultRef';

/**
 * 
 * @export
 * @interface EnrichedSuiAddress
 */
export interface EnrichedSuiAddress {
    /**
     * 
     * @type {VaultRef}
     * @memberof EnrichedSuiAddress
     */
    vault?: VaultRef;
    /**
     * 
     * @type {string}
     * @memberof EnrichedSuiAddress
     */
    explorerUrl?: string;
    /**
     * 
     * @type {ContactRef}
     * @memberof EnrichedSuiAddress
     */
    contact?: ContactRef;
    /**
     * 
     * @type {string}
     * @memberof EnrichedSuiAddress
     */
    type: EnrichedSuiAddressTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EnrichedSuiAddress
     */
    address: string;
}


/**
 * @export
 */
export const EnrichedSuiAddressTypeEnum = {
    sui: 'sui'
} as const;
export type EnrichedSuiAddressTypeEnum = typeof EnrichedSuiAddressTypeEnum[keyof typeof EnrichedSuiAddressTypeEnum];


/**
 * Check if a given object implements the EnrichedSuiAddress interface.
 */
export function instanceOfEnrichedSuiAddress(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function EnrichedSuiAddressFromJSON(json: any): EnrichedSuiAddress {
    return EnrichedSuiAddressFromJSONTyped(json, false);
}

export function EnrichedSuiAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrichedSuiAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vault': !exists(json, 'vault') ? undefined : VaultRefFromJSON(json['vault']),
        'explorerUrl': !exists(json, 'explorer_url') ? undefined : json['explorer_url'],
        'contact': !exists(json, 'contact') ? undefined : ContactRefFromJSON(json['contact']),
        'type': json['type'],
        'address': json['address'],
    };
}

export function EnrichedSuiAddressToJSON(value?: EnrichedSuiAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vault': VaultRefToJSON(value.vault),
        'explorer_url': value.explorerUrl,
        'contact': ContactRefToJSON(value.contact),
        'type': value.type,
        'address': value.address,
    };
}

