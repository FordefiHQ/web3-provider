/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    SuiCommandGasCoinArgument,
    instanceOfSuiCommandGasCoinArgument,
    SuiCommandGasCoinArgumentFromJSON,
    SuiCommandGasCoinArgumentFromJSONTyped,
    SuiCommandGasCoinArgumentToJSON,
} from './SuiCommandGasCoinArgument';
import {
    SuiCommandInputArgument,
    instanceOfSuiCommandInputArgument,
    SuiCommandInputArgumentFromJSON,
    SuiCommandInputArgumentFromJSONTyped,
    SuiCommandInputArgumentToJSON,
} from './SuiCommandInputArgument';
import {
    SuiCommandNestedResultArgument,
    instanceOfSuiCommandNestedResultArgument,
    SuiCommandNestedResultArgumentFromJSON,
    SuiCommandNestedResultArgumentFromJSONTyped,
    SuiCommandNestedResultArgumentToJSON,
} from './SuiCommandNestedResultArgument';
import {
    SuiCommandResultArgument,
    instanceOfSuiCommandResultArgument,
    SuiCommandResultArgumentFromJSON,
    SuiCommandResultArgumentFromJSONTyped,
    SuiCommandResultArgumentToJSON,
} from './SuiCommandResultArgument';

/**
 * @type SuiCommandArgument
 * 
 * @export
 */
export type SuiCommandArgument = { type: 'gas_coin' } & SuiCommandGasCoinArgument | { type: 'input' } & SuiCommandInputArgument | { type: 'nested_result' } & SuiCommandNestedResultArgument | { type: 'result' } & SuiCommandResultArgument;

export function SuiCommandArgumentFromJSON(json: any): SuiCommandArgument {
    return SuiCommandArgumentFromJSONTyped(json, false);
}

export function SuiCommandArgumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiCommandArgument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'gas_coin':
            return {...SuiCommandGasCoinArgumentFromJSONTyped(json, true), type: 'gas_coin'};
        case 'input':
            return {...SuiCommandInputArgumentFromJSONTyped(json, true), type: 'input'};
        case 'nested_result':
            return {...SuiCommandNestedResultArgumentFromJSONTyped(json, true), type: 'nested_result'};
        case 'result':
            return {...SuiCommandResultArgumentFromJSONTyped(json, true), type: 'result'};
        default:
            throw new Error(`No variant of SuiCommandArgument exists with 'type=${json['type']}'`);
    }
}

export function SuiCommandArgumentToJSON(value?: SuiCommandArgument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'gas_coin':
            return SuiCommandGasCoinArgumentToJSON(value);
        case 'input':
            return SuiCommandInputArgumentToJSON(value);
        case 'nested_result':
            return SuiCommandNestedResultArgumentToJSON(value);
        case 'result':
            return SuiCommandResultArgumentToJSON(value);
        default:
            throw new Error(`No variant of SuiCommandArgument exists with 'type=${value['type']}'`);
    }

}

