/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AddressBookConditionAnyRequest } from './AddressBookConditionAnyRequest';
import {
    instanceOfAddressBookConditionAnyRequest,
    AddressBookConditionAnyRequestFromJSON,
    AddressBookConditionAnyRequestFromJSONTyped,
    AddressBookConditionAnyRequestToJSON,
} from './AddressBookConditionAnyRequest';
import type { AddressBookConditionCustomRequest } from './AddressBookConditionCustomRequest';
import {
    instanceOfAddressBookConditionCustomRequest,
    AddressBookConditionCustomRequestFromJSON,
    AddressBookConditionCustomRequestFromJSONTyped,
    AddressBookConditionCustomRequestToJSON,
} from './AddressBookConditionCustomRequest';

/**
 * @type AddressBookConditionRequestCondition
 * 
 * @export
 */
export type AddressBookConditionRequestCondition = { type: 'any' } & AddressBookConditionAnyRequest | { type: 'custom' } & AddressBookConditionCustomRequest;

export function AddressBookConditionRequestConditionFromJSON(json: any): AddressBookConditionRequestCondition {
    return AddressBookConditionRequestConditionFromJSONTyped(json, false);
}

export function AddressBookConditionRequestConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressBookConditionRequestCondition {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'any':
            return Object.assign({}, AddressBookConditionAnyRequestFromJSONTyped(json, true), { type: 'any' } as const);
        case 'custom':
            return Object.assign({}, AddressBookConditionCustomRequestFromJSONTyped(json, true), { type: 'custom' } as const);
        default:
            throw new Error(`No variant of AddressBookConditionRequestCondition exists with 'type=${json['type']}'`);
    }
}

export function AddressBookConditionRequestConditionToJSON(json: any): any {
    return AddressBookConditionRequestConditionToJSONTyped(json, false);
}

export function AddressBookConditionRequestConditionToJSONTyped(value?: AddressBookConditionRequestCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'any':
            return Object.assign({}, AddressBookConditionAnyRequestToJSON(value), { type: 'any' } as const);
        case 'custom':
            return Object.assign({}, AddressBookConditionCustomRequestToJSON(value), { type: 'custom' } as const);
        default:
            throw new Error(`No variant of AddressBookConditionRequestCondition exists with 'type=${value['type']}'`);
    }

}

