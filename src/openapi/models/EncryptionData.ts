/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EncryptionData
 */
export interface EncryptionData {
    /**
     * 
     * @type {string}
     * @memberof EncryptionData
     */
    encryptedSessionKey: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptionData
     */
    nonce: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptionData
     */
    ciphertext: string;
}

/**
 * Check if a given object implements the EncryptionData interface.
 */
export function instanceOfEncryptionData(value: object): value is EncryptionData {
    if (!('encryptedSessionKey' in value) || value['encryptedSessionKey'] === undefined) return false;
    if (!('nonce' in value) || value['nonce'] === undefined) return false;
    if (!('ciphertext' in value) || value['ciphertext'] === undefined) return false;
    return true;
}

export function EncryptionDataFromJSON(json: any): EncryptionData {
    return EncryptionDataFromJSONTyped(json, false);
}

export function EncryptionDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncryptionData {
    if (json == null) {
        return json;
    }
    return {
        
        'encryptedSessionKey': json['encrypted_session_key'],
        'nonce': json['nonce'],
        'ciphertext': json['ciphertext'],
    };
}

export function EncryptionDataToJSON(json: any): EncryptionData {
    return EncryptionDataToJSONTyped(json, false);
}

export function EncryptionDataToJSONTyped(value?: EncryptionData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'encrypted_session_key': value['encryptedSessionKey'],
        'nonce': value['nonce'],
        'ciphertext': value['ciphertext'],
    };
}

