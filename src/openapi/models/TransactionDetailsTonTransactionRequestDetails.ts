/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    DetailsTonSerializedRawTransactionRequest,
    instanceOfDetailsTonSerializedRawTransactionRequest,
    DetailsTonSerializedRawTransactionRequestFromJSON,
    DetailsTonSerializedRawTransactionRequestFromJSONTyped,
    DetailsTonSerializedRawTransactionRequestToJSON,
} from './DetailsTonSerializedRawTransactionRequest';
import {
    DetailsTonTransferRequest,
    instanceOfDetailsTonTransferRequest,
    DetailsTonTransferRequestFromJSON,
    DetailsTonTransferRequestFromJSONTyped,
    DetailsTonTransferRequestToJSON,
} from './DetailsTonTransferRequest';

/**
 * @type TransactionDetailsTonTransactionRequestDetails
 * 
 * @export
 */
export type TransactionDetailsTonTransactionRequestDetails = { type: 'ton_contract_call_payload' } & DetailsTonSerializedRawTransactionRequest | { type: 'ton_transfer' } & DetailsTonTransferRequest;

export function TransactionDetailsTonTransactionRequestDetailsFromJSON(json: any): TransactionDetailsTonTransactionRequestDetails {
    return TransactionDetailsTonTransactionRequestDetailsFromJSONTyped(json, false);
}

export function TransactionDetailsTonTransactionRequestDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionDetailsTonTransactionRequestDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'ton_contract_call_payload':
            return {...DetailsTonSerializedRawTransactionRequestFromJSONTyped(json, true), type: 'ton_contract_call_payload'};
        case 'ton_transfer':
            return {...DetailsTonTransferRequestFromJSONTyped(json, true), type: 'ton_transfer'};
        default:
            throw new Error(`No variant of TransactionDetailsTonTransactionRequestDetails exists with 'type=${json['type']}'`);
    }
}

export function TransactionDetailsTonTransactionRequestDetailsToJSON(value?: TransactionDetailsTonTransactionRequestDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'ton_contract_call_payload':
            return DetailsTonSerializedRawTransactionRequestToJSON(value);
        case 'ton_transfer':
            return DetailsTonTransferRequestToJSON(value);
        default:
            throw new Error(`No variant of TransactionDetailsTonTransactionRequestDetails exists with 'type=${value['type']}'`);
    }

}

