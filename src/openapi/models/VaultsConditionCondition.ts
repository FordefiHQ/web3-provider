/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { VaultsConditionAny } from './VaultsConditionAny';
import {
    instanceOfVaultsConditionAny,
    VaultsConditionAnyFromJSON,
    VaultsConditionAnyFromJSONTyped,
    VaultsConditionAnyToJSON,
} from './VaultsConditionAny';
import type { VaultsConditionCustom } from './VaultsConditionCustom';
import {
    instanceOfVaultsConditionCustom,
    VaultsConditionCustomFromJSON,
    VaultsConditionCustomFromJSONTyped,
    VaultsConditionCustomToJSON,
} from './VaultsConditionCustom';

/**
 * @type VaultsConditionCondition
 * 
 * @export
 */
export type VaultsConditionCondition = { type: 'any' } & VaultsConditionAny | { type: 'custom' } & VaultsConditionCustom;

export function VaultsConditionConditionFromJSON(json: any): VaultsConditionCondition {
    return VaultsConditionConditionFromJSONTyped(json, false);
}

export function VaultsConditionConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaultsConditionCondition {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'any':
            return Object.assign({}, VaultsConditionAnyFromJSONTyped(json, true), { type: 'any' } as const);
        case 'custom':
            return Object.assign({}, VaultsConditionCustomFromJSONTyped(json, true), { type: 'custom' } as const);
        default:
            throw new Error(`No variant of VaultsConditionCondition exists with 'type=${json['type']}'`);
    }
}

export function VaultsConditionConditionToJSON(json: any): any {
    return VaultsConditionConditionToJSONTyped(json, false);
}

export function VaultsConditionConditionToJSONTyped(value?: VaultsConditionCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'any':
            return Object.assign({}, VaultsConditionAnyToJSON(value), { type: 'any' } as const);
        case 'custom':
            return Object.assign({}, VaultsConditionCustomToJSON(value), { type: 'custom' } as const);
        default:
            throw new Error(`No variant of VaultsConditionCondition exists with 'type=${value['type']}'`);
    }

}

