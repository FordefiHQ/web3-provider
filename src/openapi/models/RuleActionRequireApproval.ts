/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApprovalGroup } from './ApprovalGroup';
import {
    ApprovalGroupFromJSON,
    ApprovalGroupFromJSONTyped,
    ApprovalGroupToJSON,
    ApprovalGroupToJSONTyped,
} from './ApprovalGroup';

/**
 * 
 * @export
 * @interface RuleActionRequireApproval
 */
export interface RuleActionRequireApproval {
    /**
     * 
     * @type {string}
     * @memberof RuleActionRequireApproval
     */
    type: RuleActionRequireApprovalTypeEnum;
    /**
     * 
     * @type {Array<ApprovalGroup>}
     * @memberof RuleActionRequireApproval
     */
    approvalGroups: Array<ApprovalGroup>;
}


/**
 * @export
 */
export const RuleActionRequireApprovalTypeEnum = {
    requireApproval: 'require_approval'
} as const;
export type RuleActionRequireApprovalTypeEnum = typeof RuleActionRequireApprovalTypeEnum[keyof typeof RuleActionRequireApprovalTypeEnum];


/**
 * Check if a given object implements the RuleActionRequireApproval interface.
 */
export function instanceOfRuleActionRequireApproval(value: object): value is RuleActionRequireApproval {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('approvalGroups' in value) || value['approvalGroups'] === undefined) return false;
    return true;
}

export function RuleActionRequireApprovalFromJSON(json: any): RuleActionRequireApproval {
    return RuleActionRequireApprovalFromJSONTyped(json, false);
}

export function RuleActionRequireApprovalFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleActionRequireApproval {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'approvalGroups': ((json['approval_groups'] as Array<any>).map(ApprovalGroupFromJSON)),
    };
}

export function RuleActionRequireApprovalToJSON(json: any): RuleActionRequireApproval {
    return RuleActionRequireApprovalToJSONTyped(json, false);
}

export function RuleActionRequireApprovalToJSONTyped(value?: RuleActionRequireApproval | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'approval_groups': ((value['approvalGroups'] as Array<any>).map(ApprovalGroupToJSON)),
    };
}

