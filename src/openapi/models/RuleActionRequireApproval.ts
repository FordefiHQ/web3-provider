/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApprovalGroup } from './ApprovalGroup';
import {
    ApprovalGroupFromJSON,
    ApprovalGroupFromJSONTyped,
    ApprovalGroupToJSON,
} from './ApprovalGroup';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
} from './UserRef';

/**
 * 
 * @export
 * @interface RuleActionRequireApproval
 */
export interface RuleActionRequireApproval {
    /**
     * 
     * @type {string}
     * @memberof RuleActionRequireApproval
     */
    type: RuleActionRequireApprovalTypeEnum;
    /**
     * 
     * @type {Array<ApprovalGroup>}
     * @memberof RuleActionRequireApproval
     */
    approvalGroups?: Array<ApprovalGroup>;
    /**
     * 
     * @type {number}
     * @memberof RuleActionRequireApproval
     * @deprecated
     */
    threshold: number;
    /**
     * 
     * @type {Array<UserRef>}
     * @memberof RuleActionRequireApproval
     * @deprecated
     */
    approvers: Array<UserRef>;
}


/**
 * @export
 */
export const RuleActionRequireApprovalTypeEnum = {
    requireApproval: 'require_approval'
} as const;
export type RuleActionRequireApprovalTypeEnum = typeof RuleActionRequireApprovalTypeEnum[keyof typeof RuleActionRequireApprovalTypeEnum];


/**
 * Check if a given object implements the RuleActionRequireApproval interface.
 */
export function instanceOfRuleActionRequireApproval(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "threshold" in value;
    isInstance = isInstance && "approvers" in value;

    return isInstance;
}

export function RuleActionRequireApprovalFromJSON(json: any): RuleActionRequireApproval {
    return RuleActionRequireApprovalFromJSONTyped(json, false);
}

export function RuleActionRequireApprovalFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleActionRequireApproval {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'approvalGroups': !exists(json, 'approval_groups') ? undefined : ((json['approval_groups'] as Array<any>).map(ApprovalGroupFromJSON)),
        'threshold': json['threshold'],
        'approvers': ((json['approvers'] as Array<any>).map(UserRefFromJSON)),
    };
}

export function RuleActionRequireApprovalToJSON(value?: RuleActionRequireApproval | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'approval_groups': value.approvalGroups === undefined ? undefined : ((value.approvalGroups as Array<any>).map(ApprovalGroupToJSON)),
        'threshold': value.threshold,
        'approvers': ((value.approvers as Array<any>).map(UserRefToJSON)),
    };
}

