/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EcdsaSignature } from './EcdsaSignature';
import {
    EcdsaSignatureFromJSON,
    EcdsaSignatureFromJSONTyped,
    EcdsaSignatureToJSON,
    EcdsaSignatureToJSONTyped,
} from './EcdsaSignature';

/**
 * 
 * @export
 * @interface BlackBoxSignatureEcdsaStarkDetails
 */
export interface BlackBoxSignatureEcdsaStarkDetails {
    /**
     * 
     * @type {string}
     * @memberof BlackBoxSignatureEcdsaStarkDetails
     */
    type: BlackBoxSignatureEcdsaStarkDetailsTypeEnum;
    /**
     * 
     * @type {EcdsaSignature}
     * @memberof BlackBoxSignatureEcdsaStarkDetails
     */
    signature?: EcdsaSignature;
    /**
     * 
     * @type {string}
     * @memberof BlackBoxSignatureEcdsaStarkDetails
     */
    hashBinary: string;
    /**
     * 
     * @type {string}
     * @memberof BlackBoxSignatureEcdsaStarkDetails
     * @deprecated
     */
    hashInteger: string;
}


/**
 * @export
 */
export const BlackBoxSignatureEcdsaStarkDetailsTypeEnum = {
    ecdsaStark: 'ecdsa_stark'
} as const;
export type BlackBoxSignatureEcdsaStarkDetailsTypeEnum = typeof BlackBoxSignatureEcdsaStarkDetailsTypeEnum[keyof typeof BlackBoxSignatureEcdsaStarkDetailsTypeEnum];


/**
 * Check if a given object implements the BlackBoxSignatureEcdsaStarkDetails interface.
 */
export function instanceOfBlackBoxSignatureEcdsaStarkDetails(value: object): value is BlackBoxSignatureEcdsaStarkDetails {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('hashBinary' in value) || value['hashBinary'] === undefined) return false;
    if (!('hashInteger' in value) || value['hashInteger'] === undefined) return false;
    return true;
}

export function BlackBoxSignatureEcdsaStarkDetailsFromJSON(json: any): BlackBoxSignatureEcdsaStarkDetails {
    return BlackBoxSignatureEcdsaStarkDetailsFromJSONTyped(json, false);
}

export function BlackBoxSignatureEcdsaStarkDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlackBoxSignatureEcdsaStarkDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'signature': json['signature'] == null ? undefined : EcdsaSignatureFromJSON(json['signature']),
        'hashBinary': json['hash_binary'],
        'hashInteger': json['hash_integer'],
    };
}

export function BlackBoxSignatureEcdsaStarkDetailsToJSON(json: any): BlackBoxSignatureEcdsaStarkDetails {
    return BlackBoxSignatureEcdsaStarkDetailsToJSONTyped(json, false);
}

export function BlackBoxSignatureEcdsaStarkDetailsToJSONTyped(value?: BlackBoxSignatureEcdsaStarkDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'signature': EcdsaSignatureToJSON(value['signature']),
        'hash_binary': value['hashBinary'],
        'hash_integer': value['hashInteger'],
    };
}

