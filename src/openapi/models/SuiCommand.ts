/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    SuiMakeMoveVecCommand,
    instanceOfSuiMakeMoveVecCommand,
    SuiMakeMoveVecCommandFromJSON,
    SuiMakeMoveVecCommandFromJSONTyped,
    SuiMakeMoveVecCommandToJSON,
} from './SuiMakeMoveVecCommand';
import {
    SuiMergeCoinsCommand,
    instanceOfSuiMergeCoinsCommand,
    SuiMergeCoinsCommandFromJSON,
    SuiMergeCoinsCommandFromJSONTyped,
    SuiMergeCoinsCommandToJSON,
} from './SuiMergeCoinsCommand';
import {
    SuiMoveCallCommand,
    instanceOfSuiMoveCallCommand,
    SuiMoveCallCommandFromJSON,
    SuiMoveCallCommandFromJSONTyped,
    SuiMoveCallCommandToJSON,
} from './SuiMoveCallCommand';
import {
    SuiSplitCoinsCommand,
    instanceOfSuiSplitCoinsCommand,
    SuiSplitCoinsCommandFromJSON,
    SuiSplitCoinsCommandFromJSONTyped,
    SuiSplitCoinsCommandToJSON,
} from './SuiSplitCoinsCommand';
import {
    SuiTransferObjectsCommand,
    instanceOfSuiTransferObjectsCommand,
    SuiTransferObjectsCommandFromJSON,
    SuiTransferObjectsCommandFromJSONTyped,
    SuiTransferObjectsCommandToJSON,
} from './SuiTransferObjectsCommand';

/**
 * @type SuiCommand
 * 
 * @export
 */
export type SuiCommand = { type: 'make_move_vec' } & SuiMakeMoveVecCommand | { type: 'merge_coins' } & SuiMergeCoinsCommand | { type: 'move_call' } & SuiMoveCallCommand | { type: 'split_coins' } & SuiSplitCoinsCommand | { type: 'transfer_objects' } & SuiTransferObjectsCommand;

export function SuiCommandFromJSON(json: any): SuiCommand {
    return SuiCommandFromJSONTyped(json, false);
}

export function SuiCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiCommand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'make_move_vec':
            return {...SuiMakeMoveVecCommandFromJSONTyped(json, true), type: 'make_move_vec'};
        case 'merge_coins':
            return {...SuiMergeCoinsCommandFromJSONTyped(json, true), type: 'merge_coins'};
        case 'move_call':
            return {...SuiMoveCallCommandFromJSONTyped(json, true), type: 'move_call'};
        case 'split_coins':
            return {...SuiSplitCoinsCommandFromJSONTyped(json, true), type: 'split_coins'};
        case 'transfer_objects':
            return {...SuiTransferObjectsCommandFromJSONTyped(json, true), type: 'transfer_objects'};
        default:
            throw new Error(`No variant of SuiCommand exists with 'type=${json['type']}'`);
    }
}

export function SuiCommandToJSON(value?: SuiCommand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'make_move_vec':
            return SuiMakeMoveVecCommandToJSON(value);
        case 'merge_coins':
            return SuiMergeCoinsCommandToJSON(value);
        case 'move_call':
            return SuiMoveCallCommandToJSON(value);
        case 'split_coins':
            return SuiSplitCoinsCommandToJSON(value);
        case 'transfer_objects':
            return SuiTransferObjectsCommandToJSON(value);
        default:
            throw new Error(`No variant of SuiCommand exists with 'type=${value['type']}'`);
    }

}

