/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TonAddressRequest } from './TonAddressRequest';
import {
    TonAddressRequestFromJSON,
    TonAddressRequestFromJSONTyped,
    TonAddressRequestToJSON,
} from './TonAddressRequest';

/**
 * 
 * @export
 * @interface TonJettonAssetIdentifierRequest
 */
export interface TonJettonAssetIdentifierRequest {
    /**
     * 
     * @type {string}
     * @memberof TonJettonAssetIdentifierRequest
     */
    type: TonJettonAssetIdentifierRequestTypeEnum;
    /**
     * 
     * @type {TonAddressRequest}
     * @memberof TonJettonAssetIdentifierRequest
     */
    jetton: TonAddressRequest;
}


/**
 * @export
 */
export const TonJettonAssetIdentifierRequestTypeEnum = {
    jetton: 'jetton'
} as const;
export type TonJettonAssetIdentifierRequestTypeEnum = typeof TonJettonAssetIdentifierRequestTypeEnum[keyof typeof TonJettonAssetIdentifierRequestTypeEnum];


/**
 * Check if a given object implements the TonJettonAssetIdentifierRequest interface.
 */
export function instanceOfTonJettonAssetIdentifierRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "jetton" in value;

    return isInstance;
}

export function TonJettonAssetIdentifierRequestFromJSON(json: any): TonJettonAssetIdentifierRequest {
    return TonJettonAssetIdentifierRequestFromJSONTyped(json, false);
}

export function TonJettonAssetIdentifierRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TonJettonAssetIdentifierRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'jetton': TonAddressRequestFromJSON(json['jetton']),
    };
}

export function TonJettonAssetIdentifierRequestToJSON(value?: TonJettonAssetIdentifierRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'jetton': TonAddressRequestToJSON(value.jetton),
    };
}

