/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExchangeType } from './ExchangeType';
import {
    ExchangeTypeFromJSON,
    ExchangeTypeFromJSONTyped,
    ExchangeTypeToJSON,
    ExchangeTypeToJSONTyped,
} from './ExchangeType';

/**
 * 
 * @export
 * @interface ExchangeAssetMappingRequest
 */
export interface ExchangeAssetMappingRequest {
    /**
     * 
     * @type {ExchangeType}
     * @memberof ExchangeAssetMappingRequest
     */
    exchangeType: ExchangeType;
    /**
     * 
     * @type {string}
     * @memberof ExchangeAssetMappingRequest
     */
    exchangeAssetId: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangeAssetMappingRequest
     */
    blockchainAssetId: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangeAssetMappingRequest
     */
    exchangeChainSymbol: string;
}



/**
 * Check if a given object implements the ExchangeAssetMappingRequest interface.
 */
export function instanceOfExchangeAssetMappingRequest(value: object): value is ExchangeAssetMappingRequest {
    if (!('exchangeType' in value) || value['exchangeType'] === undefined) return false;
    if (!('exchangeAssetId' in value) || value['exchangeAssetId'] === undefined) return false;
    if (!('blockchainAssetId' in value) || value['blockchainAssetId'] === undefined) return false;
    if (!('exchangeChainSymbol' in value) || value['exchangeChainSymbol'] === undefined) return false;
    return true;
}

export function ExchangeAssetMappingRequestFromJSON(json: any): ExchangeAssetMappingRequest {
    return ExchangeAssetMappingRequestFromJSONTyped(json, false);
}

export function ExchangeAssetMappingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangeAssetMappingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'exchangeType': ExchangeTypeFromJSON(json['exchange_type']),
        'exchangeAssetId': json['exchange_asset_id'],
        'blockchainAssetId': json['blockchain_asset_id'],
        'exchangeChainSymbol': json['exchange_chain_symbol'],
    };
}

export function ExchangeAssetMappingRequestToJSON(json: any): ExchangeAssetMappingRequest {
    return ExchangeAssetMappingRequestToJSONTyped(json, false);
}

export function ExchangeAssetMappingRequestToJSONTyped(value?: ExchangeAssetMappingRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'exchange_type': ExchangeTypeToJSON(value['exchangeType']),
        'exchange_asset_id': value['exchangeAssetId'],
        'blockchain_asset_id': value['blockchainAssetId'],
        'exchange_chain_symbol': value['exchangeChainSymbol'],
    };
}

