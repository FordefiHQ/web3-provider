/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrganizationType } from './OrganizationType';
import {
    OrganizationTypeFromJSON,
    OrganizationTypeFromJSONTyped,
    OrganizationTypeToJSON,
    OrganizationTypeToJSONTyped,
} from './OrganizationType';

/**
 * 
 * @export
 * @interface UpdateOrganizationRequest
 */
export interface UpdateOrganizationRequest {
    /**
     * 
     * @type {OrganizationType}
     * @memberof UpdateOrganizationRequest
     */
    organizationType?: OrganizationType;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateOrganizationRequest
     */
    isDeprecated?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateOrganizationRequest
     */
    allowDeterministicSigning?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateOrganizationRequest
     */
    daysTillBackupExpires?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateOrganizationRequest
     */
    shouldResetBackup?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateOrganizationRequest
     */
    crmId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateOrganizationRequest
     */
    setDustTransactionDetection?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateOrganizationRequest
     */
    setDustTransactionThreshold?: number;
}



/**
 * Check if a given object implements the UpdateOrganizationRequest interface.
 */
export function instanceOfUpdateOrganizationRequest(value: object): value is UpdateOrganizationRequest {
    return true;
}

export function UpdateOrganizationRequestFromJSON(json: any): UpdateOrganizationRequest {
    return UpdateOrganizationRequestFromJSONTyped(json, false);
}

export function UpdateOrganizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrganizationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'organizationType': json['organization_type'] == null ? undefined : OrganizationTypeFromJSON(json['organization_type']),
        'isDeprecated': json['is_deprecated'] == null ? undefined : json['is_deprecated'],
        'name': json['name'] == null ? undefined : json['name'],
        'allowDeterministicSigning': json['allow_deterministic_signing'] == null ? undefined : json['allow_deterministic_signing'],
        'daysTillBackupExpires': json['days_till_backup_expires'] == null ? undefined : json['days_till_backup_expires'],
        'shouldResetBackup': json['should_reset_backup'] == null ? undefined : json['should_reset_backup'],
        'crmId': json['crm_id'] == null ? undefined : json['crm_id'],
        'setDustTransactionDetection': json['set_dust_transaction_detection'] == null ? undefined : json['set_dust_transaction_detection'],
        'setDustTransactionThreshold': json['set_dust_transaction_threshold'] == null ? undefined : json['set_dust_transaction_threshold'],
    };
}

export function UpdateOrganizationRequestToJSON(json: any): UpdateOrganizationRequest {
    return UpdateOrganizationRequestToJSONTyped(json, false);
}

export function UpdateOrganizationRequestToJSONTyped(value?: UpdateOrganizationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization_type': OrganizationTypeToJSON(value['organizationType']),
        'is_deprecated': value['isDeprecated'],
        'name': value['name'],
        'allow_deterministic_signing': value['allowDeterministicSigning'],
        'days_till_backup_expires': value['daysTillBackupExpires'],
        'should_reset_backup': value['shouldResetBackup'],
        'crm_id': value['crmId'],
        'set_dust_transaction_detection': value['setDustTransactionDetection'],
        'set_dust_transaction_threshold': value['setDustTransactionThreshold'],
    };
}

