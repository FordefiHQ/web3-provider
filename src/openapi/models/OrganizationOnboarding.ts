/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OnboardingType } from './OnboardingType';
import {
    OnboardingTypeFromJSON,
    OnboardingTypeFromJSONTyped,
    OnboardingTypeToJSON,
} from './OnboardingType';

/**
 * 
 * @export
 * @interface OrganizationOnboarding
 */
export interface OrganizationOnboarding {
    /**
     * 
     * @type {string}
     * @memberof OrganizationOnboarding
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationOnboarding
     */
    organizationName: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationOnboarding
     */
    deviceId: string;
    /**
     * 
     * @type {OnboardingType}
     * @memberof OrganizationOnboarding
     */
    onboardingType: OnboardingType;
    /**
     * 
     * @type {Date}
     * @memberof OrganizationOnboarding
     */
    invitedToOrganizationAt: Date;
}

/**
 * Check if a given object implements the OrganizationOnboarding interface.
 */
export function instanceOfOrganizationOnboarding(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "organizationId" in value;
    isInstance = isInstance && "organizationName" in value;
    isInstance = isInstance && "deviceId" in value;
    isInstance = isInstance && "onboardingType" in value;
    isInstance = isInstance && "invitedToOrganizationAt" in value;

    return isInstance;
}

export function OrganizationOnboardingFromJSON(json: any): OrganizationOnboarding {
    return OrganizationOnboardingFromJSONTyped(json, false);
}

export function OrganizationOnboardingFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationOnboarding {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organizationId': json['organization_id'],
        'organizationName': json['organization_name'],
        'deviceId': json['device_id'],
        'onboardingType': OnboardingTypeFromJSON(json['onboarding_type']),
        'invitedToOrganizationAt': (new Date(json['invited_to_organization_at'])),
    };
}

export function OrganizationOnboardingToJSON(value?: OrganizationOnboarding | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organization_id': value.organizationId,
        'organization_name': value.organizationName,
        'device_id': value.deviceId,
        'onboarding_type': OnboardingTypeToJSON(value.onboardingType),
        'invited_to_organization_at': (value.invitedToOrganizationAt.toISOString()),
    };
}

