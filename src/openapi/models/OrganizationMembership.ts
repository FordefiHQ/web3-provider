/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImportKeysStatus } from './ImportKeysStatus';
import {
    ImportKeysStatusFromJSON,
    ImportKeysStatusFromJSONTyped,
    ImportKeysStatusToJSON,
    ImportKeysStatusToJSONTyped,
} from './ImportKeysStatus';
import type { UserState } from './UserState';
import {
    UserStateFromJSON,
    UserStateFromJSONTyped,
    UserStateToJSON,
    UserStateToJSONTyped,
} from './UserState';
import type { UserRole } from './UserRole';
import {
    UserRoleFromJSON,
    UserRoleFromJSONTyped,
    UserRoleToJSON,
    UserRoleToJSONTyped,
} from './UserRole';

/**
 * 
 * @export
 * @interface OrganizationMembership
 */
export interface OrganizationMembership {
    /**
     * 
     * @type {string}
     * @memberof OrganizationMembership
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationMembership
     */
    organizationName: string;
    /**
     * 
     * @type {UserState}
     * @memberof OrganizationMembership
     */
    state: UserState;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMembership
     */
    isNewDeviceProvisioning: boolean;
    /**
     * 
     * @type {UserRole}
     * @memberof OrganizationMembership
     */
    role?: UserRole;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMembership
     */
    isEndUsersSupportedOrganization: boolean;
    /**
     * 
     * @type {Date}
     * @memberof OrganizationMembership
     */
    organizationActivatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof OrganizationMembership
     */
    daysLeftToBackup?: number;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMembership
     */
    organizationHasBackup: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganizationMembership
     */
    activeDeviceId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMembership
     */
    isTrustedForCurrentWebDevice?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMembership
     */
    hasTrustedWebDevices?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMembership
     */
    isImportOrganization?: boolean;
    /**
     * 
     * @type {ImportKeysStatus}
     * @memberof OrganizationMembership
     */
    importKeysStatus?: ImportKeysStatus;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMembership
     */
    allowVaultCreationInImportOrganization?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganizationMembership
     */
    encryptedOrgKey?: string;
}



/**
 * Check if a given object implements the OrganizationMembership interface.
 */
export function instanceOfOrganizationMembership(value: object): value is OrganizationMembership {
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('organizationName' in value) || value['organizationName'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('isNewDeviceProvisioning' in value) || value['isNewDeviceProvisioning'] === undefined) return false;
    if (!('isEndUsersSupportedOrganization' in value) || value['isEndUsersSupportedOrganization'] === undefined) return false;
    if (!('organizationHasBackup' in value) || value['organizationHasBackup'] === undefined) return false;
    return true;
}

export function OrganizationMembershipFromJSON(json: any): OrganizationMembership {
    return OrganizationMembershipFromJSONTyped(json, false);
}

export function OrganizationMembershipFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationMembership {
    if (json == null) {
        return json;
    }
    return {
        
        'organizationId': json['organization_id'],
        'organizationName': json['organization_name'],
        'state': UserStateFromJSON(json['state']),
        'isNewDeviceProvisioning': json['is_new_device_provisioning'],
        'role': json['role'] == null ? undefined : UserRoleFromJSON(json['role']),
        'isEndUsersSupportedOrganization': json['is_end_users_supported_organization'],
        'organizationActivatedAt': json['organization_activated_at'] == null ? undefined : (new Date(json['organization_activated_at'])),
        'daysLeftToBackup': json['days_left_to_backup'] == null ? undefined : json['days_left_to_backup'],
        'organizationHasBackup': json['organization_has_backup'],
        'activeDeviceId': json['active_device_id'] == null ? undefined : json['active_device_id'],
        'isTrustedForCurrentWebDevice': json['is_trusted_for_current_web_device'] == null ? undefined : json['is_trusted_for_current_web_device'],
        'hasTrustedWebDevices': json['has_trusted_web_devices'] == null ? undefined : json['has_trusted_web_devices'],
        'isImportOrganization': json['is_import_organization'] == null ? undefined : json['is_import_organization'],
        'importKeysStatus': json['import_keys_status'] == null ? undefined : ImportKeysStatusFromJSON(json['import_keys_status']),
        'allowVaultCreationInImportOrganization': json['allow_vault_creation_in_import_organization'] == null ? undefined : json['allow_vault_creation_in_import_organization'],
        'encryptedOrgKey': json['encrypted_org_key'] == null ? undefined : json['encrypted_org_key'],
    };
}

export function OrganizationMembershipToJSON(json: any): OrganizationMembership {
    return OrganizationMembershipToJSONTyped(json, false);
}

export function OrganizationMembershipToJSONTyped(value?: OrganizationMembership | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization_id': value['organizationId'],
        'organization_name': value['organizationName'],
        'state': UserStateToJSON(value['state']),
        'is_new_device_provisioning': value['isNewDeviceProvisioning'],
        'role': UserRoleToJSON(value['role']),
        'is_end_users_supported_organization': value['isEndUsersSupportedOrganization'],
        'organization_activated_at': value['organizationActivatedAt'] == null ? undefined : ((value['organizationActivatedAt']).toISOString()),
        'days_left_to_backup': value['daysLeftToBackup'],
        'organization_has_backup': value['organizationHasBackup'],
        'active_device_id': value['activeDeviceId'],
        'is_trusted_for_current_web_device': value['isTrustedForCurrentWebDevice'],
        'has_trusted_web_devices': value['hasTrustedWebDevices'],
        'is_import_organization': value['isImportOrganization'],
        'import_keys_status': ImportKeysStatusToJSON(value['importKeysStatus']),
        'allow_vault_creation_in_import_organization': value['allowVaultCreationInImportOrganization'],
        'encrypted_org_key': value['encryptedOrgKey'],
    };
}

