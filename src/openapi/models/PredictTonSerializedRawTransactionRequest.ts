/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TonChainUniqueId } from './TonChainUniqueId';
import {
    TonChainUniqueIdFromJSON,
    TonChainUniqueIdFromJSONTyped,
    TonChainUniqueIdToJSON,
    TonChainUniqueIdToJSONTyped,
} from './TonChainUniqueId';
import type { TonTransactionPayload } from './TonTransactionPayload';
import {
    TonTransactionPayloadFromJSON,
    TonTransactionPayloadFromJSONTyped,
    TonTransactionPayloadToJSON,
    TonTransactionPayloadToJSONTyped,
} from './TonTransactionPayload';
import type { PushMode } from './PushMode';
import {
    PushModeFromJSON,
    PushModeFromJSONTyped,
    PushModeToJSON,
    PushModeToJSONTyped,
} from './PushMode';

/**
 * 
 * @export
 * @interface PredictTonSerializedRawTransactionRequest
 */
export interface PredictTonSerializedRawTransactionRequest {
    /**
     * 
     * @type {string}
     * @memberof PredictTonSerializedRawTransactionRequest
     */
    type: PredictTonSerializedRawTransactionRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof PredictTonSerializedRawTransactionRequest
     */
    failOnPredictionFailure?: boolean;
    /**
     * 
     * @type {PushMode}
     * @memberof PredictTonSerializedRawTransactionRequest
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {TonChainUniqueId}
     * @memberof PredictTonSerializedRawTransactionRequest
     */
    chain: TonChainUniqueId;
    /**
     * 
     * @type {TonTransactionPayload}
     * @memberof PredictTonSerializedRawTransactionRequest
     */
    transactionPayload: TonTransactionPayload;
    /**
     * 
     * @type {boolean}
     * @memberof PredictTonSerializedRawTransactionRequest
     */
    skipSimulation?: boolean;
}


/**
 * @export
 */
export const PredictTonSerializedRawTransactionRequestTypeEnum = {
    tonRawTransaction: 'ton_raw_transaction'
} as const;
export type PredictTonSerializedRawTransactionRequestTypeEnum = typeof PredictTonSerializedRawTransactionRequestTypeEnum[keyof typeof PredictTonSerializedRawTransactionRequestTypeEnum];


/**
 * Check if a given object implements the PredictTonSerializedRawTransactionRequest interface.
 */
export function instanceOfPredictTonSerializedRawTransactionRequest(value: object): value is PredictTonSerializedRawTransactionRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('transactionPayload' in value) || value['transactionPayload'] === undefined) return false;
    return true;
}

export function PredictTonSerializedRawTransactionRequestFromJSON(json: any): PredictTonSerializedRawTransactionRequest {
    return PredictTonSerializedRawTransactionRequestFromJSONTyped(json, false);
}

export function PredictTonSerializedRawTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictTonSerializedRawTransactionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'failOnPredictionFailure': json['fail_on_prediction_failure'] == null ? undefined : json['fail_on_prediction_failure'],
        'pushMode': json['push_mode'] == null ? undefined : PushModeFromJSON(json['push_mode']),
        'chain': TonChainUniqueIdFromJSON(json['chain']),
        'transactionPayload': TonTransactionPayloadFromJSON(json['transaction_payload']),
        'skipSimulation': json['skip_simulation'] == null ? undefined : json['skip_simulation'],
    };
}

export function PredictTonSerializedRawTransactionRequestToJSON(json: any): PredictTonSerializedRawTransactionRequest {
    return PredictTonSerializedRawTransactionRequestToJSONTyped(json, false);
}

export function PredictTonSerializedRawTransactionRequestToJSONTyped(value?: PredictTonSerializedRawTransactionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'fail_on_prediction_failure': value['failOnPredictionFailure'],
        'push_mode': PushModeToJSON(value['pushMode']),
        'chain': TonChainUniqueIdToJSON(value['chain']),
        'transaction_payload': TonTransactionPayloadToJSON(value['transactionPayload']),
        'skip_simulation': value['skipSimulation'],
    };
}

