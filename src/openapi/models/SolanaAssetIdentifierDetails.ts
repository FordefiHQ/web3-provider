/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SolanaNativeAssetIdentifierRequest } from './SolanaNativeAssetIdentifierRequest';
import {
    SolanaNativeAssetIdentifierRequestFromJSONTyped,
    SolanaNativeAssetIdentifierRequestToJSON,
} from './SolanaNativeAssetIdentifierRequest';
import type { SolanaSplTokenAssetIdentifierRequest } from './SolanaSplTokenAssetIdentifierRequest';
import {
    SolanaSplTokenAssetIdentifierRequestFromJSONTyped,
    SolanaSplTokenAssetIdentifierRequestToJSON,
} from './SolanaSplTokenAssetIdentifierRequest';

/**
 * 
 * @export
 * @type SolanaAssetIdentifierDetails
 */
export type SolanaAssetIdentifierDetails = { type: 'native' } & SolanaNativeAssetIdentifierRequest | { type: 'spl_token' } & SolanaSplTokenAssetIdentifierRequest;

export function SolanaAssetIdentifierDetailsFromJSON(json: any): SolanaAssetIdentifierDetails {
    return SolanaAssetIdentifierDetailsFromJSONTyped(json, false);
}

function SolanaAssetIdentifierDetailsFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SolanaAssetIdentifierDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'native':
            return Object.assign({}, SolanaNativeAssetIdentifierRequestFromJSONTyped(json, true), { type: 'native' } as const);
        case 'spl_token':
            return Object.assign({}, SolanaSplTokenAssetIdentifierRequestFromJSONTyped(json, true), { type: 'spl_token' } as const);
        default:
            throw new Error(`No variant of SolanaAssetIdentifierDetails exists with 'type=${json['type']}'`);
    }
}

export function SolanaAssetIdentifierDetailsToJSON(json: any): any {
    return SolanaAssetIdentifierDetailsToJSONTyped(json, false);
}

function SolanaAssetIdentifierDetailsToJSONTyped(value?: SolanaAssetIdentifierDetails | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'native':
            return Object.assign({}, SolanaNativeAssetIdentifierRequestToJSON(value), { type: 'native' } as const);
        case 'spl_token':
            return Object.assign({}, SolanaSplTokenAssetIdentifierRequestToJSON(value), { type: 'spl_token' } as const);
        default:
            throw new Error(`No variant of SolanaAssetIdentifierDetails exists with 'type=${value['type']}'`);
    }

}

