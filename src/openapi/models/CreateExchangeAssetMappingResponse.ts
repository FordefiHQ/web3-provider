/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssetIdentifier } from './AssetIdentifier';
import {
    AssetIdentifierFromJSON,
    AssetIdentifierFromJSONTyped,
    AssetIdentifierToJSON,
    AssetIdentifierToJSONTyped,
} from './AssetIdentifier';
import type { AssetInfo } from './AssetInfo';
import {
    AssetInfoFromJSON,
    AssetInfoFromJSONTyped,
    AssetInfoToJSON,
    AssetInfoToJSONTyped,
} from './AssetInfo';
import type { ExchangeType } from './ExchangeType';
import {
    ExchangeTypeFromJSON,
    ExchangeTypeFromJSONTyped,
    ExchangeTypeToJSON,
    ExchangeTypeToJSONTyped,
} from './ExchangeType';

/**
 * 
 * @export
 * @interface CreateExchangeAssetMappingResponse
 */
export interface CreateExchangeAssetMappingResponse {
    /**
     * 
     * @type {string}
     * @memberof CreateExchangeAssetMappingResponse
     */
    id: string;
    /**
     * 
     * @type {ExchangeType}
     * @memberof CreateExchangeAssetMappingResponse
     */
    exchangeType: ExchangeType;
    /**
     * 
     * @type {string}
     * @memberof CreateExchangeAssetMappingResponse
     */
    blockchainAssetId: string;
    /**
     * 
     * @type {AssetIdentifier}
     * @memberof CreateExchangeAssetMappingResponse
     */
    blockchainAssetIdentifier: AssetIdentifier;
    /**
     * 
     * @type {string}
     * @memberof CreateExchangeAssetMappingResponse
     */
    exchangeAssetId: string;
    /**
     * 
     * @type {AssetInfo}
     * @memberof CreateExchangeAssetMappingResponse
     */
    exchangeAssetInfo: AssetInfo;
    /**
     * 
     * @type {string}
     * @memberof CreateExchangeAssetMappingResponse
     */
    exchangeChainSymbol: string;
}



/**
 * Check if a given object implements the CreateExchangeAssetMappingResponse interface.
 */
export function instanceOfCreateExchangeAssetMappingResponse(value: object): value is CreateExchangeAssetMappingResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('exchangeType' in value) || value['exchangeType'] === undefined) return false;
    if (!('blockchainAssetId' in value) || value['blockchainAssetId'] === undefined) return false;
    if (!('blockchainAssetIdentifier' in value) || value['blockchainAssetIdentifier'] === undefined) return false;
    if (!('exchangeAssetId' in value) || value['exchangeAssetId'] === undefined) return false;
    if (!('exchangeAssetInfo' in value) || value['exchangeAssetInfo'] === undefined) return false;
    if (!('exchangeChainSymbol' in value) || value['exchangeChainSymbol'] === undefined) return false;
    return true;
}

export function CreateExchangeAssetMappingResponseFromJSON(json: any): CreateExchangeAssetMappingResponse {
    return CreateExchangeAssetMappingResponseFromJSONTyped(json, false);
}

export function CreateExchangeAssetMappingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateExchangeAssetMappingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'exchangeType': ExchangeTypeFromJSON(json['exchange_type']),
        'blockchainAssetId': json['blockchain_asset_id'],
        'blockchainAssetIdentifier': AssetIdentifierFromJSON(json['blockchain_asset_identifier']),
        'exchangeAssetId': json['exchange_asset_id'],
        'exchangeAssetInfo': AssetInfoFromJSON(json['exchange_asset_info']),
        'exchangeChainSymbol': json['exchange_chain_symbol'],
    };
}

export function CreateExchangeAssetMappingResponseToJSON(json: any): CreateExchangeAssetMappingResponse {
    return CreateExchangeAssetMappingResponseToJSONTyped(json, false);
}

export function CreateExchangeAssetMappingResponseToJSONTyped(value?: CreateExchangeAssetMappingResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'exchange_type': ExchangeTypeToJSON(value['exchangeType']),
        'blockchain_asset_id': value['blockchainAssetId'],
        'blockchain_asset_identifier': AssetIdentifierToJSON(value['blockchainAssetIdentifier']),
        'exchange_asset_id': value['exchangeAssetId'],
        'exchange_asset_info': AssetInfoToJSON(value['exchangeAssetInfo']),
        'exchange_chain_symbol': value['exchangeChainSymbol'],
    };
}

