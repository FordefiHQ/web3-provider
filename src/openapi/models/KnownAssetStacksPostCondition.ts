/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
    PricedAssetToJSONTyped,
} from './PricedAsset';
import type { StacksPostConditionComparator } from './StacksPostConditionComparator';
import {
    StacksPostConditionComparatorFromJSON,
    StacksPostConditionComparatorFromJSONTyped,
    StacksPostConditionComparatorToJSON,
    StacksPostConditionComparatorToJSONTyped,
} from './StacksPostConditionComparator';
import type { EnrichedStacksAddress } from './EnrichedStacksAddress';
import {
    EnrichedStacksAddressFromJSON,
    EnrichedStacksAddressFromJSONTyped,
    EnrichedStacksAddressToJSON,
    EnrichedStacksAddressToJSONTyped,
} from './EnrichedStacksAddress';

/**
 * 
 * @export
 * @interface KnownAssetStacksPostCondition
 */
export interface KnownAssetStacksPostCondition {
    /**
     * 
     * @type {EnrichedStacksAddress}
     * @memberof KnownAssetStacksPostCondition
     */
    address: EnrichedStacksAddress;
    /**
     * 
     * @type {StacksPostConditionComparator}
     * @memberof KnownAssetStacksPostCondition
     */
    conditionCode: StacksPostConditionComparator;
    /**
     * 
     * @type {string}
     * @memberof KnownAssetStacksPostCondition
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof KnownAssetStacksPostCondition
     */
    type: KnownAssetStacksPostConditionTypeEnum;
    /**
     * 
     * @type {PricedAsset}
     * @memberof KnownAssetStacksPostCondition
     */
    pricedAsset: PricedAsset;
}


/**
 * @export
 */
export const KnownAssetStacksPostConditionTypeEnum = {
    knownAsset: 'known_asset'
} as const;
export type KnownAssetStacksPostConditionTypeEnum = typeof KnownAssetStacksPostConditionTypeEnum[keyof typeof KnownAssetStacksPostConditionTypeEnum];


/**
 * Check if a given object implements the KnownAssetStacksPostCondition interface.
 */
export function instanceOfKnownAssetStacksPostCondition(value: object): value is KnownAssetStacksPostCondition {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('conditionCode' in value) || value['conditionCode'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('pricedAsset' in value) || value['pricedAsset'] === undefined) return false;
    return true;
}

export function KnownAssetStacksPostConditionFromJSON(json: any): KnownAssetStacksPostCondition {
    return KnownAssetStacksPostConditionFromJSONTyped(json, false);
}

export function KnownAssetStacksPostConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): KnownAssetStacksPostCondition {
    if (json == null) {
        return json;
    }
    return {
        
        'address': EnrichedStacksAddressFromJSON(json['address']),
        'conditionCode': StacksPostConditionComparatorFromJSON(json['condition_code']),
        'amount': json['amount'],
        'type': json['type'],
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
    };
}

export function KnownAssetStacksPostConditionToJSON(json: any): KnownAssetStacksPostCondition {
    return KnownAssetStacksPostConditionToJSONTyped(json, false);
}

export function KnownAssetStacksPostConditionToJSONTyped(value?: KnownAssetStacksPostCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': EnrichedStacksAddressToJSON(value['address']),
        'condition_code': StacksPostConditionComparatorToJSON(value['conditionCode']),
        'amount': value['amount'],
        'type': value['type'],
        'priced_asset': PricedAssetToJSON(value['pricedAsset']),
    };
}

