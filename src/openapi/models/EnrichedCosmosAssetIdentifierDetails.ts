/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    EnrichedCosmosNativeAssetIdentifier,
    instanceOfEnrichedCosmosNativeAssetIdentifier,
    EnrichedCosmosNativeAssetIdentifierFromJSON,
    EnrichedCosmosNativeAssetIdentifierFromJSONTyped,
    EnrichedCosmosNativeAssetIdentifierToJSON,
} from './EnrichedCosmosNativeAssetIdentifier';
import {
    EnrichedCosmosTokenAssetIdentifier,
    instanceOfEnrichedCosmosTokenAssetIdentifier,
    EnrichedCosmosTokenAssetIdentifierFromJSON,
    EnrichedCosmosTokenAssetIdentifierFromJSONTyped,
    EnrichedCosmosTokenAssetIdentifierToJSON,
} from './EnrichedCosmosTokenAssetIdentifier';

/**
 * @type EnrichedCosmosAssetIdentifierDetails
 * 
 * @export
 */
export type EnrichedCosmosAssetIdentifierDetails = { type: 'native' } & EnrichedCosmosNativeAssetIdentifier | { type: 'token' } & EnrichedCosmosTokenAssetIdentifier;

export function EnrichedCosmosAssetIdentifierDetailsFromJSON(json: any): EnrichedCosmosAssetIdentifierDetails {
    return EnrichedCosmosAssetIdentifierDetailsFromJSONTyped(json, false);
}

export function EnrichedCosmosAssetIdentifierDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrichedCosmosAssetIdentifierDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'native':
            return {...EnrichedCosmosNativeAssetIdentifierFromJSONTyped(json, true), type: 'native'};
        case 'token':
            return {...EnrichedCosmosTokenAssetIdentifierFromJSONTyped(json, true), type: 'token'};
        default:
            throw new Error(`No variant of EnrichedCosmosAssetIdentifierDetails exists with 'type=${json['type']}'`);
    }
}

export function EnrichedCosmosAssetIdentifierDetailsToJSON(value?: EnrichedCosmosAssetIdentifierDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'native':
            return EnrichedCosmosNativeAssetIdentifierToJSON(value);
        case 'token':
            return EnrichedCosmosTokenAssetIdentifierToJSON(value);
        default:
            throw new Error(`No variant of EnrichedCosmosAssetIdentifierDetails exists with 'type=${value['type']}'`);
    }

}

