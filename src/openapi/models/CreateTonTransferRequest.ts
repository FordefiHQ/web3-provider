/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateTonTransferRequestTo } from './CreateTonTransferRequestTo';
import {
    CreateTonTransferRequestToFromJSON,
    CreateTonTransferRequestToFromJSONTyped,
    CreateTonTransferRequestToToJSON,
} from './CreateTonTransferRequestTo';
import type { CreateTonTransferRequestValue } from './CreateTonTransferRequestValue';
import {
    CreateTonTransferRequestValueFromJSON,
    CreateTonTransferRequestValueFromJSONTyped,
    CreateTonTransferRequestValueToJSON,
} from './CreateTonTransferRequestValue';
import type { PushMode } from './PushMode';
import {
    PushModeFromJSON,
    PushModeFromJSONTyped,
    PushModeToJSON,
} from './PushMode';
import type { TonAssetIdentifierRequest } from './TonAssetIdentifierRequest';
import {
    TonAssetIdentifierRequestFromJSON,
    TonAssetIdentifierRequestFromJSONTyped,
    TonAssetIdentifierRequestToJSON,
} from './TonAssetIdentifierRequest';

/**
 * 
 * @export
 * @interface CreateTonTransferRequest
 */
export interface CreateTonTransferRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateTonTransferRequest
     */
    type: CreateTonTransferRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof CreateTonTransferRequest
     */
    failOnPredictionFailure?: boolean;
    /**
     * 
     * @type {PushMode}
     * @memberof CreateTonTransferRequest
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {CreateTonTransferRequestTo}
     * @memberof CreateTonTransferRequest
     */
    to: CreateTonTransferRequestTo;
    /**
     * 
     * @type {CreateTonTransferRequestValue}
     * @memberof CreateTonTransferRequest
     */
    value: CreateTonTransferRequestValue;
    /**
     * 
     * @type {TonAssetIdentifierRequest}
     * @memberof CreateTonTransferRequest
     */
    assetIdentifier: TonAssetIdentifierRequest;
    /**
     * 
     * @type {boolean}
     * @memberof CreateTonTransferRequest
     */
    skipPrediction?: boolean;
}


/**
 * @export
 */
export const CreateTonTransferRequestTypeEnum = {
    tonTransfer: 'ton_transfer'
} as const;
export type CreateTonTransferRequestTypeEnum = typeof CreateTonTransferRequestTypeEnum[keyof typeof CreateTonTransferRequestTypeEnum];


/**
 * Check if a given object implements the CreateTonTransferRequest interface.
 */
export function instanceOfCreateTonTransferRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "value" in value;
    isInstance = isInstance && "assetIdentifier" in value;

    return isInstance;
}

export function CreateTonTransferRequestFromJSON(json: any): CreateTonTransferRequest {
    return CreateTonTransferRequestFromJSONTyped(json, false);
}

export function CreateTonTransferRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTonTransferRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'failOnPredictionFailure': !exists(json, 'fail_on_prediction_failure') ? undefined : json['fail_on_prediction_failure'],
        'pushMode': !exists(json, 'push_mode') ? undefined : PushModeFromJSON(json['push_mode']),
        'to': CreateTonTransferRequestToFromJSON(json['to']),
        'value': CreateTonTransferRequestValueFromJSON(json['value']),
        'assetIdentifier': TonAssetIdentifierRequestFromJSON(json['asset_identifier']),
        'skipPrediction': !exists(json, 'skip_prediction') ? undefined : json['skip_prediction'],
    };
}

export function CreateTonTransferRequestToJSON(value?: CreateTonTransferRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'fail_on_prediction_failure': value.failOnPredictionFailure,
        'push_mode': PushModeToJSON(value.pushMode),
        'to': CreateTonTransferRequestToToJSON(value.to),
        'value': CreateTonTransferRequestValueToJSON(value.value),
        'asset_identifier': TonAssetIdentifierRequestToJSON(value.assetIdentifier),
        'skip_prediction': value.skipPrediction,
    };
}

