/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { StarknetErc20AssetIdentifierRequest } from './StarknetErc20AssetIdentifierRequest';
import {
    instanceOfStarknetErc20AssetIdentifierRequest,
    StarknetErc20AssetIdentifierRequestFromJSON,
    StarknetErc20AssetIdentifierRequestFromJSONTyped,
    StarknetErc20AssetIdentifierRequestToJSON,
} from './StarknetErc20AssetIdentifierRequest';
import type { StarknetNativeAssetIdentifierRequest } from './StarknetNativeAssetIdentifierRequest';
import {
    instanceOfStarknetNativeAssetIdentifierRequest,
    StarknetNativeAssetIdentifierRequestFromJSON,
    StarknetNativeAssetIdentifierRequestFromJSONTyped,
    StarknetNativeAssetIdentifierRequestToJSON,
} from './StarknetNativeAssetIdentifierRequest';

/**
 * @type StarknetAssetIdentifierDetails
 * 
 * @export
 */
export type StarknetAssetIdentifierDetails = { type: 'erc20' } & StarknetErc20AssetIdentifierRequest | { type: 'native' } & StarknetNativeAssetIdentifierRequest;

export function StarknetAssetIdentifierDetailsFromJSON(json: any): StarknetAssetIdentifierDetails {
    return StarknetAssetIdentifierDetailsFromJSONTyped(json, false);
}

export function StarknetAssetIdentifierDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StarknetAssetIdentifierDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'erc20':
            return Object.assign({}, StarknetErc20AssetIdentifierRequestFromJSONTyped(json, true), { type: 'erc20' } as const);
        case 'native':
            return Object.assign({}, StarknetNativeAssetIdentifierRequestFromJSONTyped(json, true), { type: 'native' } as const);
        default:
            throw new Error(`No variant of StarknetAssetIdentifierDetails exists with 'type=${json['type']}'`);
    }
}

export function StarknetAssetIdentifierDetailsToJSON(json: any): any {
    return StarknetAssetIdentifierDetailsToJSONTyped(json, false);
}

export function StarknetAssetIdentifierDetailsToJSONTyped(value?: StarknetAssetIdentifierDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'erc20':
            return Object.assign({}, StarknetErc20AssetIdentifierRequestToJSON(value), { type: 'erc20' } as const);
        case 'native':
            return Object.assign({}, StarknetNativeAssetIdentifierRequestToJSON(value), { type: 'native' } as const);
        default:
            throw new Error(`No variant of StarknetAssetIdentifierDetails exists with 'type=${value['type']}'`);
    }

}

