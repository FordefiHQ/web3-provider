/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosToken } from './CosmosToken';
import {
    CosmosTokenFromJSON,
    CosmosTokenFromJSONTyped,
    CosmosTokenToJSON,
} from './CosmosToken';
import type { EnrichedCosmosChain } from './EnrichedCosmosChain';
import {
    EnrichedCosmosChainFromJSON,
    EnrichedCosmosChainFromJSONTyped,
    EnrichedCosmosChainToJSON,
} from './EnrichedCosmosChain';

/**
 * 
 * @export
 * @interface EnrichedCosmosTokenAssetIdentifier
 */
export interface EnrichedCosmosTokenAssetIdentifier {
    /**
     * 
     * @type {EnrichedCosmosChain}
     * @memberof EnrichedCosmosTokenAssetIdentifier
     */
    chain: EnrichedCosmosChain;
    /**
     * 
     * @type {string}
     * @memberof EnrichedCosmosTokenAssetIdentifier
     */
    type: EnrichedCosmosTokenAssetIdentifierTypeEnum;
    /**
     * 
     * @type {CosmosToken}
     * @memberof EnrichedCosmosTokenAssetIdentifier
     */
    coin: CosmosToken;
}


/**
 * @export
 */
export const EnrichedCosmosTokenAssetIdentifierTypeEnum = {
    token: 'token'
} as const;
export type EnrichedCosmosTokenAssetIdentifierTypeEnum = typeof EnrichedCosmosTokenAssetIdentifierTypeEnum[keyof typeof EnrichedCosmosTokenAssetIdentifierTypeEnum];


/**
 * Check if a given object implements the EnrichedCosmosTokenAssetIdentifier interface.
 */
export function instanceOfEnrichedCosmosTokenAssetIdentifier(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "coin" in value;

    return isInstance;
}

export function EnrichedCosmosTokenAssetIdentifierFromJSON(json: any): EnrichedCosmosTokenAssetIdentifier {
    return EnrichedCosmosTokenAssetIdentifierFromJSONTyped(json, false);
}

export function EnrichedCosmosTokenAssetIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrichedCosmosTokenAssetIdentifier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chain': EnrichedCosmosChainFromJSON(json['chain']),
        'type': json['type'],
        'coin': CosmosTokenFromJSON(json['coin']),
    };
}

export function EnrichedCosmosTokenAssetIdentifierToJSON(value?: EnrichedCosmosTokenAssetIdentifier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chain': EnrichedCosmosChainToJSON(value.chain),
        'type': value.type,
        'coin': CosmosTokenToJSON(value.coin),
    };
}

