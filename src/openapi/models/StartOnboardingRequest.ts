/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OrganizationType } from './OrganizationType';
import {
    OrganizationTypeFromJSON,
    OrganizationTypeFromJSONTyped,
    OrganizationTypeToJSON,
} from './OrganizationType';

/**
 * 
 * @export
 * @interface StartOnboardingRequest
 */
export interface StartOnboardingRequest {
    /**
     * 
     * @type {string}
     * @memberof StartOnboardingRequest
     */
    organizationName: string;
    /**
     * 
     * @type {OrganizationType}
     * @memberof StartOnboardingRequest
     */
    organizationType: OrganizationType;
    /**
     * 
     * @type {string}
     * @memberof StartOnboardingRequest
     */
    adminEmail: string;
    /**
     * 
     * @type {boolean}
     * @memberof StartOnboardingRequest
     */
    shouldSupportEndUsers: boolean;
}

/**
 * Check if a given object implements the StartOnboardingRequest interface.
 */
export function instanceOfStartOnboardingRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "organizationName" in value;
    isInstance = isInstance && "organizationType" in value;
    isInstance = isInstance && "adminEmail" in value;
    isInstance = isInstance && "shouldSupportEndUsers" in value;

    return isInstance;
}

export function StartOnboardingRequestFromJSON(json: any): StartOnboardingRequest {
    return StartOnboardingRequestFromJSONTyped(json, false);
}

export function StartOnboardingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StartOnboardingRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organizationName': json['organization_name'],
        'organizationType': OrganizationTypeFromJSON(json['organization_type']),
        'adminEmail': json['admin_email'],
        'shouldSupportEndUsers': json['should_support_end_users'],
    };
}

export function StartOnboardingRequestToJSON(value?: StartOnboardingRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organization_name': value.organizationName,
        'organization_type': OrganizationTypeToJSON(value.organizationType),
        'admin_email': value.adminEmail,
        'should_support_end_users': value.shouldSupportEndUsers,
    };
}

