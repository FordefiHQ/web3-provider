/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrganizationType } from './OrganizationType';
import {
    OrganizationTypeFromJSON,
    OrganizationTypeFromJSONTyped,
    OrganizationTypeToJSON,
    OrganizationTypeToJSONTyped,
} from './OrganizationType';

/**
 * 
 * @export
 * @interface StartOnboardingRequest
 */
export interface StartOnboardingRequest {
    /**
     * 
     * @type {string}
     * @memberof StartOnboardingRequest
     */
    organizationName: string;
    /**
     * 
     * @type {OrganizationType}
     * @memberof StartOnboardingRequest
     */
    organizationType: OrganizationType;
    /**
     * 
     * @type {string}
     * @memberof StartOnboardingRequest
     */
    adminEmail: string;
    /**
     * 
     * @type {boolean}
     * @memberof StartOnboardingRequest
     */
    shouldSupportEndUsers: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof StartOnboardingRequest
     */
    isImportOrganization?: boolean;
    /**
     * 
     * @type {string}
     * @memberof StartOnboardingRequest
     */
    crmId?: string;
}



/**
 * Check if a given object implements the StartOnboardingRequest interface.
 */
export function instanceOfStartOnboardingRequest(value: object): value is StartOnboardingRequest {
    if (!('organizationName' in value) || value['organizationName'] === undefined) return false;
    if (!('organizationType' in value) || value['organizationType'] === undefined) return false;
    if (!('adminEmail' in value) || value['adminEmail'] === undefined) return false;
    if (!('shouldSupportEndUsers' in value) || value['shouldSupportEndUsers'] === undefined) return false;
    return true;
}

export function StartOnboardingRequestFromJSON(json: any): StartOnboardingRequest {
    return StartOnboardingRequestFromJSONTyped(json, false);
}

export function StartOnboardingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StartOnboardingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'organizationName': json['organization_name'],
        'organizationType': OrganizationTypeFromJSON(json['organization_type']),
        'adminEmail': json['admin_email'],
        'shouldSupportEndUsers': json['should_support_end_users'],
        'isImportOrganization': json['is_import_organization'] == null ? undefined : json['is_import_organization'],
        'crmId': json['crm_id'] == null ? undefined : json['crm_id'],
    };
}

export function StartOnboardingRequestToJSON(json: any): StartOnboardingRequest {
    return StartOnboardingRequestToJSONTyped(json, false);
}

export function StartOnboardingRequestToJSONTyped(value?: StartOnboardingRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization_name': value['organizationName'],
        'organization_type': OrganizationTypeToJSON(value['organizationType']),
        'admin_email': value['adminEmail'],
        'should_support_end_users': value['shouldSupportEndUsers'],
        'is_import_organization': value['isImportOrganization'],
        'crm_id': value['crmId'],
    };
}

