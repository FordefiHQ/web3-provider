/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExportType } from './ExportType';
import {
    ExportTypeFromJSON,
    ExportTypeFromJSONTyped,
    ExportTypeToJSON,
    ExportTypeToJSONTyped,
} from './ExportType';
import type { ExportState } from './ExportState';
import {
    ExportStateFromJSON,
    ExportStateFromJSONTyped,
    ExportStateToJSON,
    ExportStateToJSONTyped,
} from './ExportState';
import type { ExportedResource } from './ExportedResource';
import {
    ExportedResourceFromJSON,
    ExportedResourceFromJSONTyped,
    ExportedResourceToJSON,
    ExportedResourceToJSONTyped,
} from './ExportedResource';

/**
 * 
 * @export
 * @interface Export
 */
export interface Export {
    /**
     * 
     * @type {string}
     * @memberof Export
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof Export
     */
    creationTime: Date;
    /**
     * 
     * @type {ExportType}
     * @memberof Export
     */
    type: ExportType;
    /**
     * 
     * @type {ExportState}
     * @memberof Export
     */
    state: ExportState;
    /**
     * 
     * @type {string}
     * @memberof Export
     */
    organizationId: string;
    /**
     * 
     * @type {string}
     * @memberof Export
     */
    userId: string;
    /**
     * 
     * @type {ExportedResource}
     * @memberof Export
     */
    resourceType: ExportedResource;
    /**
     * 
     * @type {number}
     * @memberof Export
     */
    successfulItemsCount: number;
    /**
     * 
     * @type {number}
     * @memberof Export
     */
    failedItemsCount: number;
    /**
     * 
     * @type {number}
     * @memberof Export
     */
    totalItemsCount: number;
    /**
     * 
     * @type {string}
     * @memberof Export
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof Export
     */
    downloadUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof Export
     */
    expirationTime: Date;
}



/**
 * Check if a given object implements the Export interface.
 */
export function instanceOfExport(value: object): value is Export {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('creationTime' in value) || value['creationTime'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('resourceType' in value) || value['resourceType'] === undefined) return false;
    if (!('successfulItemsCount' in value) || value['successfulItemsCount'] === undefined) return false;
    if (!('failedItemsCount' in value) || value['failedItemsCount'] === undefined) return false;
    if (!('totalItemsCount' in value) || value['totalItemsCount'] === undefined) return false;
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    if (!('downloadUrl' in value) || value['downloadUrl'] === undefined) return false;
    if (!('expirationTime' in value) || value['expirationTime'] === undefined) return false;
    return true;
}

export function ExportFromJSON(json: any): Export {
    return ExportFromJSONTyped(json, false);
}

export function ExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): Export {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'creationTime': (new Date(json['creation_time'])),
        'type': ExportTypeFromJSON(json['type']),
        'state': ExportStateFromJSON(json['state']),
        'organizationId': json['organization_id'],
        'userId': json['user_id'],
        'resourceType': ExportedResourceFromJSON(json['resource_type']),
        'successfulItemsCount': json['successful_items_count'],
        'failedItemsCount': json['failed_items_count'],
        'totalItemsCount': json['total_items_count'],
        'requestId': json['request_id'],
        'downloadUrl': json['download_url'],
        'expirationTime': (new Date(json['expiration_time'])),
    };
}

export function ExportToJSON(json: any): Export {
    return ExportToJSONTyped(json, false);
}

export function ExportToJSONTyped(value?: Export | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'creation_time': ((value['creationTime']).toISOString()),
        'type': ExportTypeToJSON(value['type']),
        'state': ExportStateToJSON(value['state']),
        'organization_id': value['organizationId'],
        'user_id': value['userId'],
        'resource_type': ExportedResourceToJSON(value['resourceType']),
        'successful_items_count': value['successfulItemsCount'],
        'failed_items_count': value['failedItemsCount'],
        'total_items_count': value['totalItemsCount'],
        'request_id': value['requestId'],
        'download_url': value['downloadUrl'],
        'expiration_time': ((value['expirationTime']).toISOString()),
    };
}

