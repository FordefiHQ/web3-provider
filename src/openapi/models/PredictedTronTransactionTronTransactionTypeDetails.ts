/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TronNativeTransferDetails } from './TronNativeTransferDetails';
import {
    instanceOfTronNativeTransferDetails,
    TronNativeTransferDetailsFromJSON,
    TronNativeTransferDetailsFromJSONTyped,
    TronNativeTransferDetailsToJSON,
} from './TronNativeTransferDetails';
import type { TronTokenTransferDetails } from './TronTokenTransferDetails';
import {
    instanceOfTronTokenTransferDetails,
    TronTokenTransferDetailsFromJSON,
    TronTokenTransferDetailsFromJSONTyped,
    TronTokenTransferDetailsToJSON,
} from './TronTokenTransferDetails';

/**
 * @type PredictedTronTransactionTronTransactionTypeDetails
 * 
 * @export
 */
export type PredictedTronTransactionTronTransactionTypeDetails = { type: 'native_transfer' } & TronNativeTransferDetails | { type: 'token_transfer' } & TronTokenTransferDetails;

export function PredictedTronTransactionTronTransactionTypeDetailsFromJSON(json: any): PredictedTronTransactionTronTransactionTypeDetails {
    return PredictedTronTransactionTronTransactionTypeDetailsFromJSONTyped(json, false);
}

export function PredictedTronTransactionTronTransactionTypeDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedTronTransactionTronTransactionTypeDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'native_transfer':
            return Object.assign({}, TronNativeTransferDetailsFromJSONTyped(json, true), { type: 'native_transfer' } as const);
        case 'token_transfer':
            return Object.assign({}, TronTokenTransferDetailsFromJSONTyped(json, true), { type: 'token_transfer' } as const);
        default:
            throw new Error(`No variant of PredictedTronTransactionTronTransactionTypeDetails exists with 'type=${json['type']}'`);
    }
}

export function PredictedTronTransactionTronTransactionTypeDetailsToJSON(json: any): any {
    return PredictedTronTransactionTronTransactionTypeDetailsToJSONTyped(json, false);
}

export function PredictedTronTransactionTronTransactionTypeDetailsToJSONTyped(value?: PredictedTronTransactionTronTransactionTypeDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'native_transfer':
            return Object.assign({}, TronNativeTransferDetailsToJSON(value), { type: 'native_transfer' } as const);
        case 'token_transfer':
            return Object.assign({}, TronTokenTransferDetailsToJSON(value), { type: 'token_transfer' } as const);
        default:
            throw new Error(`No variant of PredictedTronTransactionTronTransactionTypeDetails exists with 'type=${value['type']}'`);
    }

}

