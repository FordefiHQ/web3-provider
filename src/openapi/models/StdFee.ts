/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosCoinWithAmount } from './CosmosCoinWithAmount';
import {
    CosmosCoinWithAmountFromJSON,
    CosmosCoinWithAmountFromJSONTyped,
    CosmosCoinWithAmountToJSON,
} from './CosmosCoinWithAmount';
import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
    EnrichedCosmosBechAddressFromJSONTyped,
    EnrichedCosmosBechAddressToJSON,
} from './EnrichedCosmosBechAddress';

/**
 * 
 * @export
 * @interface StdFee
 */
export interface StdFee {
    /**
     * 
     * @type {Array<CosmosCoinWithAmount>}
     * @memberof StdFee
     */
    coins: Array<CosmosCoinWithAmount>;
    /**
     * 
     * @type {string}
     * @memberof StdFee
     */
    gas: string;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof StdFee
     */
    payer?: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof StdFee
     */
    granter?: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof StdFee
     */
    feePayer?: EnrichedCosmosBechAddress;
}

/**
 * Check if a given object implements the StdFee interface.
 */
export function instanceOfStdFee(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "coins" in value;
    isInstance = isInstance && "gas" in value;

    return isInstance;
}

export function StdFeeFromJSON(json: any): StdFee {
    return StdFeeFromJSONTyped(json, false);
}

export function StdFeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StdFee {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'coins': ((json['coins'] as Array<any>).map(CosmosCoinWithAmountFromJSON)),
        'gas': json['gas'],
        'payer': !exists(json, 'payer') ? undefined : EnrichedCosmosBechAddressFromJSON(json['payer']),
        'granter': !exists(json, 'granter') ? undefined : EnrichedCosmosBechAddressFromJSON(json['granter']),
        'feePayer': !exists(json, 'fee_payer') ? undefined : EnrichedCosmosBechAddressFromJSON(json['fee_payer']),
    };
}

export function StdFeeToJSON(value?: StdFee | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coins': ((value.coins as Array<any>).map(CosmosCoinWithAmountToJSON)),
        'gas': value.gas,
        'payer': EnrichedCosmosBechAddressToJSON(value.payer),
        'granter': EnrichedCosmosBechAddressToJSON(value.granter),
        'fee_payer': EnrichedCosmosBechAddressToJSON(value.feePayer),
    };
}

