/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedAddress } from './EnrichedAddress';
import {
    EnrichedAddressFromJSON,
    EnrichedAddressFromJSONTyped,
    EnrichedAddressToJSON,
    EnrichedAddressToJSONTyped,
} from './EnrichedAddress';
import type { EnrichedChain } from './EnrichedChain';
import {
    EnrichedChainFromJSON,
    EnrichedChainFromJSONTyped,
    EnrichedChainToJSON,
    EnrichedChainToJSONTyped,
} from './EnrichedChain';
import type { EnrichedExchangeAddress } from './EnrichedExchangeAddress';
import {
    EnrichedExchangeAddressFromJSON,
    EnrichedExchangeAddressFromJSONTyped,
    EnrichedExchangeAddressToJSON,
    EnrichedExchangeAddressToJSONTyped,
} from './EnrichedExchangeAddress';

/**
 * 
 * @export
 * @interface ExchangeExternalWithdrawDetails
 */
export interface ExchangeExternalWithdrawDetails {
    /**
     * 
     * @type {boolean}
     * @memberof ExchangeExternalWithdrawDetails
     */
    isInternal: boolean;
    /**
     * 
     * @type {EnrichedExchangeAddress}
     * @memberof ExchangeExternalWithdrawDetails
     */
    sender: EnrichedExchangeAddress;
    /**
     * 
     * @type {string}
     * @memberof ExchangeExternalWithdrawDetails
     */
    type: ExchangeExternalWithdrawDetailsTypeEnum;
    /**
     * 
     * @type {EnrichedAddress}
     * @memberof ExchangeExternalWithdrawDetails
     */
    recipient: EnrichedAddress;
    /**
     * 
     * @type {EnrichedChain}
     * @memberof ExchangeExternalWithdrawDetails
     */
    chain: EnrichedChain;
    /**
     * 
     * @type {string}
     * @memberof ExchangeExternalWithdrawDetails
     */
    memo?: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangeExternalWithdrawDetails
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangeExternalWithdrawDetails
     */
    explorerUrl?: string;
}


/**
 * @export
 */
export const ExchangeExternalWithdrawDetailsTypeEnum = {
    externalWithdraw: 'external_withdraw'
} as const;
export type ExchangeExternalWithdrawDetailsTypeEnum = typeof ExchangeExternalWithdrawDetailsTypeEnum[keyof typeof ExchangeExternalWithdrawDetailsTypeEnum];


/**
 * Check if a given object implements the ExchangeExternalWithdrawDetails interface.
 */
export function instanceOfExchangeExternalWithdrawDetails(value: object): value is ExchangeExternalWithdrawDetails {
    if (!('isInternal' in value) || value['isInternal'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('recipient' in value) || value['recipient'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    return true;
}

export function ExchangeExternalWithdrawDetailsFromJSON(json: any): ExchangeExternalWithdrawDetails {
    return ExchangeExternalWithdrawDetailsFromJSONTyped(json, false);
}

export function ExchangeExternalWithdrawDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangeExternalWithdrawDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'isInternal': json['is_internal'],
        'sender': EnrichedExchangeAddressFromJSON(json['sender']),
        'type': json['type'],
        'recipient': EnrichedAddressFromJSON(json['recipient']),
        'chain': EnrichedChainFromJSON(json['chain']),
        'memo': json['memo'] == null ? undefined : json['memo'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'explorerUrl': json['explorer_url'] == null ? undefined : json['explorer_url'],
    };
}

export function ExchangeExternalWithdrawDetailsToJSON(json: any): ExchangeExternalWithdrawDetails {
    return ExchangeExternalWithdrawDetailsToJSONTyped(json, false);
}

export function ExchangeExternalWithdrawDetailsToJSONTyped(value?: ExchangeExternalWithdrawDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_internal': value['isInternal'],
        'sender': EnrichedExchangeAddressToJSON(value['sender']),
        'type': value['type'],
        'recipient': EnrichedAddressToJSON(value['recipient']),
        'chain': EnrichedChainToJSON(value['chain']),
        'memo': value['memo'],
        'hash': value['hash'],
        'explorer_url': value['explorerUrl'],
    };
}

