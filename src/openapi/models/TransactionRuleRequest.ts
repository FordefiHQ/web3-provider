/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RuleActionRequest } from './RuleActionRequest';
import {
    RuleActionRequestFromJSON,
    RuleActionRequestFromJSONTyped,
    RuleActionRequestToJSON,
    RuleActionRequestToJSONTyped,
} from './RuleActionRequest';
import type { TransactionRuleConditionsRequest } from './TransactionRuleConditionsRequest';
import {
    TransactionRuleConditionsRequestFromJSON,
    TransactionRuleConditionsRequestFromJSONTyped,
    TransactionRuleConditionsRequestToJSON,
    TransactionRuleConditionsRequestToJSONTyped,
} from './TransactionRuleConditionsRequest';

/**
 * 
 * @export
 * @interface TransactionRuleRequest
 */
export interface TransactionRuleRequest {
    /**
     * 
     * @type {string}
     * @memberof TransactionRuleRequest
     */
    existingId?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionRuleRequest
     */
    name: string;
    /**
     * 
     * @type {TransactionRuleConditionsRequest}
     * @memberof TransactionRuleRequest
     */
    conditions?: TransactionRuleConditionsRequest;
    /**
     * 
     * @type {RuleActionRequest}
     * @memberof TransactionRuleRequest
     */
    action: RuleActionRequest;
}

/**
 * Check if a given object implements the TransactionRuleRequest interface.
 */
export function instanceOfTransactionRuleRequest(value: object): value is TransactionRuleRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    return true;
}

export function TransactionRuleRequestFromJSON(json: any): TransactionRuleRequest {
    return TransactionRuleRequestFromJSONTyped(json, false);
}

export function TransactionRuleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionRuleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'existingId': json['existing_id'] == null ? undefined : json['existing_id'],
        'name': json['name'],
        'conditions': json['conditions'] == null ? undefined : TransactionRuleConditionsRequestFromJSON(json['conditions']),
        'action': RuleActionRequestFromJSON(json['action']),
    };
}

export function TransactionRuleRequestToJSON(json: any): TransactionRuleRequest {
    return TransactionRuleRequestToJSONTyped(json, false);
}

export function TransactionRuleRequestToJSONTyped(value?: TransactionRuleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'existing_id': value['existingId'],
        'name': value['name'],
        'conditions': TransactionRuleConditionsRequestToJSON(value['conditions']),
        'action': RuleActionRequestToJSON(value['action']),
    };
}

