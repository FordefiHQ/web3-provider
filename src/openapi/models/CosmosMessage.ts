/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
} from './EnrichedCosmosBechAddress';
import type { EnrichedCosmosChain } from './EnrichedCosmosChain';
import {
    EnrichedCosmosChainFromJSON,
} from './EnrichedCosmosChain';
import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
} from './ManagedTransactionData';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
} from './TransactionSpamState';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
} from './TransactionDirection';
import type { CosmosMessageType } from './CosmosMessageType';
import {
    CosmosMessageTypeFromJSON,
} from './CosmosMessageType';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
} from './Signature';
import type { NonPushableTransactionStateChange } from './NonPushableTransactionStateChange';
import {
    NonPushableTransactionStateChangeFromJSON,
} from './NonPushableTransactionStateChange';
import type { CosmosMessageData } from './CosmosMessageData';
import {
    CosmosMessageDataFromJSON,
} from './CosmosMessageData';
import type { NonPushableTransactionState } from './NonPushableTransactionState';
import {
    NonPushableTransactionStateFromJSON,
} from './NonPushableTransactionState';

/**
 * 
 * @export
 * @interface CosmosMessage
 */
export interface CosmosMessage {
    /**
     * 
     * @type {string}
     * @memberof CosmosMessage
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof CosmosMessage
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CosmosMessage
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof CosmosMessage
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof CosmosMessage
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof CosmosMessage
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof CosmosMessage
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof CosmosMessage
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {boolean}
     * @memberof CosmosMessage
     */
    signedExternally?: boolean;
    /**
     * 
     * @type {NonPushableTransactionState}
     * @memberof CosmosMessage
     */
    state: NonPushableTransactionState;
    /**
     * 
     * @type {Array<NonPushableTransactionStateChange>}
     * @memberof CosmosMessage
     */
    stateChanges: Array<NonPushableTransactionStateChange>;
    /**
     * 
     * @type {string}
     * @memberof CosmosMessage
     */
    type: CosmosMessageTypeEnum;
    /**
     * 
     * @type {CosmosMessageType}
     * @memberof CosmosMessage
     */
    cosmosMessageType: CosmosMessageType;
    /**
     * 
     * @type {CosmosMessageData}
     * @memberof CosmosMessage
     */
    data: CosmosMessageData;
    /**
     * 
     * @type {EnrichedCosmosChain}
     * @memberof CosmosMessage
     */
    chain: EnrichedCosmosChain;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosMessage
     */
    sender: EnrichedCosmosBechAddress;
}


/**
 * 
 */
const CosmosMessageTypeEnum = {
    cosmosMessage: 'cosmos_message'
} as const;
type CosmosMessageTypeEnum = typeof CosmosMessageTypeEnum[keyof typeof CosmosMessageTypeEnum];

export function CosmosMessageFromJSONTyped(json: any, _ignoreDiscriminator: boolean): CosmosMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': json['managed_transaction_data'] == null ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'spamState': json['spam_state'] == null ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'signedExternally': json['signed_externally'] == null ? undefined : json['signed_externally'],
        'state': NonPushableTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(NonPushableTransactionStateChangeFromJSON)),
        'type': json['type'],
        'cosmosMessageType': CosmosMessageTypeFromJSON(json['cosmos_message_type']),
        'data': CosmosMessageDataFromJSON(json['data']),
        'chain': EnrichedCosmosChainFromJSON(json['chain']),
        'sender': EnrichedCosmosBechAddressFromJSON(json['sender']),
    };
}
