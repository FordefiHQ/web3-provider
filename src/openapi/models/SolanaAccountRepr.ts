/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SolanaAccountRepr
 */
export interface SolanaAccountRepr {
    /**
     * 
     * @type {string}
     * @memberof SolanaAccountRepr
     */
    chainType: SolanaAccountReprChainTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SolanaAccountRepr
     */
    base58Repr: string;
}


/**
 * @export
 */
export const SolanaAccountReprChainTypeEnum = {
    solana: 'solana'
} as const;
export type SolanaAccountReprChainTypeEnum = typeof SolanaAccountReprChainTypeEnum[keyof typeof SolanaAccountReprChainTypeEnum];


/**
 * Check if a given object implements the SolanaAccountRepr interface.
 */
export function instanceOfSolanaAccountRepr(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chainType" in value;
    isInstance = isInstance && "base58Repr" in value;

    return isInstance;
}

export function SolanaAccountReprFromJSON(json: any): SolanaAccountRepr {
    return SolanaAccountReprFromJSONTyped(json, false);
}

export function SolanaAccountReprFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolanaAccountRepr {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'base58Repr': json['base58_repr'],
    };
}

export function SolanaAccountReprToJSON(value?: SolanaAccountRepr | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chain_type': value.chainType,
        'base58_repr': value.base58Repr,
    };
}

