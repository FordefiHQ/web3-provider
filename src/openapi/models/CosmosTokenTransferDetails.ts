/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessagesList } from './MessagesList';
import {
    MessagesListFromJSON,
    MessagesListFromJSONTyped,
    MessagesListToJSON,
    MessagesListToJSONTyped,
} from './MessagesList';
import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
    EnrichedCosmosBechAddressFromJSONTyped,
    EnrichedCosmosBechAddressToJSON,
    EnrichedCosmosBechAddressToJSONTyped,
} from './EnrichedCosmosBechAddress';
import type { TransferDirection } from './TransferDirection';
import {
    TransferDirectionFromJSON,
    TransferDirectionFromJSONTyped,
    TransferDirectionToJSON,
    TransferDirectionToJSONTyped,
} from './TransferDirection';

/**
 * 
 * @export
 * @interface CosmosTokenTransferDetails
 */
export interface CosmosTokenTransferDetails {
    /**
     * 
     * @type {MessagesList}
     * @memberof CosmosTokenTransferDetails
     */
    transactionData: MessagesList;
    /**
     * 
     * @type {TransferDirection}
     * @memberof CosmosTokenTransferDetails
     */
    direction: TransferDirection;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosTokenTransferDetails
     */
    sender: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosTokenTransferDetails
     */
    recipient: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {boolean}
     * @memberof CosmosTokenTransferDetails
     */
    isInternal?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CosmosTokenTransferDetails
     */
    type: CosmosTokenTransferDetailsTypeEnum;
}


/**
 * @export
 */
export const CosmosTokenTransferDetailsTypeEnum = {
    tokenTransfer: 'token_transfer'
} as const;
export type CosmosTokenTransferDetailsTypeEnum = typeof CosmosTokenTransferDetailsTypeEnum[keyof typeof CosmosTokenTransferDetailsTypeEnum];


/**
 * Check if a given object implements the CosmosTokenTransferDetails interface.
 */
export function instanceOfCosmosTokenTransferDetails(value: object): value is CosmosTokenTransferDetails {
    if (!('transactionData' in value) || value['transactionData'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('recipient' in value) || value['recipient'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CosmosTokenTransferDetailsFromJSON(json: any): CosmosTokenTransferDetails {
    return CosmosTokenTransferDetailsFromJSONTyped(json, false);
}

export function CosmosTokenTransferDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosTokenTransferDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'transactionData': MessagesListFromJSON(json['transaction_data']),
        'direction': TransferDirectionFromJSON(json['direction']),
        'sender': EnrichedCosmosBechAddressFromJSON(json['sender']),
        'recipient': EnrichedCosmosBechAddressFromJSON(json['recipient']),
        'isInternal': json['is_internal'] == null ? undefined : json['is_internal'],
        'type': json['type'],
    };
}

export function CosmosTokenTransferDetailsToJSON(json: any): CosmosTokenTransferDetails {
    return CosmosTokenTransferDetailsToJSONTyped(json, false);
}

export function CosmosTokenTransferDetailsToJSONTyped(value?: CosmosTokenTransferDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'transaction_data': MessagesListToJSON(value['transactionData']),
        'direction': TransferDirectionToJSON(value['direction']),
        'sender': EnrichedCosmosBechAddressToJSON(value['sender']),
        'recipient': EnrichedCosmosBechAddressToJSON(value['recipient']),
        'is_internal': value['isInternal'],
        'type': value['type'],
    };
}

