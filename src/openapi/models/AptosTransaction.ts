/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AptosBlock } from './AptosBlock';
import {
    AptosBlockFromJSON,
    AptosBlockFromJSONTyped,
    AptosBlockToJSON,
    AptosBlockToJSONTyped,
} from './AptosBlock';
import type { EnrichedAptosChain } from './EnrichedAptosChain';
import {
    EnrichedAptosChainFromJSON,
    EnrichedAptosChainFromJSONTyped,
    EnrichedAptosChainToJSON,
    EnrichedAptosChainToJSONTyped,
} from './EnrichedAptosChain';
import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
    ManagedTransactionDataFromJSONTyped,
    ManagedTransactionDataToJSON,
    ManagedTransactionDataToJSONTyped,
} from './ManagedTransactionData';
import type { AptosGasData } from './AptosGasData';
import {
    AptosGasDataFromJSON,
    AptosGasDataFromJSONTyped,
    AptosGasDataToJSON,
    AptosGasDataToJSONTyped,
} from './AptosGasData';
import type { AptosTransactionResult } from './AptosTransactionResult';
import {
    AptosTransactionResultFromJSON,
    AptosTransactionResultFromJSONTyped,
    AptosTransactionResultToJSON,
    AptosTransactionResultToJSONTyped,
} from './AptosTransactionResult';
import type { AptosTransactionAptosTransactionTypeDetails } from './AptosTransactionAptosTransactionTypeDetails';
import {
    AptosTransactionAptosTransactionTypeDetailsFromJSON,
    AptosTransactionAptosTransactionTypeDetailsFromJSONTyped,
    AptosTransactionAptosTransactionTypeDetailsToJSON,
    AptosTransactionAptosTransactionTypeDetailsToJSONTyped,
} from './AptosTransactionAptosTransactionTypeDetails';
import type { PushableTransactionStateChange } from './PushableTransactionStateChange';
import {
    PushableTransactionStateChangeFromJSON,
    PushableTransactionStateChangeFromJSONTyped,
    PushableTransactionStateChangeToJSON,
    PushableTransactionStateChangeToJSONTyped,
} from './PushableTransactionStateChange';
import type { EnrichedAptosAddress } from './EnrichedAptosAddress';
import {
    EnrichedAptosAddressFromJSON,
    EnrichedAptosAddressFromJSONTyped,
    EnrichedAptosAddressToJSON,
    EnrichedAptosAddressToJSONTyped,
} from './EnrichedAptosAddress';
import type { PushableTransactionState } from './PushableTransactionState';
import {
    PushableTransactionStateFromJSON,
    PushableTransactionStateFromJSONTyped,
    PushableTransactionStateToJSON,
    PushableTransactionStateToJSONTyped,
} from './PushableTransactionState';
import type { AmlPolicyMatchIncoming } from './AmlPolicyMatchIncoming';
import {
    AmlPolicyMatchIncomingFromJSON,
    AmlPolicyMatchIncomingFromJSONTyped,
    AmlPolicyMatchIncomingToJSON,
    AmlPolicyMatchIncomingToJSONTyped,
} from './AmlPolicyMatchIncoming';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
    TransactionSpamStateFromJSONTyped,
    TransactionSpamStateToJSON,
    TransactionSpamStateToJSONTyped,
} from './TransactionSpamState';
import type { AptosTransactionPayload } from './AptosTransactionPayload';
import {
    AptosTransactionPayloadFromJSON,
    AptosTransactionPayloadFromJSONTyped,
    AptosTransactionPayloadToJSON,
    AptosTransactionPayloadToJSONTyped,
} from './AptosTransactionPayload';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
    TransactionDirectionFromJSONTyped,
    TransactionDirectionToJSON,
    TransactionDirectionToJSONTyped,
} from './TransactionDirection';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
    SignatureFromJSONTyped,
    SignatureToJSON,
    SignatureToJSONTyped,
} from './Signature';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
    SimulationStatusResultToJSONTyped,
} from './SimulationStatusResult';
import type { AmlResults } from './AmlResults';
import {
    AmlResultsFromJSON,
    AmlResultsFromJSONTyped,
    AmlResultsToJSON,
    AmlResultsToJSONTyped,
} from './AmlResults';

/**
 * 
 * @export
 * @interface AptosTransaction
 */
export interface AptosTransaction {
    /**
     * 
     * @type {string}
     * @memberof AptosTransaction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof AptosTransaction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AptosTransaction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof AptosTransaction
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof AptosTransaction
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof AptosTransaction
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof AptosTransaction
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof AptosTransaction
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {boolean}
     * @memberof AptosTransaction
     */
    signedExternally?: boolean;
    /**
     * 
     * @type {PushableTransactionState}
     * @memberof AptosTransaction
     */
    state: PushableTransactionState;
    /**
     * 
     * @type {Array<PushableTransactionStateChange>}
     * @memberof AptosTransaction
     */
    stateChanges: Array<PushableTransactionStateChange>;
    /**
     * 
     * @type {AmlResults}
     * @memberof AptosTransaction
     */
    amlResults?: AmlResults;
    /**
     * 
     * @type {AmlPolicyMatchIncoming}
     * @memberof AptosTransaction
     */
    incomingAmlPolicyMatch?: AmlPolicyMatchIncoming;
    /**
     * 
     * @type {string}
     * @memberof AptosTransaction
     */
    type: AptosTransactionTypeEnum;
    /**
     * 
     * @type {AptosTransactionAptosTransactionTypeDetails}
     * @memberof AptosTransaction
     */
    aptosTransactionTypeDetails: AptosTransactionAptosTransactionTypeDetails;
    /**
     * 
     * @type {EnrichedAptosChain}
     * @memberof AptosTransaction
     */
    chain: EnrichedAptosChain;
    /**
     * 
     * @type {number}
     * @memberof AptosTransaction
     */
    version?: number;
    /**
     * 
     * @type {number}
     * @memberof AptosTransaction
     */
    nonce?: number;
    /**
     * 
     * @type {EnrichedAptosAddress}
     * @memberof AptosTransaction
     */
    sender: EnrichedAptosAddress;
    /**
     * 
     * @type {AptosTransactionPayload}
     * @memberof AptosTransaction
     */
    payload: AptosTransactionPayload;
    /**
     * 
     * @type {string}
     * @memberof AptosTransaction
     */
    hash?: string;
    /**
     * 
     * @type {AptosBlock}
     * @memberof AptosTransaction
     */
    block?: AptosBlock;
    /**
     * 
     * @type {AptosGasData}
     * @memberof AptosTransaction
     */
    gasSubmitted: AptosGasData;
    /**
     * 
     * @type {string}
     * @memberof AptosTransaction
     */
    serializedSignedTransaction?: string;
    /**
     * 
     * @type {AptosTransactionResult}
     * @memberof AptosTransaction
     */
    expectedResult?: AptosTransactionResult;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof AptosTransaction
     */
    simulationStatusResult?: SimulationStatusResult;
    /**
     * 
     * @type {AptosTransactionResult}
     * @memberof AptosTransaction
     */
    minedResult?: AptosTransactionResult;
    /**
     * 
     * @type {string}
     * @memberof AptosTransaction
     */
    explorerUrl?: string;
}


/**
 * @export
 */
export const AptosTransactionTypeEnum = {
    aptosTransaction: 'aptos_transaction'
} as const;
export type AptosTransactionTypeEnum = typeof AptosTransactionTypeEnum[keyof typeof AptosTransactionTypeEnum];


/**
 * Check if a given object implements the AptosTransaction interface.
 */
export function instanceOfAptosTransaction(value: object): value is AptosTransaction {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('signatures' in value) || value['signatures'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('stateChanges' in value) || value['stateChanges'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('aptosTransactionTypeDetails' in value) || value['aptosTransactionTypeDetails'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('payload' in value) || value['payload'] === undefined) return false;
    if (!('gasSubmitted' in value) || value['gasSubmitted'] === undefined) return false;
    return true;
}

export function AptosTransactionFromJSON(json: any): AptosTransaction {
    return AptosTransactionFromJSONTyped(json, false);
}

export function AptosTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AptosTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': json['managed_transaction_data'] == null ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'spamState': json['spam_state'] == null ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'signedExternally': json['signed_externally'] == null ? undefined : json['signed_externally'],
        'state': PushableTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(PushableTransactionStateChangeFromJSON)),
        'amlResults': json['aml_results'] == null ? undefined : AmlResultsFromJSON(json['aml_results']),
        'incomingAmlPolicyMatch': json['incoming_aml_policy_match'] == null ? undefined : AmlPolicyMatchIncomingFromJSON(json['incoming_aml_policy_match']),
        'type': json['type'],
        'aptosTransactionTypeDetails': AptosTransactionAptosTransactionTypeDetailsFromJSON(json['aptos_transaction_type_details']),
        'chain': EnrichedAptosChainFromJSON(json['chain']),
        'version': json['version'] == null ? undefined : json['version'],
        'nonce': json['nonce'] == null ? undefined : json['nonce'],
        'sender': EnrichedAptosAddressFromJSON(json['sender']),
        'payload': AptosTransactionPayloadFromJSON(json['payload']),
        'hash': json['hash'] == null ? undefined : json['hash'],
        'block': json['block'] == null ? undefined : AptosBlockFromJSON(json['block']),
        'gasSubmitted': AptosGasDataFromJSON(json['gas_submitted']),
        'serializedSignedTransaction': json['serialized_signed_transaction'] == null ? undefined : json['serialized_signed_transaction'],
        'expectedResult': json['expected_result'] == null ? undefined : AptosTransactionResultFromJSON(json['expected_result']),
        'simulationStatusResult': json['simulation_status_result'] == null ? undefined : SimulationStatusResultFromJSON(json['simulation_status_result']),
        'minedResult': json['mined_result'] == null ? undefined : AptosTransactionResultFromJSON(json['mined_result']),
        'explorerUrl': json['explorer_url'] == null ? undefined : json['explorer_url'],
    };
}

export function AptosTransactionToJSON(json: any): AptosTransaction {
    return AptosTransactionToJSONTyped(json, false);
}

export function AptosTransactionToJSONTyped(value?: AptosTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'managed_transaction_data': ManagedTransactionDataToJSON(value['managedTransactionData']),
        'signatures': ((value['signatures'] as Array<any>).map(SignatureToJSON)),
        'note': value['note'],
        'spam_state': TransactionSpamStateToJSON(value['spamState']),
        'direction': TransactionDirectionToJSON(value['direction']),
        'signed_externally': value['signedExternally'],
        'state': PushableTransactionStateToJSON(value['state']),
        'state_changes': ((value['stateChanges'] as Array<any>).map(PushableTransactionStateChangeToJSON)),
        'aml_results': AmlResultsToJSON(value['amlResults']),
        'incoming_aml_policy_match': AmlPolicyMatchIncomingToJSON(value['incomingAmlPolicyMatch']),
        'type': value['type'],
        'aptos_transaction_type_details': AptosTransactionAptosTransactionTypeDetailsToJSON(value['aptosTransactionTypeDetails']),
        'chain': EnrichedAptosChainToJSON(value['chain']),
        'version': value['version'],
        'nonce': value['nonce'],
        'sender': EnrichedAptosAddressToJSON(value['sender']),
        'payload': AptosTransactionPayloadToJSON(value['payload']),
        'hash': value['hash'],
        'block': AptosBlockToJSON(value['block']),
        'gas_submitted': AptosGasDataToJSON(value['gasSubmitted']),
        'serialized_signed_transaction': value['serializedSignedTransaction'],
        'expected_result': AptosTransactionResultToJSON(value['expectedResult']),
        'simulation_status_result': SimulationStatusResultToJSON(value['simulationStatusResult']),
        'mined_result': AptosTransactionResultToJSON(value['minedResult']),
        'explorer_url': value['explorerUrl'],
    };
}

