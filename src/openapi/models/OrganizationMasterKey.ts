/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeyType } from './KeyType';
import {
    KeyTypeFromJSON,
    KeyTypeFromJSONTyped,
    KeyTypeToJSON,
    KeyTypeToJSONTyped,
} from './KeyType';
import type { KeyOriginType } from './KeyOriginType';
import {
    KeyOriginTypeFromJSON,
    KeyOriginTypeFromJSONTyped,
    KeyOriginTypeToJSON,
    KeyOriginTypeToJSONTyped,
} from './KeyOriginType';

/**
 * 
 * @export
 * @interface OrganizationMasterKey
 */
export interface OrganizationMasterKey {
    /**
     * 
     * @type {string}
     * @memberof OrganizationMasterKey
     */
    keyId: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationMasterKey
     */
    keyName: string;
    /**
     * 
     * @type {KeyType}
     * @memberof OrganizationMasterKey
     */
    keyType: KeyType;
    /**
     * 
     * @type {KeyOriginType}
     * @memberof OrganizationMasterKey
     */
    keyOrigin: KeyOriginType;
    /**
     * 
     * @type {string}
     * @memberof OrganizationMasterKey
     */
    xpub: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationMasterKey
     */
    publicKeyCompressed: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrganizationMasterKey
     */
    supportsDerivation: boolean;
}



/**
 * Check if a given object implements the OrganizationMasterKey interface.
 */
export function instanceOfOrganizationMasterKey(value: object): value is OrganizationMasterKey {
    if (!('keyId' in value) || value['keyId'] === undefined) return false;
    if (!('keyName' in value) || value['keyName'] === undefined) return false;
    if (!('keyType' in value) || value['keyType'] === undefined) return false;
    if (!('keyOrigin' in value) || value['keyOrigin'] === undefined) return false;
    if (!('xpub' in value) || value['xpub'] === undefined) return false;
    if (!('publicKeyCompressed' in value) || value['publicKeyCompressed'] === undefined) return false;
    if (!('supportsDerivation' in value) || value['supportsDerivation'] === undefined) return false;
    return true;
}

export function OrganizationMasterKeyFromJSON(json: any): OrganizationMasterKey {
    return OrganizationMasterKeyFromJSONTyped(json, false);
}

export function OrganizationMasterKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationMasterKey {
    if (json == null) {
        return json;
    }
    return {
        
        'keyId': json['key_id'],
        'keyName': json['key_name'],
        'keyType': KeyTypeFromJSON(json['key_type']),
        'keyOrigin': KeyOriginTypeFromJSON(json['key_origin']),
        'xpub': json['xpub'],
        'publicKeyCompressed': json['public_key_compressed'],
        'supportsDerivation': json['supports_derivation'],
    };
}

export function OrganizationMasterKeyToJSON(json: any): OrganizationMasterKey {
    return OrganizationMasterKeyToJSONTyped(json, false);
}

export function OrganizationMasterKeyToJSONTyped(value?: OrganizationMasterKey | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'key_id': value['keyId'],
        'key_name': value['keyName'],
        'key_type': KeyTypeToJSON(value['keyType']),
        'key_origin': KeyOriginTypeToJSON(value['keyOrigin']),
        'xpub': value['xpub'],
        'public_key_compressed': value['publicKeyCompressed'],
        'supports_derivation': value['supportsDerivation'],
    };
}

