/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApprovalRequestGroup } from './ApprovalRequestGroup';
import {
    ApprovalRequestGroupFromJSON,
    ApprovalRequestGroupFromJSONTyped,
    ApprovalRequestGroupToJSON,
    ApprovalRequestGroupToJSONTyped,
} from './ApprovalRequestGroup';
import type { ApprovalRequestState } from './ApprovalRequestState';
import {
    ApprovalRequestStateFromJSON,
    ApprovalRequestStateFromJSONTyped,
    ApprovalRequestStateToJSON,
    ApprovalRequestStateToJSONTyped,
} from './ApprovalRequestState';
import type { RequestApprover } from './RequestApprover';
import {
    RequestApproverFromJSON,
    RequestApproverFromJSONTyped,
    RequestApproverToJSON,
    RequestApproverToJSONTyped,
} from './RequestApprover';

/**
 * 
 * @export
 * @interface ApprovalRequest
 */
export interface ApprovalRequest {
    /**
     * 
     * @type {ApprovalRequestState}
     * @memberof ApprovalRequest
     */
    state: ApprovalRequestState;
    /**
     * 
     * @type {number}
     * @memberof ApprovalRequest
     * @deprecated
     */
    quorumSize?: number;
    /**
     * 
     * @type {Array<RequestApprover>}
     * @memberof ApprovalRequest
     * @deprecated
     */
    approvers?: Array<RequestApprover>;
    /**
     * 
     * @type {number}
     * @memberof ApprovalRequest
     */
    requiredGroups: number;
    /**
     * 
     * @type {Array<ApprovalRequestGroup>}
     * @memberof ApprovalRequest
     */
    approvalGroups: Array<ApprovalRequestGroup>;
    /**
     * 
     * @type {string}
     * @memberof ApprovalRequest
     */
    errorMessage?: string;
}



/**
 * Check if a given object implements the ApprovalRequest interface.
 */
export function instanceOfApprovalRequest(value: object): value is ApprovalRequest {
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('requiredGroups' in value) || value['requiredGroups'] === undefined) return false;
    if (!('approvalGroups' in value) || value['approvalGroups'] === undefined) return false;
    return true;
}

export function ApprovalRequestFromJSON(json: any): ApprovalRequest {
    return ApprovalRequestFromJSONTyped(json, false);
}

export function ApprovalRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApprovalRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'state': ApprovalRequestStateFromJSON(json['state']),
        'quorumSize': json['quorum_size'] == null ? undefined : json['quorum_size'],
        'approvers': json['approvers'] == null ? undefined : ((json['approvers'] as Array<any>).map(RequestApproverFromJSON)),
        'requiredGroups': json['required_groups'],
        'approvalGroups': ((json['approval_groups'] as Array<any>).map(ApprovalRequestGroupFromJSON)),
        'errorMessage': json['error_message'] == null ? undefined : json['error_message'],
    };
}

export function ApprovalRequestToJSON(json: any): ApprovalRequest {
    return ApprovalRequestToJSONTyped(json, false);
}

export function ApprovalRequestToJSONTyped(value?: ApprovalRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'state': ApprovalRequestStateToJSON(value['state']),
        'quorum_size': value['quorumSize'],
        'approvers': value['approvers'] == null ? undefined : ((value['approvers'] as Array<any>).map(RequestApproverToJSON)),
        'required_groups': value['requiredGroups'],
        'approval_groups': ((value['approvalGroups'] as Array<any>).map(ApprovalRequestGroupToJSON)),
        'error_message': value['errorMessage'],
    };
}

