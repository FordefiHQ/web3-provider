/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SolanaChainUniqueId } from './SolanaChainUniqueId';
import {
    SolanaChainUniqueIdFromJSON,
    SolanaChainUniqueIdFromJSONTyped,
    SolanaChainUniqueIdToJSON,
    SolanaChainUniqueIdToJSONTyped,
} from './SolanaChainUniqueId';
import type { SolanaSecretKeyRequest } from './SolanaSecretKeyRequest';
import {
    SolanaSecretKeyRequestFromJSON,
    SolanaSecretKeyRequestFromJSONTyped,
    SolanaSecretKeyRequestToJSON,
    SolanaSecretKeyRequestToJSONTyped,
} from './SolanaSecretKeyRequest';
import type { SolanaTransactionSignaturesRequest } from './SolanaTransactionSignaturesRequest';
import {
    SolanaTransactionSignaturesRequestFromJSON,
    SolanaTransactionSignaturesRequestFromJSONTyped,
    SolanaTransactionSignaturesRequestToJSON,
    SolanaTransactionSignaturesRequestToJSONTyped,
} from './SolanaTransactionSignaturesRequest';
import type { BatchSolanaTransactionRequestDetailsFee } from './BatchSolanaTransactionRequestDetailsFee';
import {
    BatchSolanaTransactionRequestDetailsFeeFromJSON,
    BatchSolanaTransactionRequestDetailsFeeFromJSONTyped,
    BatchSolanaTransactionRequestDetailsFeeToJSON,
    BatchSolanaTransactionRequestDetailsFeeToJSONTyped,
} from './BatchSolanaTransactionRequestDetailsFee';

/**
 * 
 * @export
 * @interface TransactionPredictSolanaSerializedTransactionMessageRequest
 */
export interface TransactionPredictSolanaSerializedTransactionMessageRequest {
    /**
     * 
     * @type {string}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    type: TransactionPredictSolanaSerializedTransactionMessageRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    failOnPredictionFailure?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    skipSimulation?: boolean;
    /**
     * 
     * @type {BatchSolanaTransactionRequestDetailsFee}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    fee?: BatchSolanaTransactionRequestDetailsFee;
    /**
     * 
     * @type {SolanaChainUniqueId}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    chain: SolanaChainUniqueId;
    /**
     * 
     * @type {string}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    data: string;
    /**
     * 
     * @type {Array<SolanaTransactionSignaturesRequest>}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    signatures?: Array<SolanaTransactionSignaturesRequest>;
    /**
     * 
     * @type {Array<SolanaSecretKeyRequest>}
     * @memberof TransactionPredictSolanaSerializedTransactionMessageRequest
     */
    ephemeralKeys?: Array<SolanaSecretKeyRequest>;
}


/**
 * @export
 */
export const TransactionPredictSolanaSerializedTransactionMessageRequestTypeEnum = {
    solanaSerializedTransactionMessage: 'solana_serialized_transaction_message'
} as const;
export type TransactionPredictSolanaSerializedTransactionMessageRequestTypeEnum = typeof TransactionPredictSolanaSerializedTransactionMessageRequestTypeEnum[keyof typeof TransactionPredictSolanaSerializedTransactionMessageRequestTypeEnum];


/**
 * Check if a given object implements the TransactionPredictSolanaSerializedTransactionMessageRequest interface.
 */
export function instanceOfTransactionPredictSolanaSerializedTransactionMessageRequest(value: object): value is TransactionPredictSolanaSerializedTransactionMessageRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function TransactionPredictSolanaSerializedTransactionMessageRequestFromJSON(json: any): TransactionPredictSolanaSerializedTransactionMessageRequest {
    return TransactionPredictSolanaSerializedTransactionMessageRequestFromJSONTyped(json, false);
}

export function TransactionPredictSolanaSerializedTransactionMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionPredictSolanaSerializedTransactionMessageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'failOnPredictionFailure': json['fail_on_prediction_failure'] == null ? undefined : json['fail_on_prediction_failure'],
        'skipSimulation': json['skip_simulation'] == null ? undefined : json['skip_simulation'],
        'fee': json['fee'] == null ? undefined : BatchSolanaTransactionRequestDetailsFeeFromJSON(json['fee']),
        'chain': SolanaChainUniqueIdFromJSON(json['chain']),
        'data': json['data'],
        'signatures': json['signatures'] == null ? undefined : ((json['signatures'] as Array<any>).map(SolanaTransactionSignaturesRequestFromJSON)),
        'ephemeralKeys': json['ephemeral_keys'] == null ? undefined : ((json['ephemeral_keys'] as Array<any>).map(SolanaSecretKeyRequestFromJSON)),
    };
}

export function TransactionPredictSolanaSerializedTransactionMessageRequestToJSON(json: any): TransactionPredictSolanaSerializedTransactionMessageRequest {
    return TransactionPredictSolanaSerializedTransactionMessageRequestToJSONTyped(json, false);
}

export function TransactionPredictSolanaSerializedTransactionMessageRequestToJSONTyped(value?: TransactionPredictSolanaSerializedTransactionMessageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'fail_on_prediction_failure': value['failOnPredictionFailure'],
        'skip_simulation': value['skipSimulation'],
        'fee': BatchSolanaTransactionRequestDetailsFeeToJSON(value['fee']),
        'chain': SolanaChainUniqueIdToJSON(value['chain']),
        'data': value['data'],
        'signatures': value['signatures'] == null ? undefined : ((value['signatures'] as Array<any>).map(SolanaTransactionSignaturesRequestToJSON)),
        'ephemeral_keys': value['ephemeralKeys'] == null ? undefined : ((value['ephemeralKeys'] as Array<any>).map(SolanaSecretKeyRequestToJSON)),
    };
}

