/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeyType } from './KeyType';
import {
    KeyTypeFromJSON,
    KeyTypeFromJSONTyped,
    KeyTypeToJSON,
    KeyTypeToJSONTyped,
} from './KeyType';

/**
 * 
 * @export
 * @interface KeyDerivationArgs
 */
export interface KeyDerivationArgs {
    /**
     * 
     * @type {KeyType}
     * @memberof KeyDerivationArgs
     */
    keyType: KeyType;
    /**
     * 
     * @type {number}
     * @memberof KeyDerivationArgs
     * @deprecated
     */
    coinType?: number;
    /**
     * 
     * @type {number}
     * @memberof KeyDerivationArgs
     * @deprecated
     */
    accountId?: number;
    /**
     * 
     * @type {number}
     * @memberof KeyDerivationArgs
     * @deprecated
     */
    addressIndex?: number;
    /**
     * 
     * @type {string}
     * @memberof KeyDerivationArgs
     */
    derivationPath: string;
    /**
     * 
     * @type {string}
     * @memberof KeyDerivationArgs
     */
    keyId: string;
    /**
     * 
     * @type {string}
     * @memberof KeyDerivationArgs
     */
    keysetId: string;
    /**
     * 
     * @type {string}
     * @memberof KeyDerivationArgs
     */
    adjustScalar?: string;
}



/**
 * Check if a given object implements the KeyDerivationArgs interface.
 */
export function instanceOfKeyDerivationArgs(value: object): value is KeyDerivationArgs {
    if (!('keyType' in value) || value['keyType'] === undefined) return false;
    if (!('derivationPath' in value) || value['derivationPath'] === undefined) return false;
    if (!('keyId' in value) || value['keyId'] === undefined) return false;
    if (!('keysetId' in value) || value['keysetId'] === undefined) return false;
    return true;
}

export function KeyDerivationArgsFromJSON(json: any): KeyDerivationArgs {
    return KeyDerivationArgsFromJSONTyped(json, false);
}

export function KeyDerivationArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyDerivationArgs {
    if (json == null) {
        return json;
    }
    return {
        
        'keyType': KeyTypeFromJSON(json['key_type']),
        'coinType': json['coin_type'] == null ? undefined : json['coin_type'],
        'accountId': json['account_id'] == null ? undefined : json['account_id'],
        'addressIndex': json['address_index'] == null ? undefined : json['address_index'],
        'derivationPath': json['derivation_path'],
        'keyId': json['key_id'],
        'keysetId': json['keyset_id'],
        'adjustScalar': json['adjust_scalar'] == null ? undefined : json['adjust_scalar'],
    };
}

export function KeyDerivationArgsToJSON(json: any): KeyDerivationArgs {
    return KeyDerivationArgsToJSONTyped(json, false);
}

export function KeyDerivationArgsToJSONTyped(value?: KeyDerivationArgs | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'key_type': KeyTypeToJSON(value['keyType']),
        'coin_type': value['coinType'],
        'account_id': value['accountId'],
        'address_index': value['addressIndex'],
        'derivation_path': value['derivationPath'],
        'key_id': value['keyId'],
        'keyset_id': value['keysetId'],
        'adjust_scalar': value['adjustScalar'],
    };
}

