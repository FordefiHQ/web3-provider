/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AptosChainUniqueId } from './AptosChainUniqueId';
import {
    AptosChainUniqueIdFromJSON,
    AptosChainUniqueIdFromJSONTyped,
    AptosChainUniqueIdToJSON,
    AptosChainUniqueIdToJSONTyped,
} from './AptosChainUniqueId';

/**
 * 
 * @export
 * @interface AptosPersonalMessageRequest
 */
export interface AptosPersonalMessageRequest {
    /**
     * 
     * @type {string}
     * @memberof AptosPersonalMessageRequest
     */
    type: AptosPersonalMessageRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof AptosPersonalMessageRequest
     */
    shouldIncludeAddress: boolean;
    /**
     * 
     * @type {string}
     * @memberof AptosPersonalMessageRequest
     */
    application: string;
    /**
     * 
     * @type {boolean}
     * @memberof AptosPersonalMessageRequest
     */
    shouldIncludeApplication: boolean;
    /**
     * 
     * @type {AptosChainUniqueId}
     * @memberof AptosPersonalMessageRequest
     */
    chain: AptosChainUniqueId;
    /**
     * 
     * @type {boolean}
     * @memberof AptosPersonalMessageRequest
     */
    shouldIncludeChain: boolean;
    /**
     * 
     * @type {string}
     * @memberof AptosPersonalMessageRequest
     */
    messageToSign: string;
    /**
     * 
     * @type {string}
     * @memberof AptosPersonalMessageRequest
     */
    nonce: string;
}


/**
 * @export
 */
export const AptosPersonalMessageRequestTypeEnum = {
    personalMessageType: 'personal_message_type'
} as const;
export type AptosPersonalMessageRequestTypeEnum = typeof AptosPersonalMessageRequestTypeEnum[keyof typeof AptosPersonalMessageRequestTypeEnum];


/**
 * Check if a given object implements the AptosPersonalMessageRequest interface.
 */
export function instanceOfAptosPersonalMessageRequest(value: object): value is AptosPersonalMessageRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('shouldIncludeAddress' in value) || value['shouldIncludeAddress'] === undefined) return false;
    if (!('application' in value) || value['application'] === undefined) return false;
    if (!('shouldIncludeApplication' in value) || value['shouldIncludeApplication'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('shouldIncludeChain' in value) || value['shouldIncludeChain'] === undefined) return false;
    if (!('messageToSign' in value) || value['messageToSign'] === undefined) return false;
    if (!('nonce' in value) || value['nonce'] === undefined) return false;
    return true;
}

export function AptosPersonalMessageRequestFromJSON(json: any): AptosPersonalMessageRequest {
    return AptosPersonalMessageRequestFromJSONTyped(json, false);
}

export function AptosPersonalMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AptosPersonalMessageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'shouldIncludeAddress': json['should_include_address'],
        'application': json['application'],
        'shouldIncludeApplication': json['should_include_application'],
        'chain': AptosChainUniqueIdFromJSON(json['chain']),
        'shouldIncludeChain': json['should_include_chain'],
        'messageToSign': json['message_to_sign'],
        'nonce': json['nonce'],
    };
}

export function AptosPersonalMessageRequestToJSON(json: any): AptosPersonalMessageRequest {
    return AptosPersonalMessageRequestToJSONTyped(json, false);
}

export function AptosPersonalMessageRequestToJSONTyped(value?: AptosPersonalMessageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'should_include_address': value['shouldIncludeAddress'],
        'application': value['application'],
        'should_include_application': value['shouldIncludeApplication'],
        'chain': AptosChainUniqueIdToJSON(value['chain']),
        'should_include_chain': value['shouldIncludeChain'],
        'message_to_sign': value['messageToSign'],
        'nonce': value['nonce'],
    };
}

