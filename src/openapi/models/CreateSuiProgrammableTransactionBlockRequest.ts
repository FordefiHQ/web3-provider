/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SuiCommand } from './SuiCommand';
import {
    SuiCommandToJSON,
} from './SuiCommand';
import type { SuiChainUniqueId } from './SuiChainUniqueId';
import {
    SuiChainUniqueIdToJSON,
} from './SuiChainUniqueId';
import type { SuiInput } from './SuiInput';
import {
    SuiInputToJSON,
} from './SuiInput';
import type { PushMode } from './PushMode';
import {
    PushModeToJSON,
} from './PushMode';
import type { SuiGasConfig } from './SuiGasConfig';
import {
    SuiGasConfigToJSON,
} from './SuiGasConfig';

/**
 * 
 * @export
 * @interface CreateSuiProgrammableTransactionBlockRequest
 */
export interface CreateSuiProgrammableTransactionBlockRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    type: CreateSuiProgrammableTransactionBlockRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    failOnPredictionFailure?: boolean;
    /**
     * 
     * @type {PushMode}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {boolean}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    skipPrediction?: boolean;
    /**
     * 
     * @type {SuiChainUniqueId}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    chain: SuiChainUniqueId;
    /**
     * 
     * @type {SuiGasConfig}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    gasConfig?: SuiGasConfig;
    /**
     * 
     * @type {Array<SuiInput>}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    inputs: Array<SuiInput>;
    /**
     * 
     * @type {Array<SuiCommand>}
     * @memberof CreateSuiProgrammableTransactionBlockRequest
     */
    commands: Array<SuiCommand>;
}


/**
 * 
 */
const CreateSuiProgrammableTransactionBlockRequestTypeEnum = {
    suiProgrammableTransactionBlock: 'sui_programmable_transaction_block'
} as const;
type CreateSuiProgrammableTransactionBlockRequestTypeEnum = typeof CreateSuiProgrammableTransactionBlockRequestTypeEnum[keyof typeof CreateSuiProgrammableTransactionBlockRequestTypeEnum];

export function CreateSuiProgrammableTransactionBlockRequestToJSON(json: any): CreateSuiProgrammableTransactionBlockRequest {
    return CreateSuiProgrammableTransactionBlockRequestToJSONTyped(json, false);
}

function CreateSuiProgrammableTransactionBlockRequestToJSONTyped(value?: CreateSuiProgrammableTransactionBlockRequest | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'fail_on_prediction_failure': value['failOnPredictionFailure'],
        'push_mode': PushModeToJSON(value['pushMode']),
        'skip_prediction': value['skipPrediction'],
        'chain': SuiChainUniqueIdToJSON(value['chain']),
        'gas_config': SuiGasConfigToJSON(value['gasConfig']),
        'inputs': ((value['inputs'] as Array<any>).map(SuiInputToJSON)),
        'commands': ((value['commands'] as Array<any>).map(SuiCommandToJSON)),
    };
}
