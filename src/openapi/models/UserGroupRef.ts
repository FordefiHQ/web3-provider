/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserGroupState } from './UserGroupState';
import {
    UserGroupStateFromJSON,
    UserGroupStateFromJSONTyped,
    UserGroupStateToJSON,
    UserGroupStateToJSONTyped,
} from './UserGroupState';

/**
 * 
 * @export
 * @interface UserGroupRef
 */
export interface UserGroupRef {
    /**
     * 
     * @type {string}
     * @memberof UserGroupRef
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserGroupRef
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof UserGroupRef
     */
    usersCount: number;
    /**
     * 
     * @type {number}
     * @memberof UserGroupRef
     */
    adminsCount: number;
    /**
     * 
     * @type {UserGroupState}
     * @memberof UserGroupRef
     */
    state: UserGroupState;
}



/**
 * Check if a given object implements the UserGroupRef interface.
 */
export function instanceOfUserGroupRef(value: object): value is UserGroupRef {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('usersCount' in value) || value['usersCount'] === undefined) return false;
    if (!('adminsCount' in value) || value['adminsCount'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function UserGroupRefFromJSON(json: any): UserGroupRef {
    return UserGroupRefFromJSONTyped(json, false);
}

export function UserGroupRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserGroupRef {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'usersCount': json['users_count'],
        'adminsCount': json['admins_count'],
        'state': UserGroupStateFromJSON(json['state']),
    };
}

export function UserGroupRefToJSON(json: any): UserGroupRef {
    return UserGroupRefToJSONTyped(json, false);
}

export function UserGroupRefToJSONTyped(value?: UserGroupRef | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'users_count': value['usersCount'],
        'admins_count': value['adminsCount'],
        'state': UserGroupStateToJSON(value['state']),
    };
}

