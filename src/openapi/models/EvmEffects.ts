/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AllowanceEffect } from './AllowanceEffect';
import {
    AllowanceEffectFromJSON,
    AllowanceEffectFromJSONTyped,
    AllowanceEffectToJSON,
} from './AllowanceEffect';
import type { EvmBalanceChangeEffect } from './EvmBalanceChangeEffect';
import {
    EvmBalanceChangeEffectFromJSON,
    EvmBalanceChangeEffectFromJSONTyped,
    EvmBalanceChangeEffectToJSON,
} from './EvmBalanceChangeEffect';
import type { EvmBridgeEffect } from './EvmBridgeEffect';
import {
    EvmBridgeEffectFromJSON,
    EvmBridgeEffectFromJSONTyped,
    EvmBridgeEffectToJSON,
} from './EvmBridgeEffect';
import type { EvmTransferEffect } from './EvmTransferEffect';
import {
    EvmTransferEffectFromJSON,
    EvmTransferEffectFromJSONTyped,
    EvmTransferEffectToJSON,
} from './EvmTransferEffect';

/**
 * 
 * @export
 * @interface EvmEffects
 */
export interface EvmEffects {
    /**
     * 
     * @type {Array<EvmBalanceChangeEffect>}
     * @memberof EvmEffects
     */
    balanceChanges: Array<EvmBalanceChangeEffect>;
    /**
     * 
     * @type {Array<EvmTransferEffect>}
     * @memberof EvmEffects
     */
    transfers: Array<EvmTransferEffect>;
    /**
     * 
     * @type {Array<AllowanceEffect>}
     * @memberof EvmEffects
     */
    allowances: Array<AllowanceEffect>;
    /**
     * 
     * @type {Array<EvmBridgeEffect>}
     * @memberof EvmEffects
     */
    bridge: Array<EvmBridgeEffect>;
}

/**
 * Check if a given object implements the EvmEffects interface.
 */
export function instanceOfEvmEffects(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "balanceChanges" in value;
    isInstance = isInstance && "transfers" in value;
    isInstance = isInstance && "allowances" in value;
    isInstance = isInstance && "bridge" in value;

    return isInstance;
}

export function EvmEffectsFromJSON(json: any): EvmEffects {
    return EvmEffectsFromJSONTyped(json, false);
}

export function EvmEffectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmEffects {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'balanceChanges': ((json['balance_changes'] as Array<any>).map(EvmBalanceChangeEffectFromJSON)),
        'transfers': ((json['transfers'] as Array<any>).map(EvmTransferEffectFromJSON)),
        'allowances': ((json['allowances'] as Array<any>).map(AllowanceEffectFromJSON)),
        'bridge': ((json['bridge'] as Array<any>).map(EvmBridgeEffectFromJSON)),
    };
}

export function EvmEffectsToJSON(value?: EvmEffects | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'balance_changes': ((value.balanceChanges as Array<any>).map(EvmBalanceChangeEffectToJSON)),
        'transfers': ((value.transfers as Array<any>).map(EvmTransferEffectToJSON)),
        'allowances': ((value.allowances as Array<any>).map(AllowanceEffectToJSON)),
        'bridge': ((value.bridge as Array<any>).map(EvmBridgeEffectToJSON)),
    };
}

