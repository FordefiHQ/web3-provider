/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { InvalidAssetRequest } from './InvalidAssetRequest';
import {
    instanceOfInvalidAssetRequest,
    InvalidAssetRequestFromJSON,
    InvalidAssetRequestFromJSONTyped,
    InvalidAssetRequestToJSON,
} from './InvalidAssetRequest';
import type { PricedAsset } from './PricedAsset';
import {
    instanceOfPricedAsset,
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
} from './PricedAsset';

/**
 * @type PricedAssetResponse
 * 
 * @export
 */
export type PricedAssetResponse = { type: 'asset_price' } & PricedAsset | { type: 'invalid_asset' } & InvalidAssetRequest;

export function PricedAssetResponseFromJSON(json: any): PricedAssetResponse {
    return PricedAssetResponseFromJSONTyped(json, false);
}

export function PricedAssetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PricedAssetResponse {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'asset_price':
            return Object.assign({}, PricedAssetFromJSONTyped(json, true), { type: 'asset_price' } as const);
        case 'invalid_asset':
            return Object.assign({}, InvalidAssetRequestFromJSONTyped(json, true), { type: 'invalid_asset' } as const);
        default:
            throw new Error(`No variant of PricedAssetResponse exists with 'type=${json['type']}'`);
    }
}

export function PricedAssetResponseToJSON(json: any): any {
    return PricedAssetResponseToJSONTyped(json, false);
}

export function PricedAssetResponseToJSONTyped(value?: PricedAssetResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'asset_price':
            return Object.assign({}, PricedAssetToJSON(value), { type: 'asset_price' } as const);
        case 'invalid_asset':
            return Object.assign({}, InvalidAssetRequestToJSON(value), { type: 'invalid_asset' } as const);
        default:
            throw new Error(`No variant of PricedAssetResponse exists with 'type=${value['type']}'`);
    }

}

