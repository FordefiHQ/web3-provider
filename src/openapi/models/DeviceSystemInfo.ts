/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DevicePlatform } from './DevicePlatform';
import {
    DevicePlatformFromJSON,
    DevicePlatformFromJSONTyped,
    DevicePlatformToJSON,
} from './DevicePlatform';

/**
 * 
 * @export
 * @interface DeviceSystemInfo
 */
export interface DeviceSystemInfo {
    /**
     * 
     * @type {DevicePlatform}
     * @memberof DeviceSystemInfo
     */
    platform: DevicePlatform;
    /**
     * 
     * @type {string}
     * @memberof DeviceSystemInfo
     */
    model: string;
    /**
     * 
     * @type {string}
     * @memberof DeviceSystemInfo
     */
    pushToken: string;
}

/**
 * Check if a given object implements the DeviceSystemInfo interface.
 */
export function instanceOfDeviceSystemInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "platform" in value;
    isInstance = isInstance && "model" in value;
    isInstance = isInstance && "pushToken" in value;

    return isInstance;
}

export function DeviceSystemInfoFromJSON(json: any): DeviceSystemInfo {
    return DeviceSystemInfoFromJSONTyped(json, false);
}

export function DeviceSystemInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceSystemInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'platform': DevicePlatformFromJSON(json['platform']),
        'model': json['model'],
        'pushToken': json['push_token'],
    };
}

export function DeviceSystemInfoToJSON(value?: DeviceSystemInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'platform': DevicePlatformToJSON(value.platform),
        'model': value.model,
        'push_token': value.pushToken,
    };
}

