/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StarknetChainUniqueId } from './StarknetChainUniqueId';
import {
    StarknetChainUniqueIdFromJSON,
    StarknetChainUniqueIdFromJSONTyped,
    StarknetChainUniqueIdToJSON,
} from './StarknetChainUniqueId';

/**
 * 
 * @export
 * @interface EditStarknetContactRequest
 */
export interface EditStarknetContactRequest {
    /**
     * 
     * @type {string}
     * @memberof EditStarknetContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EditStarknetContactRequest
     */
    type: EditStarknetContactRequestTypeEnum;
    /**
     * 
     * @type {Array<StarknetChainUniqueId>}
     * @memberof EditStarknetContactRequest
     */
    chains: Array<StarknetChainUniqueId>;
}


/**
 * @export
 */
export const EditStarknetContactRequestTypeEnum = {
    starknet: 'starknet'
} as const;
export type EditStarknetContactRequestTypeEnum = typeof EditStarknetContactRequestTypeEnum[keyof typeof EditStarknetContactRequestTypeEnum];


/**
 * Check if a given object implements the EditStarknetContactRequest interface.
 */
export function instanceOfEditStarknetContactRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "chains" in value;

    return isInstance;
}

export function EditStarknetContactRequestFromJSON(json: any): EditStarknetContactRequest {
    return EditStarknetContactRequestFromJSONTyped(json, false);
}

export function EditStarknetContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditStarknetContactRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'chains': ((json['chains'] as Array<any>).map(StarknetChainUniqueIdFromJSON)),
    };
}

export function EditStarknetContactRequestToJSON(value?: EditStarknetContactRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'chains': ((value.chains as Array<any>).map(StarknetChainUniqueIdToJSON)),
    };
}

