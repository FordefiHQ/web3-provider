/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Mnemonic
 */
export interface Mnemonic {
    /**
     * 
     * @type {string}
     * @memberof Mnemonic
     */
    validationHash: string;
    /**
     * 
     * @type {string}
     * @memberof Mnemonic
     */
    type: MnemonicTypeEnum;
}


/**
 * @export
 */
export const MnemonicTypeEnum = {
    mnemonic: 'mnemonic'
} as const;
export type MnemonicTypeEnum = typeof MnemonicTypeEnum[keyof typeof MnemonicTypeEnum];


/**
 * Check if a given object implements the Mnemonic interface.
 */
export function instanceOfMnemonic(value: object): value is Mnemonic {
    if (!('validationHash' in value) || value['validationHash'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function MnemonicFromJSON(json: any): Mnemonic {
    return MnemonicFromJSONTyped(json, false);
}

export function MnemonicFromJSONTyped(json: any, ignoreDiscriminator: boolean): Mnemonic {
    if (json == null) {
        return json;
    }
    return {
        
        'validationHash': json['validation_hash'],
        'type': json['type'],
    };
}

export function MnemonicToJSON(json: any): Mnemonic {
    return MnemonicToJSONTyped(json, false);
}

export function MnemonicToJSONTyped(value?: Mnemonic | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'validation_hash': value['validationHash'],
        'type': value['type'],
    };
}

