/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosCoinWithAmountCoinWithAmount } from './CosmosCoinWithAmountCoinWithAmount';
import {
    CosmosCoinWithAmountCoinWithAmountFromJSON,
    CosmosCoinWithAmountCoinWithAmountFromJSONTyped,
    CosmosCoinWithAmountCoinWithAmountToJSON,
} from './CosmosCoinWithAmountCoinWithAmount';

/**
 * 
 * @export
 * @interface CosmosCoinWithAmount
 */
export interface CosmosCoinWithAmount {
    /**
     * 
     * @type {CosmosCoinWithAmountCoinWithAmount}
     * @memberof CosmosCoinWithAmount
     */
    coinWithAmount: CosmosCoinWithAmountCoinWithAmount;
}

/**
 * Check if a given object implements the CosmosCoinWithAmount interface.
 */
export function instanceOfCosmosCoinWithAmount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "coinWithAmount" in value;

    return isInstance;
}

export function CosmosCoinWithAmountFromJSON(json: any): CosmosCoinWithAmount {
    return CosmosCoinWithAmountFromJSONTyped(json, false);
}

export function CosmosCoinWithAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosCoinWithAmount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'coinWithAmount': CosmosCoinWithAmountCoinWithAmountFromJSON(json['coin_with_amount']),
    };
}

export function CosmosCoinWithAmountToJSON(value?: CosmosCoinWithAmount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coin_with_amount': CosmosCoinWithAmountCoinWithAmountToJSON(value.coinWithAmount),
    };
}

