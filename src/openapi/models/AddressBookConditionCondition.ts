/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AddressBookConditionAny } from './AddressBookConditionAny';
import {
    instanceOfAddressBookConditionAny,
    AddressBookConditionAnyFromJSON,
    AddressBookConditionAnyFromJSONTyped,
    AddressBookConditionAnyToJSON,
} from './AddressBookConditionAny';
import type { AddressBookConditionCustom } from './AddressBookConditionCustom';
import {
    instanceOfAddressBookConditionCustom,
    AddressBookConditionCustomFromJSON,
    AddressBookConditionCustomFromJSONTyped,
    AddressBookConditionCustomToJSON,
} from './AddressBookConditionCustom';

/**
 * @type AddressBookConditionCondition
 * 
 * @export
 */
export type AddressBookConditionCondition = { type: 'any' } & AddressBookConditionAny | { type: 'custom' } & AddressBookConditionCustom;

export function AddressBookConditionConditionFromJSON(json: any): AddressBookConditionCondition {
    return AddressBookConditionConditionFromJSONTyped(json, false);
}

export function AddressBookConditionConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressBookConditionCondition {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'any':
            return Object.assign({}, AddressBookConditionAnyFromJSONTyped(json, true), { type: 'any' } as const);
        case 'custom':
            return Object.assign({}, AddressBookConditionCustomFromJSONTyped(json, true), { type: 'custom' } as const);
        default:
            throw new Error(`No variant of AddressBookConditionCondition exists with 'type=${json['type']}'`);
    }
}

export function AddressBookConditionConditionToJSON(json: any): any {
    return AddressBookConditionConditionToJSONTyped(json, false);
}

export function AddressBookConditionConditionToJSONTyped(value?: AddressBookConditionCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'any':
            return Object.assign({}, AddressBookConditionAnyToJSON(value), { type: 'any' } as const);
        case 'custom':
            return Object.assign({}, AddressBookConditionCustomToJSON(value), { type: 'custom' } as const);
        default:
            throw new Error(`No variant of AddressBookConditionCondition exists with 'type=${value['type']}'`);
    }

}

