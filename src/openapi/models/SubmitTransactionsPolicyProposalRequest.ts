/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionRuleRequest } from './TransactionRuleRequest';
import {
    TransactionRuleRequestFromJSON,
    TransactionRuleRequestFromJSONTyped,
    TransactionRuleRequestToJSON,
    TransactionRuleRequestToJSONTyped,
} from './TransactionRuleRequest';
import type { RuleActionRequest } from './RuleActionRequest';
import {
    RuleActionRequestFromJSON,
    RuleActionRequestFromJSONTyped,
    RuleActionRequestToJSON,
    RuleActionRequestToJSONTyped,
} from './RuleActionRequest';

/**
 * 
 * @export
 * @interface SubmitTransactionsPolicyProposalRequest
 */
export interface SubmitTransactionsPolicyProposalRequest {
    /**
     * 
     * @type {Array<TransactionRuleRequest>}
     * @memberof SubmitTransactionsPolicyProposalRequest
     */
    rules?: Array<TransactionRuleRequest>;
    /**
     * 
     * @type {RuleActionRequest}
     * @memberof SubmitTransactionsPolicyProposalRequest
     */
    defaultAction: RuleActionRequest;
}

/**
 * Check if a given object implements the SubmitTransactionsPolicyProposalRequest interface.
 */
export function instanceOfSubmitTransactionsPolicyProposalRequest(value: object): value is SubmitTransactionsPolicyProposalRequest {
    if (!('defaultAction' in value) || value['defaultAction'] === undefined) return false;
    return true;
}

export function SubmitTransactionsPolicyProposalRequestFromJSON(json: any): SubmitTransactionsPolicyProposalRequest {
    return SubmitTransactionsPolicyProposalRequestFromJSONTyped(json, false);
}

export function SubmitTransactionsPolicyProposalRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubmitTransactionsPolicyProposalRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(TransactionRuleRequestFromJSON)),
        'defaultAction': RuleActionRequestFromJSON(json['default_action']),
    };
}

export function SubmitTransactionsPolicyProposalRequestToJSON(json: any): SubmitTransactionsPolicyProposalRequest {
    return SubmitTransactionsPolicyProposalRequestToJSONTyped(json, false);
}

export function SubmitTransactionsPolicyProposalRequestToJSONTyped(value?: SubmitTransactionsPolicyProposalRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(TransactionRuleRequestToJSON)),
        'default_action': RuleActionRequestToJSON(value['defaultAction']),
    };
}

