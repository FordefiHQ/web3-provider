/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RuleActionRequest } from './RuleActionRequest';
import {
    RuleActionRequestFromJSON,
    RuleActionRequestFromJSONTyped,
    RuleActionRequestToJSON,
} from './RuleActionRequest';
import type { TransactionRuleRequest } from './TransactionRuleRequest';
import {
    TransactionRuleRequestFromJSON,
    TransactionRuleRequestFromJSONTyped,
    TransactionRuleRequestToJSON,
} from './TransactionRuleRequest';

/**
 * 
 * @export
 * @interface SubmitTransactionsPolicyProposalRequest
 */
export interface SubmitTransactionsPolicyProposalRequest {
    /**
     * 
     * @type {Array<TransactionRuleRequest>}
     * @memberof SubmitTransactionsPolicyProposalRequest
     */
    rules?: Array<TransactionRuleRequest>;
    /**
     * 
     * @type {RuleActionRequest}
     * @memberof SubmitTransactionsPolicyProposalRequest
     */
    defaultAction: RuleActionRequest;
}

/**
 * Check if a given object implements the SubmitTransactionsPolicyProposalRequest interface.
 */
export function instanceOfSubmitTransactionsPolicyProposalRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "defaultAction" in value;

    return isInstance;
}

export function SubmitTransactionsPolicyProposalRequestFromJSON(json: any): SubmitTransactionsPolicyProposalRequest {
    return SubmitTransactionsPolicyProposalRequestFromJSONTyped(json, false);
}

export function SubmitTransactionsPolicyProposalRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubmitTransactionsPolicyProposalRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rules': !exists(json, 'rules') ? undefined : ((json['rules'] as Array<any>).map(TransactionRuleRequestFromJSON)),
        'defaultAction': RuleActionRequestFromJSON(json['default_action']),
    };
}

export function SubmitTransactionsPolicyProposalRequestToJSON(value?: SubmitTransactionsPolicyProposalRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rules': value.rules === undefined ? undefined : ((value.rules as Array<any>).map(TransactionRuleRequestToJSON)),
        'default_action': RuleActionRequestToJSON(value.defaultAction),
    };
}

