/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransferDirection } from './TransferDirection';
import {
    TransferDirectionFromJSON,
    TransferDirectionFromJSONTyped,
    TransferDirectionToJSON,
    TransferDirectionToJSONTyped,
} from './TransferDirection';
import type { EnrichedEvmAddress } from './EnrichedEvmAddress';
import {
    EnrichedEvmAddressFromJSON,
    EnrichedEvmAddressFromJSONTyped,
    EnrichedEvmAddressToJSON,
    EnrichedEvmAddressToJSONTyped,
} from './EnrichedEvmAddress';

/**
 * 
 * @export
 * @interface TokenTransferDetails
 */
export interface TokenTransferDetails {
    /**
     * 
     * @type {string}
     * @memberof TokenTransferDetails
     */
    type: TokenTransferDetailsTypeEnum;
    /**
     * 
     * @type {TransferDirection}
     * @memberof TokenTransferDetails
     */
    direction: TransferDirection;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof TokenTransferDetails
     */
    recipient: EnrichedEvmAddress;
    /**
     * 
     * @type {boolean}
     * @memberof TokenTransferDetails
     */
    isInternal?: boolean;
}


/**
 * @export
 */
export const TokenTransferDetailsTypeEnum = {
    tokenTransfer: 'token_transfer'
} as const;
export type TokenTransferDetailsTypeEnum = typeof TokenTransferDetailsTypeEnum[keyof typeof TokenTransferDetailsTypeEnum];


/**
 * Check if a given object implements the TokenTransferDetails interface.
 */
export function instanceOfTokenTransferDetails(value: object): value is TokenTransferDetails {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    if (!('recipient' in value) || value['recipient'] === undefined) return false;
    return true;
}

export function TokenTransferDetailsFromJSON(json: any): TokenTransferDetails {
    return TokenTransferDetailsFromJSONTyped(json, false);
}

export function TokenTransferDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenTransferDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'direction': TransferDirectionFromJSON(json['direction']),
        'recipient': EnrichedEvmAddressFromJSON(json['recipient']),
        'isInternal': json['is_internal'] == null ? undefined : json['is_internal'],
    };
}

export function TokenTransferDetailsToJSON(json: any): TokenTransferDetails {
    return TokenTransferDetailsToJSONTyped(json, false);
}

export function TokenTransferDetailsToJSONTyped(value?: TokenTransferDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'direction': TransferDirectionToJSON(value['direction']),
        'recipient': EnrichedEvmAddressToJSON(value['recipient']),
        'is_internal': value['isInternal'],
    };
}

