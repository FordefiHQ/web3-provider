/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnrichedTonChain } from './EnrichedTonChain';
import {
    EnrichedTonChainFromJSON,
    EnrichedTonChainFromJSONTyped,
    EnrichedTonChainToJSON,
} from './EnrichedTonChain';
import type { TonAssetIdentifierDetails } from './TonAssetIdentifierDetails';
import {
    TonAssetIdentifierDetailsFromJSON,
    TonAssetIdentifierDetailsFromJSONTyped,
    TonAssetIdentifierDetailsToJSON,
} from './TonAssetIdentifierDetails';

/**
 * 
 * @export
 * @interface TonAssetIdentifier
 */
export interface TonAssetIdentifier {
    /**
     * 
     * @type {string}
     * @memberof TonAssetIdentifier
     */
    type: TonAssetIdentifierTypeEnum;
    /**
     * 
     * @type {TonAssetIdentifierDetails}
     * @memberof TonAssetIdentifier
     */
    details: TonAssetIdentifierDetails;
    /**
     * 
     * @type {EnrichedTonChain}
     * @memberof TonAssetIdentifier
     */
    chain: EnrichedTonChain;
}


/**
 * @export
 */
export const TonAssetIdentifierTypeEnum = {
    ton: 'ton'
} as const;
export type TonAssetIdentifierTypeEnum = typeof TonAssetIdentifierTypeEnum[keyof typeof TonAssetIdentifierTypeEnum];


/**
 * Check if a given object implements the TonAssetIdentifier interface.
 */
export function instanceOfTonAssetIdentifier(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "details" in value;
    isInstance = isInstance && "chain" in value;

    return isInstance;
}

export function TonAssetIdentifierFromJSON(json: any): TonAssetIdentifier {
    return TonAssetIdentifierFromJSONTyped(json, false);
}

export function TonAssetIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): TonAssetIdentifier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'details': TonAssetIdentifierDetailsFromJSON(json['details']),
        'chain': EnrichedTonChainFromJSON(json['chain']),
    };
}

export function TonAssetIdentifierToJSON(value?: TonAssetIdentifier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'details': TonAssetIdentifierDetailsToJSON(value.details),
        'chain': EnrichedTonChainToJSON(value.chain),
    };
}

