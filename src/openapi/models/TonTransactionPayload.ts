/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TonTransactionMessage } from './TonTransactionMessage';
import {
    TonTransactionMessageFromJSON,
    TonTransactionMessageToJSON,
} from './TonTransactionMessage';
import type { TonNetwork } from './TonNetwork';
import {
    TonNetworkFromJSON,
    TonNetworkToJSON,
} from './TonNetwork';

/**
 * 
 * @export
 * @interface TonTransactionPayload
 */
export interface TonTransactionPayload {
    /**
     * 
     * @type {number}
     * @memberof TonTransactionPayload
     */
    validUntil?: number;
    /**
     * 
     * @type {TonNetwork}
     * @memberof TonTransactionPayload
     */
    network?: TonNetwork;
    /**
     * 
     * @type {Array<TonTransactionMessage>}
     * @memberof TonTransactionPayload
     */
    messages: Array<TonTransactionMessage>;
}

export function TonTransactionPayloadFromJSON(json: any): TonTransactionPayload {
    return TonTransactionPayloadFromJSONTyped(json, false);
}

function TonTransactionPayloadFromJSONTyped(json: any, _ignoreDiscriminator: boolean): TonTransactionPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'validUntil': json['valid_until'] == null ? undefined : json['valid_until'],
        'network': json['network'] == null ? undefined : TonNetworkFromJSON(json['network']),
        'messages': ((json['messages'] as Array<any>).map(TonTransactionMessageFromJSON)),
    };
}

export function TonTransactionPayloadToJSON(json: any): TonTransactionPayload {
    return TonTransactionPayloadToJSONTyped(json, false);
}

function TonTransactionPayloadToJSONTyped(value?: TonTransactionPayload | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'valid_until': value['validUntil'],
        'network': TonNetworkToJSON(value['network']),
        'messages': ((value['messages'] as Array<any>).map(TonTransactionMessageToJSON)),
    };
}

