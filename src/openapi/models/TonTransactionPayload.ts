/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TonNetwork } from './TonNetwork';
import {
    TonNetworkFromJSON,
    TonNetworkFromJSONTyped,
    TonNetworkToJSON,
} from './TonNetwork';
import type { TonTransactionMessage } from './TonTransactionMessage';
import {
    TonTransactionMessageFromJSON,
    TonTransactionMessageFromJSONTyped,
    TonTransactionMessageToJSON,
} from './TonTransactionMessage';

/**
 * 
 * @export
 * @interface TonTransactionPayload
 */
export interface TonTransactionPayload {
    /**
     * 
     * @type {number}
     * @memberof TonTransactionPayload
     */
    validUntil?: number;
    /**
     * 
     * @type {TonNetwork}
     * @memberof TonTransactionPayload
     */
    network?: TonNetwork;
    /**
     * 
     * @type {Array<TonTransactionMessage>}
     * @memberof TonTransactionPayload
     */
    messages: Array<TonTransactionMessage>;
}

/**
 * Check if a given object implements the TonTransactionPayload interface.
 */
export function instanceOfTonTransactionPayload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "messages" in value;

    return isInstance;
}

export function TonTransactionPayloadFromJSON(json: any): TonTransactionPayload {
    return TonTransactionPayloadFromJSONTyped(json, false);
}

export function TonTransactionPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): TonTransactionPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'validUntil': !exists(json, 'valid_until') ? undefined : json['valid_until'],
        'network': !exists(json, 'network') ? undefined : TonNetworkFromJSON(json['network']),
        'messages': ((json['messages'] as Array<any>).map(TonTransactionMessageFromJSON)),
    };
}

export function TonTransactionPayloadToJSON(value?: TonTransactionPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'valid_until': value.validUntil,
        'network': TonNetworkToJSON(value.network),
        'messages': ((value.messages as Array<any>).map(TonTransactionMessageToJSON)),
    };
}

