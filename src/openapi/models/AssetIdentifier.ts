/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AptosAssetIdentifier,
    instanceOfAptosAssetIdentifier,
    AptosAssetIdentifierFromJSON,
    AptosAssetIdentifierFromJSONTyped,
    AptosAssetIdentifierToJSON,
} from './AptosAssetIdentifier';
import {
    CosmosAssetIdentifier,
    instanceOfCosmosAssetIdentifier,
    CosmosAssetIdentifierFromJSON,
    CosmosAssetIdentifierFromJSONTyped,
    CosmosAssetIdentifierToJSON,
} from './CosmosAssetIdentifier';
import {
    EvmAssetIdentifier,
    instanceOfEvmAssetIdentifier,
    EvmAssetIdentifierFromJSON,
    EvmAssetIdentifierFromJSONTyped,
    EvmAssetIdentifierToJSON,
} from './EvmAssetIdentifier';
import {
    SolanaAssetIdentifier,
    instanceOfSolanaAssetIdentifier,
    SolanaAssetIdentifierFromJSON,
    SolanaAssetIdentifierFromJSONTyped,
    SolanaAssetIdentifierToJSON,
} from './SolanaAssetIdentifier';
import {
    SuiAssetIdentifier,
    instanceOfSuiAssetIdentifier,
    SuiAssetIdentifierFromJSON,
    SuiAssetIdentifierFromJSONTyped,
    SuiAssetIdentifierToJSON,
} from './SuiAssetIdentifier';
import {
    TonAssetIdentifier,
    instanceOfTonAssetIdentifier,
    TonAssetIdentifierFromJSON,
    TonAssetIdentifierFromJSONTyped,
    TonAssetIdentifierToJSON,
} from './TonAssetIdentifier';
import {
    UtxoAssetIdentifier,
    instanceOfUtxoAssetIdentifier,
    UtxoAssetIdentifierFromJSON,
    UtxoAssetIdentifierFromJSONTyped,
    UtxoAssetIdentifierToJSON,
} from './UtxoAssetIdentifier';

/**
 * @type AssetIdentifier
 * 
 * @export
 */
export type AssetIdentifier = { type: 'aptos' } & AptosAssetIdentifier | { type: 'cosmos' } & CosmosAssetIdentifier | { type: 'evm' } & EvmAssetIdentifier | { type: 'solana' } & SolanaAssetIdentifier | { type: 'sui' } & SuiAssetIdentifier | { type: 'ton' } & TonAssetIdentifier | { type: 'utxo' } & UtxoAssetIdentifier;

export function AssetIdentifierFromJSON(json: any): AssetIdentifier {
    return AssetIdentifierFromJSONTyped(json, false);
}

export function AssetIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetIdentifier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'aptos':
            return {...AptosAssetIdentifierFromJSONTyped(json, true), type: 'aptos'};
        case 'cosmos':
            return {...CosmosAssetIdentifierFromJSONTyped(json, true), type: 'cosmos'};
        case 'evm':
            return {...EvmAssetIdentifierFromJSONTyped(json, true), type: 'evm'};
        case 'solana':
            return {...SolanaAssetIdentifierFromJSONTyped(json, true), type: 'solana'};
        case 'sui':
            return {...SuiAssetIdentifierFromJSONTyped(json, true), type: 'sui'};
        case 'ton':
            return {...TonAssetIdentifierFromJSONTyped(json, true), type: 'ton'};
        case 'utxo':
            return {...UtxoAssetIdentifierFromJSONTyped(json, true), type: 'utxo'};
        default:
            throw new Error(`No variant of AssetIdentifier exists with 'type=${json['type']}'`);
    }
}

export function AssetIdentifierToJSON(value?: AssetIdentifier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'aptos':
            return AptosAssetIdentifierToJSON(value);
        case 'cosmos':
            return CosmosAssetIdentifierToJSON(value);
        case 'evm':
            return EvmAssetIdentifierToJSON(value);
        case 'solana':
            return SolanaAssetIdentifierToJSON(value);
        case 'sui':
            return SuiAssetIdentifierToJSON(value);
        case 'ton':
            return TonAssetIdentifierToJSON(value);
        case 'utxo':
            return UtxoAssetIdentifierToJSON(value);
        default:
            throw new Error(`No variant of AssetIdentifier exists with 'type=${value['type']}'`);
    }

}

