/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StarknetAssetIdentifierRequest } from './StarknetAssetIdentifierRequest';
import {
    StarknetAssetIdentifierRequestFromJSON,
    StarknetAssetIdentifierRequestFromJSONTyped,
    StarknetAssetIdentifierRequestToJSON,
    StarknetAssetIdentifierRequestToJSONTyped,
} from './StarknetAssetIdentifierRequest';
import type { StarknetChainUniqueId } from './StarknetChainUniqueId';
import {
    StarknetChainUniqueIdFromJSON,
    StarknetChainUniqueIdFromJSONTyped,
    StarknetChainUniqueIdToJSON,
    StarknetChainUniqueIdToJSONTyped,
} from './StarknetChainUniqueId';

/**
 * 
 * @export
 * @interface CreateStarknetContactRequest
 */
export interface CreateStarknetContactRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateStarknetContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateStarknetContactRequest
     */
    type: CreateStarknetContactRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateStarknetContactRequest
     */
    address: string;
    /**
     * 
     * @type {Array<StarknetChainUniqueId>}
     * @memberof CreateStarknetContactRequest
     */
    chains: Array<StarknetChainUniqueId>;
    /**
     * 
     * @type {Array<StarknetAssetIdentifierRequest>}
     * @memberof CreateStarknetContactRequest
     */
    assetsIdentifiers?: Array<StarknetAssetIdentifierRequest>;
}


/**
 * @export
 */
export const CreateStarknetContactRequestTypeEnum = {
    starknet: 'starknet'
} as const;
export type CreateStarknetContactRequestTypeEnum = typeof CreateStarknetContactRequestTypeEnum[keyof typeof CreateStarknetContactRequestTypeEnum];


/**
 * Check if a given object implements the CreateStarknetContactRequest interface.
 */
export function instanceOfCreateStarknetContactRequest(value: object): value is CreateStarknetContactRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('chains' in value) || value['chains'] === undefined) return false;
    return true;
}

export function CreateStarknetContactRequestFromJSON(json: any): CreateStarknetContactRequest {
    return CreateStarknetContactRequestFromJSONTyped(json, false);
}

export function CreateStarknetContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateStarknetContactRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'address': json['address'],
        'chains': ((json['chains'] as Array<any>).map(StarknetChainUniqueIdFromJSON)),
        'assetsIdentifiers': json['assets_identifiers'] == null ? undefined : ((json['assets_identifiers'] as Array<any>).map(StarknetAssetIdentifierRequestFromJSON)),
    };
}

export function CreateStarknetContactRequestToJSON(json: any): CreateStarknetContactRequest {
    return CreateStarknetContactRequestToJSONTyped(json, false);
}

export function CreateStarknetContactRequestToJSONTyped(value?: CreateStarknetContactRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'address': value['address'],
        'chains': ((value['chains'] as Array<any>).map(StarknetChainUniqueIdToJSON)),
        'assets_identifiers': value['assetsIdentifiers'] == null ? undefined : ((value['assetsIdentifiers'] as Array<any>).map(StarknetAssetIdentifierRequestToJSON)),
    };
}

