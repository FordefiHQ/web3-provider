/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ExchangeTransactionState } from './ExchangeTransactionState';
import {
    ExchangeTransactionStateFromJSON,
} from './ExchangeTransactionState';
import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
} from './ManagedTransactionData';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
} from './TransactionSpamState';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
} from './TransactionDirection';
import type { ExchangeTransactionStateChange } from './ExchangeTransactionStateChange';
import {
    ExchangeTransactionStateChangeFromJSON,
} from './ExchangeTransactionStateChange';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
} from './Signature';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
} from './SimulationStatusResult';
import type { ExchangeTransactionExchangeTransactionTypeDetails } from './ExchangeTransactionExchangeTransactionTypeDetails';
import {
    ExchangeTransactionExchangeTransactionTypeDetailsFromJSON,
} from './ExchangeTransactionExchangeTransactionTypeDetails';
import type { ExchangeTransactionResult } from './ExchangeTransactionResult';
import {
    ExchangeTransactionResultFromJSON,
} from './ExchangeTransactionResult';

/**
 * 
 * @export
 * @interface ExchangeTransaction
 */
export interface ExchangeTransaction {
    /**
     * 
     * @type {string}
     * @memberof ExchangeTransaction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ExchangeTransaction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExchangeTransaction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof ExchangeTransaction
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof ExchangeTransaction
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof ExchangeTransaction
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof ExchangeTransaction
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof ExchangeTransaction
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {boolean}
     * @memberof ExchangeTransaction
     */
    signedExternally?: boolean;
    /**
     * 
     * @type {ExchangeTransactionState}
     * @memberof ExchangeTransaction
     */
    state: ExchangeTransactionState;
    /**
     * 
     * @type {Array<ExchangeTransactionStateChange>}
     * @memberof ExchangeTransaction
     */
    stateChanges: Array<ExchangeTransactionStateChange>;
    /**
     * 
     * @type {string}
     * @memberof ExchangeTransaction
     */
    type: ExchangeTransactionTypeEnum;
    /**
     * 
     * @type {ExchangeTransactionExchangeTransactionTypeDetails}
     * @memberof ExchangeTransaction
     */
    exchangeTransactionTypeDetails: ExchangeTransactionExchangeTransactionTypeDetails;
    /**
     * 
     * @type {string}
     * @memberof ExchangeTransaction
     */
    exchangeNonce?: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangeTransaction
     */
    exchangeTransactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof ExchangeTransaction
     * @deprecated
     */
    hash?: string;
    /**
     * 
     * @type {ExchangeTransactionResult}
     * @memberof ExchangeTransaction
     */
    expectedResult?: ExchangeTransactionResult;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof ExchangeTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {ExchangeTransactionResult}
     * @memberof ExchangeTransaction
     */
    minedResult?: ExchangeTransactionResult;
    /**
     * 
     * @type {string}
     * @memberof ExchangeTransaction
     * @deprecated
     */
    explorerUrl?: string;
}


/**
 * 
 */
const ExchangeTransactionTypeEnum = {
    exchangeTransaction: 'exchange_transaction'
} as const;
type ExchangeTransactionTypeEnum = typeof ExchangeTransactionTypeEnum[keyof typeof ExchangeTransactionTypeEnum];

export function ExchangeTransactionFromJSONTyped(json: any, _ignoreDiscriminator: boolean): ExchangeTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': json['managed_transaction_data'] == null ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'spamState': json['spam_state'] == null ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'signedExternally': json['signed_externally'] == null ? undefined : json['signed_externally'],
        'state': ExchangeTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(ExchangeTransactionStateChangeFromJSON)),
        'type': json['type'],
        'exchangeTransactionTypeDetails': ExchangeTransactionExchangeTransactionTypeDetailsFromJSON(json['exchange_transaction_type_details']),
        'exchangeNonce': json['exchange_nonce'] == null ? undefined : json['exchange_nonce'],
        'exchangeTransactionId': json['exchange_transaction_id'] == null ? undefined : json['exchange_transaction_id'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'expectedResult': json['expected_result'] == null ? undefined : ExchangeTransactionResultFromJSON(json['expected_result']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'minedResult': json['mined_result'] == null ? undefined : ExchangeTransactionResultFromJSON(json['mined_result']),
        'explorerUrl': json['explorer_url'] == null ? undefined : json['explorer_url'],
    };
}
