/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EncryptedBackupShareByDevice } from './EncryptedBackupShareByDevice';
import {
    EncryptedBackupShareByDeviceFromJSON,
    EncryptedBackupShareByDeviceFromJSONTyped,
    EncryptedBackupShareByDeviceToJSON,
    EncryptedBackupShareByDeviceToJSONTyped,
} from './EncryptedBackupShareByDevice';

/**
 * 
 * @export
 * @interface MigrateBackupRequest
 */
export interface MigrateBackupRequest {
    /**
     * 
     * @type {Array<EncryptedBackupShareByDevice>}
     * @memberof MigrateBackupRequest
     */
    encryptedSharesForBackup: Array<EncryptedBackupShareByDevice>;
    /**
     * 
     * @type {string}
     * @memberof MigrateBackupRequest
     */
    signature: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof MigrateBackupRequest
     */
    keyIdsIncluded: Array<string>;
}

/**
 * Check if a given object implements the MigrateBackupRequest interface.
 */
export function instanceOfMigrateBackupRequest(value: object): value is MigrateBackupRequest {
    if (!('encryptedSharesForBackup' in value) || value['encryptedSharesForBackup'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('keyIdsIncluded' in value) || value['keyIdsIncluded'] === undefined) return false;
    return true;
}

export function MigrateBackupRequestFromJSON(json: any): MigrateBackupRequest {
    return MigrateBackupRequestFromJSONTyped(json, false);
}

export function MigrateBackupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateBackupRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'encryptedSharesForBackup': ((json['encrypted_shares_for_backup'] as Array<any>).map(EncryptedBackupShareByDeviceFromJSON)),
        'signature': json['signature'],
        'keyIdsIncluded': json['key_ids_included'],
    };
}

export function MigrateBackupRequestToJSON(json: any): MigrateBackupRequest {
    return MigrateBackupRequestToJSONTyped(json, false);
}

export function MigrateBackupRequestToJSONTyped(value?: MigrateBackupRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'encrypted_shares_for_backup': ((value['encryptedSharesForBackup'] as Array<any>).map(EncryptedBackupShareByDeviceToJSON)),
        'signature': value['signature'],
        'key_ids_included': value['keyIdsIncluded'],
    };
}

