/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TransactionDetailsSolanaRawTransactionRequest } from './TransactionDetailsSolanaRawTransactionRequest';
import {
    instanceOfTransactionDetailsSolanaRawTransactionRequest,
    TransactionDetailsSolanaRawTransactionRequestFromJSON,
    TransactionDetailsSolanaRawTransactionRequestFromJSONTyped,
    TransactionDetailsSolanaRawTransactionRequestToJSON,
} from './TransactionDetailsSolanaRawTransactionRequest';
import type { TransactionDetailsSolanaSpotSwapTransactionRequest } from './TransactionDetailsSolanaSpotSwapTransactionRequest';
import {
    instanceOfTransactionDetailsSolanaSpotSwapTransactionRequest,
    TransactionDetailsSolanaSpotSwapTransactionRequestFromJSON,
    TransactionDetailsSolanaSpotSwapTransactionRequestFromJSONTyped,
    TransactionDetailsSolanaSpotSwapTransactionRequestToJSON,
} from './TransactionDetailsSolanaSpotSwapTransactionRequest';
import type { TransactionPredictSolanaSerializedTransactionMessageRequest } from './TransactionPredictSolanaSerializedTransactionMessageRequest';
import {
    instanceOfTransactionPredictSolanaSerializedTransactionMessageRequest,
    TransactionPredictSolanaSerializedTransactionMessageRequestFromJSON,
    TransactionPredictSolanaSerializedTransactionMessageRequestFromJSONTyped,
    TransactionPredictSolanaSerializedTransactionMessageRequestToJSON,
} from './TransactionPredictSolanaSerializedTransactionMessageRequest';
import type { TransactionPredictSolanaTransferRequest } from './TransactionPredictSolanaTransferRequest';
import {
    instanceOfTransactionPredictSolanaTransferRequest,
    TransactionPredictSolanaTransferRequestFromJSON,
    TransactionPredictSolanaTransferRequestFromJSONTyped,
    TransactionPredictSolanaTransferRequestToJSON,
} from './TransactionPredictSolanaTransferRequest';

/**
 * @type TransactionPredictSolanaTransactionRequestDetails
 * 
 * @export
 */
export type TransactionPredictSolanaTransactionRequestDetails = { type: 'solana_raw_transaction' } & TransactionDetailsSolanaRawTransactionRequest | { type: 'solana_serialized_transaction_message' } & TransactionPredictSolanaSerializedTransactionMessageRequest | { type: 'solana_spot_swap' } & TransactionDetailsSolanaSpotSwapTransactionRequest | { type: 'solana_transfer' } & TransactionPredictSolanaTransferRequest;

export function TransactionPredictSolanaTransactionRequestDetailsFromJSON(json: any): TransactionPredictSolanaTransactionRequestDetails {
    return TransactionPredictSolanaTransactionRequestDetailsFromJSONTyped(json, false);
}

export function TransactionPredictSolanaTransactionRequestDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionPredictSolanaTransactionRequestDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'solana_raw_transaction':
            return Object.assign({}, TransactionDetailsSolanaRawTransactionRequestFromJSONTyped(json, true), { type: 'solana_raw_transaction' } as const);
        case 'solana_serialized_transaction_message':
            return Object.assign({}, TransactionPredictSolanaSerializedTransactionMessageRequestFromJSONTyped(json, true), { type: 'solana_serialized_transaction_message' } as const);
        case 'solana_spot_swap':
            return Object.assign({}, TransactionDetailsSolanaSpotSwapTransactionRequestFromJSONTyped(json, true), { type: 'solana_spot_swap' } as const);
        case 'solana_transfer':
            return Object.assign({}, TransactionPredictSolanaTransferRequestFromJSONTyped(json, true), { type: 'solana_transfer' } as const);
        default:
            throw new Error(`No variant of TransactionPredictSolanaTransactionRequestDetails exists with 'type=${json['type']}'`);
    }
}

export function TransactionPredictSolanaTransactionRequestDetailsToJSON(json: any): any {
    return TransactionPredictSolanaTransactionRequestDetailsToJSONTyped(json, false);
}

export function TransactionPredictSolanaTransactionRequestDetailsToJSONTyped(value?: TransactionPredictSolanaTransactionRequestDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'solana_raw_transaction':
            return Object.assign({}, TransactionDetailsSolanaRawTransactionRequestToJSON(value), { type: 'solana_raw_transaction' } as const);
        case 'solana_serialized_transaction_message':
            return Object.assign({}, TransactionPredictSolanaSerializedTransactionMessageRequestToJSON(value), { type: 'solana_serialized_transaction_message' } as const);
        case 'solana_spot_swap':
            return Object.assign({}, TransactionDetailsSolanaSpotSwapTransactionRequestToJSON(value), { type: 'solana_spot_swap' } as const);
        case 'solana_transfer':
            return Object.assign({}, TransactionPredictSolanaTransferRequestToJSON(value), { type: 'solana_transfer' } as const);
        default:
            throw new Error(`No variant of TransactionPredictSolanaTransactionRequestDetails exists with 'type=${value['type']}'`);
    }

}

