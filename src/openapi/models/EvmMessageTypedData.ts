/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    Permit2TypedMessageEvmMessage,
    instanceOfPermit2TypedMessageEvmMessage,
    Permit2TypedMessageEvmMessageFromJSON,
    Permit2TypedMessageEvmMessageFromJSONTyped,
    Permit2TypedMessageEvmMessageToJSON,
} from './Permit2TypedMessageEvmMessage';
import {
    PermitTypedMessageEvmMessage,
    instanceOfPermitTypedMessageEvmMessage,
    PermitTypedMessageEvmMessageFromJSON,
    PermitTypedMessageEvmMessageFromJSONTyped,
    PermitTypedMessageEvmMessageToJSON,
} from './PermitTypedMessageEvmMessage';
import {
    UnknownTypedMessageEvmMessage,
    instanceOfUnknownTypedMessageEvmMessage,
    UnknownTypedMessageEvmMessageFromJSON,
    UnknownTypedMessageEvmMessageFromJSONTyped,
    UnknownTypedMessageEvmMessageToJSON,
} from './UnknownTypedMessageEvmMessage';

/**
 * @type EvmMessageTypedData
 * 
 * @export
 */
export type EvmMessageTypedData = { type: 'permit' } & PermitTypedMessageEvmMessage | { type: 'permit2' } & Permit2TypedMessageEvmMessage | { type: 'unknown' } & UnknownTypedMessageEvmMessage;

export function EvmMessageTypedDataFromJSON(json: any): EvmMessageTypedData {
    return EvmMessageTypedDataFromJSONTyped(json, false);
}

export function EvmMessageTypedDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmMessageTypedData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'permit':
            return {...PermitTypedMessageEvmMessageFromJSONTyped(json, true), type: 'permit'};
        case 'permit2':
            return {...Permit2TypedMessageEvmMessageFromJSONTyped(json, true), type: 'permit2'};
        case 'unknown':
            return {...UnknownTypedMessageEvmMessageFromJSONTyped(json, true), type: 'unknown'};
        default:
            throw new Error(`No variant of EvmMessageTypedData exists with 'type=${json['type']}'`);
    }
}

export function EvmMessageTypedDataToJSON(value?: EvmMessageTypedData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'permit':
            return PermitTypedMessageEvmMessageToJSON(value);
        case 'permit2':
            return Permit2TypedMessageEvmMessageToJSON(value);
        case 'unknown':
            return UnknownTypedMessageEvmMessageToJSON(value);
        default:
            throw new Error(`No variant of EvmMessageTypedData exists with 'type=${value['type']}'`);
    }

}

