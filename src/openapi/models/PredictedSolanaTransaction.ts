/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AmlPolicyMatchOutgoing } from './AmlPolicyMatchOutgoing';
import {
    AmlPolicyMatchOutgoingFromJSON,
    AmlPolicyMatchOutgoingFromJSONTyped,
    AmlPolicyMatchOutgoingToJSON,
    AmlPolicyMatchOutgoingToJSONTyped,
} from './AmlPolicyMatchOutgoing';
import type { TransactionRisk } from './TransactionRisk';
import {
    TransactionRiskFromJSON,
    TransactionRiskFromJSONTyped,
    TransactionRiskToJSON,
    TransactionRiskToJSONTyped,
} from './TransactionRisk';
import type { SolanaCompiledInstruction } from './SolanaCompiledInstruction';
import {
    SolanaCompiledInstructionFromJSON,
    SolanaCompiledInstructionFromJSONTyped,
    SolanaCompiledInstructionToJSON,
    SolanaCompiledInstructionToJSONTyped,
} from './SolanaCompiledInstruction';
import type { EnrichedSolanaAddress } from './EnrichedSolanaAddress';
import {
    EnrichedSolanaAddressFromJSON,
    EnrichedSolanaAddressFromJSONTyped,
    EnrichedSolanaAddressToJSON,
    EnrichedSolanaAddressToJSONTyped,
} from './EnrichedSolanaAddress';
import type { SolanaTransactionResult } from './SolanaTransactionResult';
import {
    SolanaTransactionResultFromJSON,
    SolanaTransactionResultFromJSONTyped,
    SolanaTransactionResultToJSON,
    SolanaTransactionResultToJSONTyped,
} from './SolanaTransactionResult';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { EnrichedSolanaChain } from './EnrichedSolanaChain';
import {
    EnrichedSolanaChainFromJSON,
    EnrichedSolanaChainFromJSONTyped,
    EnrichedSolanaChainToJSON,
    EnrichedSolanaChainToJSONTyped,
} from './EnrichedSolanaChain';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
    SimulationStatusResultToJSONTyped,
} from './SimulationStatusResult';
import type { PredictedSolanaTransactionSolanaTransactionTypeDetails } from './PredictedSolanaTransactionSolanaTransactionTypeDetails';
import {
    PredictedSolanaTransactionSolanaTransactionTypeDetailsFromJSON,
    PredictedSolanaTransactionSolanaTransactionTypeDetailsFromJSONTyped,
    PredictedSolanaTransactionSolanaTransactionTypeDetailsToJSON,
    PredictedSolanaTransactionSolanaTransactionTypeDetailsToJSONTyped,
} from './PredictedSolanaTransactionSolanaTransactionTypeDetails';
import type { PolicyMatch } from './PolicyMatch';
import {
    PolicyMatchFromJSON,
    PolicyMatchFromJSONTyped,
    PolicyMatchToJSON,
    PolicyMatchToJSONTyped,
} from './PolicyMatch';
import type { SolanaSuggestedFees } from './SolanaSuggestedFees';
import {
    SolanaSuggestedFeesFromJSON,
    SolanaSuggestedFeesFromJSONTyped,
    SolanaSuggestedFeesToJSON,
    SolanaSuggestedFeesToJSONTyped,
} from './SolanaSuggestedFees';
import type { AmlResults } from './AmlResults';
import {
    AmlResultsFromJSON,
    AmlResultsFromJSONTyped,
    AmlResultsToJSON,
    AmlResultsToJSONTyped,
} from './AmlResults';

/**
 * 
 * @export
 * @interface PredictedSolanaTransaction
 */
export interface PredictedSolanaTransaction {
    /**
     * 
     * @type {AmlPolicyMatchOutgoing}
     * @memberof PredictedSolanaTransaction
     */
    amlPolicyMatch?: AmlPolicyMatchOutgoing;
    /**
     * 
     * @type {PolicyMatch}
     * @memberof PredictedSolanaTransaction
     */
    policyMatch: PolicyMatch;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof PredictedSolanaTransaction
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {Array<TransactionRisk>}
     * @memberof PredictedSolanaTransaction
     */
    risks: Array<TransactionRisk>;
    /**
     * 
     * @type {string}
     * @memberof PredictedSolanaTransaction
     */
    note?: string;
    /**
     * 
     * @type {AmlResults}
     * @memberof PredictedSolanaTransaction
     */
    amlResults?: AmlResults;
    /**
     * 
     * @type {string}
     * @memberof PredictedSolanaTransaction
     */
    type: PredictedSolanaTransactionTypeEnum;
    /**
     * 
     * @type {SolanaTransactionResult}
     * @memberof PredictedSolanaTransaction
     */
    expectedResult: SolanaTransactionResult;
    /**
     * 
     * @type {EnrichedSolanaChain}
     * @memberof PredictedSolanaTransaction
     */
    chain: EnrichedSolanaChain;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof PredictedSolanaTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {PredictedSolanaTransactionSolanaTransactionTypeDetails}
     * @memberof PredictedSolanaTransaction
     */
    solanaTransactionTypeDetails: PredictedSolanaTransactionSolanaTransactionTypeDetails;
    /**
     * 
     * @type {EnrichedSolanaAddress}
     * @memberof PredictedSolanaTransaction
     */
    sender: EnrichedSolanaAddress;
    /**
     * 
     * @type {SolanaSuggestedFees}
     * @memberof PredictedSolanaTransaction
     */
    suggestedFees: SolanaSuggestedFees;
    /**
     * 
     * @type {Array<SolanaCompiledInstruction>}
     * @memberof PredictedSolanaTransaction
     */
    instructions: Array<SolanaCompiledInstruction>;
    /**
     * 
     * @type {string}
     * @memberof PredictedSolanaTransaction
     */
    rawTransaction?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PredictedSolanaTransaction
     */
    wasFeeSetInRequest: boolean;
}


/**
 * @export
 */
export const PredictedSolanaTransactionTypeEnum = {
    solanaTransaction: 'solana_transaction'
} as const;
export type PredictedSolanaTransactionTypeEnum = typeof PredictedSolanaTransactionTypeEnum[keyof typeof PredictedSolanaTransactionTypeEnum];


/**
 * Check if a given object implements the PredictedSolanaTransaction interface.
 */
export function instanceOfPredictedSolanaTransaction(value: object): value is PredictedSolanaTransaction {
    if (!('policyMatch' in value) || value['policyMatch'] === undefined) return false;
    if (!('risks' in value) || value['risks'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('expectedResult' in value) || value['expectedResult'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('simulationStatusResult' in value) || value['simulationStatusResult'] === undefined) return false;
    if (!('solanaTransactionTypeDetails' in value) || value['solanaTransactionTypeDetails'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('suggestedFees' in value) || value['suggestedFees'] === undefined) return false;
    if (!('instructions' in value) || value['instructions'] === undefined) return false;
    if (!('wasFeeSetInRequest' in value) || value['wasFeeSetInRequest'] === undefined) return false;
    return true;
}

export function PredictedSolanaTransactionFromJSON(json: any): PredictedSolanaTransaction {
    return PredictedSolanaTransactionFromJSONTyped(json, false);
}

export function PredictedSolanaTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedSolanaTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'amlPolicyMatch': json['aml_policy_match'] == null ? undefined : AmlPolicyMatchOutgoingFromJSON(json['aml_policy_match']),
        'policyMatch': PolicyMatchFromJSON(json['policy_match']),
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'risks': ((json['risks'] as Array<any>).map(TransactionRiskFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'amlResults': json['aml_results'] == null ? undefined : AmlResultsFromJSON(json['aml_results']),
        'type': json['type'],
        'expectedResult': SolanaTransactionResultFromJSON(json['expected_result']),
        'chain': EnrichedSolanaChainFromJSON(json['chain']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'solanaTransactionTypeDetails': PredictedSolanaTransactionSolanaTransactionTypeDetailsFromJSON(json['solana_transaction_type_details']),
        'sender': EnrichedSolanaAddressFromJSON(json['sender']),
        'suggestedFees': SolanaSuggestedFeesFromJSON(json['suggested_fees']),
        'instructions': ((json['instructions'] as Array<any>).map(SolanaCompiledInstructionFromJSON)),
        'rawTransaction': json['raw_transaction'] == null ? undefined : json['raw_transaction'],
        'wasFeeSetInRequest': json['was_fee_set_in_request'],
    };
}

export function PredictedSolanaTransactionToJSON(json: any): PredictedSolanaTransaction {
    return PredictedSolanaTransactionToJSONTyped(json, false);
}

export function PredictedSolanaTransactionToJSONTyped(value?: PredictedSolanaTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aml_policy_match': AmlPolicyMatchOutgoingToJSON(value['amlPolicyMatch']),
        'policy_match': PolicyMatchToJSON(value['policyMatch']),
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'risks': ((value['risks'] as Array<any>).map(TransactionRiskToJSON)),
        'note': value['note'],
        'aml_results': AmlResultsToJSON(value['amlResults']),
        'type': value['type'],
        'expected_result': SolanaTransactionResultToJSON(value['expectedResult']),
        'chain': EnrichedSolanaChainToJSON(value['chain']),
        'simulation_status_result': SimulationStatusResultToJSON(value['simulationStatusResult']),
        'solana_transaction_type_details': PredictedSolanaTransactionSolanaTransactionTypeDetailsToJSON(value['solanaTransactionTypeDetails']),
        'sender': EnrichedSolanaAddressToJSON(value['sender']),
        'suggested_fees': SolanaSuggestedFeesToJSON(value['suggestedFees']),
        'instructions': ((value['instructions'] as Array<any>).map(SolanaCompiledInstructionToJSON)),
        'raw_transaction': value['rawTransaction'],
        'was_fee_set_in_request': value['wasFeeSetInRequest'],
    };
}

