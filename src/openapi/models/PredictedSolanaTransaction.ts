/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
} from './ApprovalRequest';
import type { EnrichedSolanaAddress } from './EnrichedSolanaAddress';
import {
    EnrichedSolanaAddressFromJSON,
    EnrichedSolanaAddressFromJSONTyped,
    EnrichedSolanaAddressToJSON,
} from './EnrichedSolanaAddress';
import type { EnrichedSolanaChain } from './EnrichedSolanaChain';
import {
    EnrichedSolanaChainFromJSON,
    EnrichedSolanaChainFromJSONTyped,
    EnrichedSolanaChainToJSON,
} from './EnrichedSolanaChain';
import type { PolicyMatch } from './PolicyMatch';
import {
    PolicyMatchFromJSON,
    PolicyMatchFromJSONTyped,
    PolicyMatchToJSON,
} from './PolicyMatch';
import type { PredictedSolanaTransactionSolanaTransactionTypeDetails } from './PredictedSolanaTransactionSolanaTransactionTypeDetails';
import {
    PredictedSolanaTransactionSolanaTransactionTypeDetailsFromJSON,
    PredictedSolanaTransactionSolanaTransactionTypeDetailsFromJSONTyped,
    PredictedSolanaTransactionSolanaTransactionTypeDetailsToJSON,
} from './PredictedSolanaTransactionSolanaTransactionTypeDetails';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
} from './SimulationStatusResult';
import type { SolanaCompiledInstruction } from './SolanaCompiledInstruction';
import {
    SolanaCompiledInstructionFromJSON,
    SolanaCompiledInstructionFromJSONTyped,
    SolanaCompiledInstructionToJSON,
} from './SolanaCompiledInstruction';
import type { SolanaSuggestedFees } from './SolanaSuggestedFees';
import {
    SolanaSuggestedFeesFromJSON,
    SolanaSuggestedFeesFromJSONTyped,
    SolanaSuggestedFeesToJSON,
} from './SolanaSuggestedFees';
import type { SolanaTransactionResult } from './SolanaTransactionResult';
import {
    SolanaTransactionResultFromJSON,
    SolanaTransactionResultFromJSONTyped,
    SolanaTransactionResultToJSON,
} from './SolanaTransactionResult';
import type { TransactionRisk } from './TransactionRisk';
import {
    TransactionRiskFromJSON,
    TransactionRiskFromJSONTyped,
    TransactionRiskToJSON,
} from './TransactionRisk';

/**
 * 
 * @export
 * @interface PredictedSolanaTransaction
 */
export interface PredictedSolanaTransaction {
    /**
     * 
     * @type {PolicyMatch}
     * @memberof PredictedSolanaTransaction
     */
    policyMatch: PolicyMatch;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof PredictedSolanaTransaction
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {Array<TransactionRisk>}
     * @memberof PredictedSolanaTransaction
     */
    risks: Array<TransactionRisk>;
    /**
     * 
     * @type {string}
     * @memberof PredictedSolanaTransaction
     */
    type: PredictedSolanaTransactionTypeEnum;
    /**
     * 
     * @type {SolanaTransactionResult}
     * @memberof PredictedSolanaTransaction
     */
    expectedResult: SolanaTransactionResult;
    /**
     * 
     * @type {EnrichedSolanaChain}
     * @memberof PredictedSolanaTransaction
     */
    chain: EnrichedSolanaChain;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof PredictedSolanaTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {PredictedSolanaTransactionSolanaTransactionTypeDetails}
     * @memberof PredictedSolanaTransaction
     */
    solanaTransactionTypeDetails: PredictedSolanaTransactionSolanaTransactionTypeDetails;
    /**
     * 
     * @type {EnrichedSolanaAddress}
     * @memberof PredictedSolanaTransaction
     */
    sender: EnrichedSolanaAddress;
    /**
     * 
     * @type {SolanaSuggestedFees}
     * @memberof PredictedSolanaTransaction
     */
    suggestedFees: SolanaSuggestedFees;
    /**
     * 
     * @type {Array<SolanaCompiledInstruction>}
     * @memberof PredictedSolanaTransaction
     */
    instructions: Array<SolanaCompiledInstruction>;
}


/**
 * @export
 */
export const PredictedSolanaTransactionTypeEnum = {
    solanaTransaction: 'solana_transaction'
} as const;
export type PredictedSolanaTransactionTypeEnum = typeof PredictedSolanaTransactionTypeEnum[keyof typeof PredictedSolanaTransactionTypeEnum];


/**
 * Check if a given object implements the PredictedSolanaTransaction interface.
 */
export function instanceOfPredictedSolanaTransaction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "policyMatch" in value;
    isInstance = isInstance && "risks" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "expectedResult" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "simulationStatusResult" in value;
    isInstance = isInstance && "solanaTransactionTypeDetails" in value;
    isInstance = isInstance && "sender" in value;
    isInstance = isInstance && "suggestedFees" in value;
    isInstance = isInstance && "instructions" in value;

    return isInstance;
}

export function PredictedSolanaTransactionFromJSON(json: any): PredictedSolanaTransaction {
    return PredictedSolanaTransactionFromJSONTyped(json, false);
}

export function PredictedSolanaTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedSolanaTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'policyMatch': PolicyMatchFromJSON(json['policy_match']),
        'approvalRequest': !exists(json, 'approval_request') ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'risks': ((json['risks'] as Array<any>).map(TransactionRiskFromJSON)),
        'type': json['type'],
        'expectedResult': SolanaTransactionResultFromJSON(json['expected_result']),
        'chain': EnrichedSolanaChainFromJSON(json['chain']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'solanaTransactionTypeDetails': PredictedSolanaTransactionSolanaTransactionTypeDetailsFromJSON(json['solana_transaction_type_details']),
        'sender': EnrichedSolanaAddressFromJSON(json['sender']),
        'suggestedFees': SolanaSuggestedFeesFromJSON(json['suggested_fees']),
        'instructions': ((json['instructions'] as Array<any>).map(SolanaCompiledInstructionFromJSON)),
    };
}

export function PredictedSolanaTransactionToJSON(value?: PredictedSolanaTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'policy_match': PolicyMatchToJSON(value.policyMatch),
        'approval_request': ApprovalRequestToJSON(value.approvalRequest),
        'risks': ((value.risks as Array<any>).map(TransactionRiskToJSON)),
        'type': value.type,
        'expected_result': SolanaTransactionResultToJSON(value.expectedResult),
        'chain': EnrichedSolanaChainToJSON(value.chain),
        'simulation_status_result': SimulationStatusResultToJSON(value.simulationStatusResult),
        'solana_transaction_type_details': PredictedSolanaTransactionSolanaTransactionTypeDetailsToJSON(value.solanaTransactionTypeDetails),
        'sender': EnrichedSolanaAddressToJSON(value.sender),
        'suggested_fees': SolanaSuggestedFeesToJSON(value.suggestedFees),
        'instructions': ((value.instructions as Array<any>).map(SolanaCompiledInstructionToJSON)),
    };
}

