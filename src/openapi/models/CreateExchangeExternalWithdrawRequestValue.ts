/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CreateExchangeExternalWithdrawRequestExplicitAmount } from './CreateExchangeExternalWithdrawRequestExplicitAmount';
import {
    instanceOfCreateExchangeExternalWithdrawRequestExplicitAmount,
    CreateExchangeExternalWithdrawRequestExplicitAmountFromJSON,
    CreateExchangeExternalWithdrawRequestExplicitAmountFromJSONTyped,
    CreateExchangeExternalWithdrawRequestExplicitAmountToJSON,
} from './CreateExchangeExternalWithdrawRequestExplicitAmount';
import type { CreateExchangeTransferRequestMaxAmount } from './CreateExchangeTransferRequestMaxAmount';
import {
    instanceOfCreateExchangeTransferRequestMaxAmount,
    CreateExchangeTransferRequestMaxAmountFromJSON,
    CreateExchangeTransferRequestMaxAmountFromJSONTyped,
    CreateExchangeTransferRequestMaxAmountToJSON,
} from './CreateExchangeTransferRequestMaxAmount';

/**
 * @type CreateExchangeExternalWithdrawRequestValue
 * 
 * @export
 */
export type CreateExchangeExternalWithdrawRequestValue = { type: 'max' } & CreateExchangeTransferRequestMaxAmount | { type: 'value' } & CreateExchangeExternalWithdrawRequestExplicitAmount;

export function CreateExchangeExternalWithdrawRequestValueFromJSON(json: any): CreateExchangeExternalWithdrawRequestValue {
    return CreateExchangeExternalWithdrawRequestValueFromJSONTyped(json, false);
}

export function CreateExchangeExternalWithdrawRequestValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateExchangeExternalWithdrawRequestValue {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'max':
            return Object.assign({}, CreateExchangeTransferRequestMaxAmountFromJSONTyped(json, true), { type: 'max' } as const);
        case 'value':
            return Object.assign({}, CreateExchangeExternalWithdrawRequestExplicitAmountFromJSONTyped(json, true), { type: 'value' } as const);
        default:
            throw new Error(`No variant of CreateExchangeExternalWithdrawRequestValue exists with 'type=${json['type']}'`);
    }
}

export function CreateExchangeExternalWithdrawRequestValueToJSON(json: any): any {
    return CreateExchangeExternalWithdrawRequestValueToJSONTyped(json, false);
}

export function CreateExchangeExternalWithdrawRequestValueToJSONTyped(value?: CreateExchangeExternalWithdrawRequestValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'max':
            return Object.assign({}, CreateExchangeTransferRequestMaxAmountToJSON(value), { type: 'max' } as const);
        case 'value':
            return Object.assign({}, CreateExchangeExternalWithdrawRequestExplicitAmountToJSON(value), { type: 'value' } as const);
        default:
            throw new Error(`No variant of CreateExchangeExternalWithdrawRequestValue exists with 'type=${value['type']}'`);
    }

}

