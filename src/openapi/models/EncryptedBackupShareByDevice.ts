/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EncryptionData } from './EncryptionData';
import {
    EncryptionDataFromJSON,
    EncryptionDataFromJSONTyped,
    EncryptionDataToJSON,
    EncryptionDataToJSONTyped,
} from './EncryptionData';

/**
 * 
 * @export
 * @interface EncryptedBackupShareByDevice
 */
export interface EncryptedBackupShareByDevice {
    /**
     * 
     * @type {string}
     * @memberof EncryptedBackupShareByDevice
     */
    deviceId: string;
    /**
     * 
     * @type {EncryptionData}
     * @memberof EncryptedBackupShareByDevice
     */
    encryptedShare: EncryptionData;
    /**
     * 
     * @type {string}
     * @memberof EncryptedBackupShareByDevice
     */
    hmacForPublicRsaKeys: string;
}

/**
 * Check if a given object implements the EncryptedBackupShareByDevice interface.
 */
export function instanceOfEncryptedBackupShareByDevice(value: object): value is EncryptedBackupShareByDevice {
    if (!('deviceId' in value) || value['deviceId'] === undefined) return false;
    if (!('encryptedShare' in value) || value['encryptedShare'] === undefined) return false;
    if (!('hmacForPublicRsaKeys' in value) || value['hmacForPublicRsaKeys'] === undefined) return false;
    return true;
}

export function EncryptedBackupShareByDeviceFromJSON(json: any): EncryptedBackupShareByDevice {
    return EncryptedBackupShareByDeviceFromJSONTyped(json, false);
}

export function EncryptedBackupShareByDeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncryptedBackupShareByDevice {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceId': json['device_id'],
        'encryptedShare': EncryptionDataFromJSON(json['encrypted_share']),
        'hmacForPublicRsaKeys': json['hmac_for_public_rsa_keys'],
    };
}

export function EncryptedBackupShareByDeviceToJSON(json: any): EncryptedBackupShareByDevice {
    return EncryptedBackupShareByDeviceToJSONTyped(json, false);
}

export function EncryptedBackupShareByDeviceToJSONTyped(value?: EncryptedBackupShareByDevice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'device_id': value['deviceId'],
        'encrypted_share': EncryptionDataToJSON(value['encryptedShare']),
        'hmac_for_public_rsa_keys': value['hmacForPublicRsaKeys'],
    };
}

