/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserGroupChangeRequest } from './UserGroupChangeRequest';
import {
    UserGroupChangeRequestFromJSON,
    UserGroupChangeRequestFromJSONTyped,
    UserGroupChangeRequestToJSON,
    UserGroupChangeRequestToJSONTyped,
} from './UserGroupChangeRequest';
import type { UserGroupState } from './UserGroupState';
import {
    UserGroupStateFromJSON,
    UserGroupStateFromJSONTyped,
    UserGroupStateToJSON,
    UserGroupStateToJSONTyped,
} from './UserGroupState';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';

/**
 * 
 * @export
 * @interface GetUserGroupResponse
 */
export interface GetUserGroupResponse {
    /**
     * 
     * @type {string}
     * @memberof GetUserGroupResponse
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof GetUserGroupResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetUserGroupResponse
     */
    modifiedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof GetUserGroupResponse
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof GetUserGroupResponse
     */
    usersCount: number;
    /**
     * 
     * @type {number}
     * @memberof GetUserGroupResponse
     */
    adminsCount: number;
    /**
     * 
     * @type {UserGroupState}
     * @memberof GetUserGroupResponse
     */
    state: UserGroupState;
    /**
     * 
     * @type {UserRef}
     * @memberof GetUserGroupResponse
     */
    modifiedBy: UserRef;
    /**
     * 
     * @type {UserGroupChangeRequest}
     * @memberof GetUserGroupResponse
     */
    proposedChange?: UserGroupChangeRequest;
}



/**
 * Check if a given object implements the GetUserGroupResponse interface.
 */
export function instanceOfGetUserGroupResponse(value: object): value is GetUserGroupResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('usersCount' in value) || value['usersCount'] === undefined) return false;
    if (!('adminsCount' in value) || value['adminsCount'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('modifiedBy' in value) || value['modifiedBy'] === undefined) return false;
    return true;
}

export function GetUserGroupResponseFromJSON(json: any): GetUserGroupResponse {
    return GetUserGroupResponseFromJSONTyped(json, false);
}

export function GetUserGroupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUserGroupResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'name': json['name'],
        'usersCount': json['users_count'],
        'adminsCount': json['admins_count'],
        'state': UserGroupStateFromJSON(json['state']),
        'modifiedBy': UserRefFromJSON(json['modified_by']),
        'proposedChange': json['proposed_change'] == null ? undefined : UserGroupChangeRequestFromJSON(json['proposed_change']),
    };
}

export function GetUserGroupResponseToJSON(json: any): GetUserGroupResponse {
    return GetUserGroupResponseToJSONTyped(json, false);
}

export function GetUserGroupResponseToJSONTyped(value?: GetUserGroupResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'name': value['name'],
        'users_count': value['usersCount'],
        'admins_count': value['adminsCount'],
        'state': UserGroupStateToJSON(value['state']),
        'modified_by': UserRefToJSON(value['modifiedBy']),
        'proposed_change': UserGroupChangeRequestToJSON(value['proposedChange']),
    };
}

