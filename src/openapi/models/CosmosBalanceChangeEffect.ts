/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
    EnrichedCosmosBechAddressFromJSONTyped,
    EnrichedCosmosBechAddressToJSON,
    EnrichedCosmosBechAddressToJSONTyped,
} from './EnrichedCosmosBechAddress';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
    PricedAssetToJSONTyped,
} from './PricedAsset';
import type { CosmosBalanceChangeEffectType } from './CosmosBalanceChangeEffectType';
import {
    CosmosBalanceChangeEffectTypeFromJSON,
    CosmosBalanceChangeEffectTypeFromJSONTyped,
    CosmosBalanceChangeEffectTypeToJSON,
    CosmosBalanceChangeEffectTypeToJSONTyped,
} from './CosmosBalanceChangeEffectType';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';
import type { CosmosBalanceChangeEffectCoinInfo } from './CosmosBalanceChangeEffectCoinInfo';
import {
    CosmosBalanceChangeEffectCoinInfoFromJSON,
    CosmosBalanceChangeEffectCoinInfoFromJSONTyped,
    CosmosBalanceChangeEffectCoinInfoToJSON,
    CosmosBalanceChangeEffectCoinInfoToJSONTyped,
} from './CosmosBalanceChangeEffectCoinInfo';

/**
 * 
 * @export
 * @interface CosmosBalanceChangeEffect
 */
export interface CosmosBalanceChangeEffect {
    /**
     * 
     * @type {PricedAsset}
     * @memberof CosmosBalanceChangeEffect
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof CosmosBalanceChangeEffect
     */
    diff: string;
    /**
     * 
     * @type {CosmosBalanceChangeEffectType}
     * @memberof CosmosBalanceChangeEffect
     */
    type: CosmosBalanceChangeEffectType;
    /**
     * 
     * @type {CosmosBalanceChangeEffectCoinInfo}
     * @memberof CosmosBalanceChangeEffect
     * @deprecated
     */
    coinInfo: CosmosBalanceChangeEffectCoinInfo;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosBalanceChangeEffect
     */
    address: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosBalanceChangeEffect
     */
    owner?: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {Price}
     * @memberof CosmosBalanceChangeEffect
     */
    price?: Price;
}



/**
 * Check if a given object implements the CosmosBalanceChangeEffect interface.
 */
export function instanceOfCosmosBalanceChangeEffect(value: object): value is CosmosBalanceChangeEffect {
    if (!('pricedAsset' in value) || value['pricedAsset'] === undefined) return false;
    if (!('diff' in value) || value['diff'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('coinInfo' in value) || value['coinInfo'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    return true;
}

export function CosmosBalanceChangeEffectFromJSON(json: any): CosmosBalanceChangeEffect {
    return CosmosBalanceChangeEffectFromJSONTyped(json, false);
}

export function CosmosBalanceChangeEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosBalanceChangeEffect {
    if (json == null) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'diff': json['diff'],
        'type': CosmosBalanceChangeEffectTypeFromJSON(json['type']),
        'coinInfo': CosmosBalanceChangeEffectCoinInfoFromJSON(json['coin_info']),
        'address': EnrichedCosmosBechAddressFromJSON(json['address']),
        'owner': json['owner'] == null ? undefined : EnrichedCosmosBechAddressFromJSON(json['owner']),
        'price': json['price'] == null ? undefined : PriceFromJSON(json['price']),
    };
}

export function CosmosBalanceChangeEffectToJSON(json: any): CosmosBalanceChangeEffect {
    return CosmosBalanceChangeEffectToJSONTyped(json, false);
}

export function CosmosBalanceChangeEffectToJSONTyped(value?: CosmosBalanceChangeEffect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'priced_asset': PricedAssetToJSON(value['pricedAsset']),
        'diff': value['diff'],
        'type': CosmosBalanceChangeEffectTypeToJSON(value['type']),
        'coin_info': CosmosBalanceChangeEffectCoinInfoToJSON(value['coinInfo']),
        'address': EnrichedCosmosBechAddressToJSON(value['address']),
        'owner': EnrichedCosmosBechAddressToJSON(value['owner']),
        'price': PriceToJSON(value['price']),
    };
}

