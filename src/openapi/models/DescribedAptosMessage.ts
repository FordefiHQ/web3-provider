/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AptosMessageType } from './AptosMessageType';
import {
    AptosMessageTypeFromJSON,
    AptosMessageTypeFromJSONTyped,
    AptosMessageTypeToJSON,
} from './AptosMessageType';
import type { EnrichedAptosChain } from './EnrichedAptosChain';
import {
    EnrichedAptosChainFromJSON,
    EnrichedAptosChainFromJSONTyped,
    EnrichedAptosChainToJSON,
} from './EnrichedAptosChain';
import type { VaultRef } from './VaultRef';
import {
    VaultRefFromJSON,
    VaultRefFromJSONTyped,
    VaultRefToJSON,
} from './VaultRef';

/**
 * 
 * @export
 * @interface DescribedAptosMessage
 */
export interface DescribedAptosMessage {
    /**
     * 
     * @type {string}
     * @memberof DescribedAptosMessage
     */
    type: DescribedAptosMessageTypeEnum;
    /**
     * 
     * @type {VaultRef}
     * @memberof DescribedAptosMessage
     */
    vault: VaultRef;
    /**
     * 
     * @type {AptosMessageType}
     * @memberof DescribedAptosMessage
     */
    aptosMessageType: AptosMessageType;
    /**
     * 
     * @type {EnrichedAptosChain}
     * @memberof DescribedAptosMessage
     */
    chain: EnrichedAptosChain;
    /**
     * 
     * @type {string}
     * @memberof DescribedAptosMessage
     */
    rawData: string;
}


/**
 * @export
 */
export const DescribedAptosMessageTypeEnum = {
    aptosMessage: 'aptos_message'
} as const;
export type DescribedAptosMessageTypeEnum = typeof DescribedAptosMessageTypeEnum[keyof typeof DescribedAptosMessageTypeEnum];


/**
 * Check if a given object implements the DescribedAptosMessage interface.
 */
export function instanceOfDescribedAptosMessage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "vault" in value;
    isInstance = isInstance && "aptosMessageType" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "rawData" in value;

    return isInstance;
}

export function DescribedAptosMessageFromJSON(json: any): DescribedAptosMessage {
    return DescribedAptosMessageFromJSONTyped(json, false);
}

export function DescribedAptosMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): DescribedAptosMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'vault': VaultRefFromJSON(json['vault']),
        'aptosMessageType': AptosMessageTypeFromJSON(json['aptos_message_type']),
        'chain': EnrichedAptosChainFromJSON(json['chain']),
        'rawData': json['raw_data'],
    };
}

export function DescribedAptosMessageToJSON(value?: DescribedAptosMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'vault': VaultRefToJSON(value.vault),
        'aptos_message_type': AptosMessageTypeToJSON(value.aptosMessageType),
        'chain': EnrichedAptosChainToJSON(value.chain),
        'raw_data': value.rawData,
    };
}

