/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedSuiAddress } from './EnrichedSuiAddress';
import {
    EnrichedSuiAddressFromJSON,
    EnrichedSuiAddressFromJSONTyped,
    EnrichedSuiAddressToJSON,
    EnrichedSuiAddressToJSONTyped,
} from './EnrichedSuiAddress';

/**
 * 
 * @export
 * @interface SuiProgrammableTransactionBlockDetails
 */
export interface SuiProgrammableTransactionBlockDetails {
    /**
     * 
     * @type {string}
     * @memberof SuiProgrammableTransactionBlockDetails
     */
    type: SuiProgrammableTransactionBlockDetailsTypeEnum;
    /**
     * 
     * @type {EnrichedSuiAddress}
     * @memberof SuiProgrammableTransactionBlockDetails
     */
    sender: EnrichedSuiAddress;
    /**
     * 
     * @type {Array<EnrichedSuiAddress>}
     * @memberof SuiProgrammableTransactionBlockDetails
     */
    recipients: Array<EnrichedSuiAddress>;
}


/**
 * @export
 */
export const SuiProgrammableTransactionBlockDetailsTypeEnum = {
    programmableTransactionBlock: 'programmable_transaction_block'
} as const;
export type SuiProgrammableTransactionBlockDetailsTypeEnum = typeof SuiProgrammableTransactionBlockDetailsTypeEnum[keyof typeof SuiProgrammableTransactionBlockDetailsTypeEnum];


/**
 * Check if a given object implements the SuiProgrammableTransactionBlockDetails interface.
 */
export function instanceOfSuiProgrammableTransactionBlockDetails(value: object): value is SuiProgrammableTransactionBlockDetails {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('recipients' in value) || value['recipients'] === undefined) return false;
    return true;
}

export function SuiProgrammableTransactionBlockDetailsFromJSON(json: any): SuiProgrammableTransactionBlockDetails {
    return SuiProgrammableTransactionBlockDetailsFromJSONTyped(json, false);
}

export function SuiProgrammableTransactionBlockDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiProgrammableTransactionBlockDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'sender': EnrichedSuiAddressFromJSON(json['sender']),
        'recipients': ((json['recipients'] as Array<any>).map(EnrichedSuiAddressFromJSON)),
    };
}

export function SuiProgrammableTransactionBlockDetailsToJSON(json: any): SuiProgrammableTransactionBlockDetails {
    return SuiProgrammableTransactionBlockDetailsToJSONTyped(json, false);
}

export function SuiProgrammableTransactionBlockDetailsToJSONTyped(value?: SuiProgrammableTransactionBlockDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'sender': EnrichedSuiAddressToJSON(value['sender']),
        'recipients': ((value['recipients'] as Array<any>).map(EnrichedSuiAddressToJSON)),
    };
}

