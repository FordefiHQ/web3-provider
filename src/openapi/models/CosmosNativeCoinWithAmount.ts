/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosNativeCoin } from './CosmosNativeCoin';
import {
    CosmosNativeCoinFromJSON,
    CosmosNativeCoinFromJSONTyped,
    CosmosNativeCoinToJSON,
    CosmosNativeCoinToJSONTyped,
} from './CosmosNativeCoin';

/**
 * 
 * @export
 * @interface CosmosNativeCoinWithAmount
 */
export interface CosmosNativeCoinWithAmount {
    /**
     * 
     * @type {string}
     * @memberof CosmosNativeCoinWithAmount
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof CosmosNativeCoinWithAmount
     */
    type: CosmosNativeCoinWithAmountTypeEnum;
    /**
     * 
     * @type {CosmosNativeCoin}
     * @memberof CosmosNativeCoinWithAmount
     */
    coin: CosmosNativeCoin;
}


/**
 * @export
 */
export const CosmosNativeCoinWithAmountTypeEnum = {
    native: 'native'
} as const;
export type CosmosNativeCoinWithAmountTypeEnum = typeof CosmosNativeCoinWithAmountTypeEnum[keyof typeof CosmosNativeCoinWithAmountTypeEnum];


/**
 * Check if a given object implements the CosmosNativeCoinWithAmount interface.
 */
export function instanceOfCosmosNativeCoinWithAmount(value: object): value is CosmosNativeCoinWithAmount {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('coin' in value) || value['coin'] === undefined) return false;
    return true;
}

export function CosmosNativeCoinWithAmountFromJSON(json: any): CosmosNativeCoinWithAmount {
    return CosmosNativeCoinWithAmountFromJSONTyped(json, false);
}

export function CosmosNativeCoinWithAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosNativeCoinWithAmount {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'type': json['type'],
        'coin': CosmosNativeCoinFromJSON(json['coin']),
    };
}

export function CosmosNativeCoinWithAmountToJSON(json: any): CosmosNativeCoinWithAmount {
    return CosmosNativeCoinWithAmountToJSONTyped(json, false);
}

export function CosmosNativeCoinWithAmountToJSONTyped(value?: CosmosNativeCoinWithAmount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'type': value['type'],
        'coin': CosmosNativeCoinToJSON(value['coin']),
    };
}

