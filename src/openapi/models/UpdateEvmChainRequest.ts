/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateEvmChainRequest
 */
export interface UpdateEvmChainRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateEvmChainRequest
     */
    chainType: UpdateEvmChainRequestChainTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof UpdateEvmChainRequest
     */
    chainId: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateEvmChainRequest
     */
    chainName: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateEvmChainRequest
     */
    rpcUrl: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateEvmChainRequest
     */
    blockchainExplorerUrl?: string;
}


/**
 * @export
 */
export const UpdateEvmChainRequestChainTypeEnum = {
    evm: 'evm'
} as const;
export type UpdateEvmChainRequestChainTypeEnum = typeof UpdateEvmChainRequestChainTypeEnum[keyof typeof UpdateEvmChainRequestChainTypeEnum];

/**
 * @export
 */
export const UpdateEvmChainRequestChainIdEnum = {
    NUMBER_1: 1,
    NUMBER_5: 5,
    NUMBER_10: 10,
    NUMBER_16: 16,
    NUMBER_56: 56,
    NUMBER_100: 100,
    NUMBER_137: 137,
    NUMBER_169: 169,
    NUMBER_250: 250,
    NUMBER_324: 324,
    NUMBER_1030: 1030,
    NUMBER_1100: 1100,
    NUMBER_1101: 1101,
    NUMBER_1329: 1329,
    NUMBER_1729: 1729,
    NUMBER_2222: 2222,
    NUMBER_4200: 4200,
    NUMBER_5000: 5000,
    NUMBER_7000: 7000,
    NUMBER_7700: 7700,
    NUMBER_8453: 8453,
    NUMBER_17000: 17000,
    NUMBER_80001: 80001,
    NUMBER_42161: 42161,
    NUMBER_43114: 43114,
    NUMBER_59144: 59144,
    NUMBER_81457: 81457,
    NUMBER_421614: 421614,
    NUMBER_534352: 534352,
    NUMBER_660279: 660279,
    NUMBER_810180: 810180,
    NUMBER_11155111: 11155111
} as const;
export type UpdateEvmChainRequestChainIdEnum = typeof UpdateEvmChainRequestChainIdEnum[keyof typeof UpdateEvmChainRequestChainIdEnum];


/**
 * Check if a given object implements the UpdateEvmChainRequest interface.
 */
export function instanceOfUpdateEvmChainRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chainType" in value;
    isInstance = isInstance && "chainId" in value;
    isInstance = isInstance && "chainName" in value;
    isInstance = isInstance && "rpcUrl" in value;

    return isInstance;
}

export function UpdateEvmChainRequestFromJSON(json: any): UpdateEvmChainRequest {
    return UpdateEvmChainRequestFromJSONTyped(json, false);
}

export function UpdateEvmChainRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateEvmChainRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'chainId': json['chain_id'],
        'chainName': json['chain_name'],
        'rpcUrl': json['rpc_url'],
        'blockchainExplorerUrl': !exists(json, 'blockchain_explorer_url') ? undefined : json['blockchain_explorer_url'],
    };
}

export function UpdateEvmChainRequestToJSON(value?: UpdateEvmChainRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chain_type': value.chainType,
        'chain_id': value.chainId,
        'chain_name': value.chainName,
        'rpc_url': value.rpcUrl,
        'blockchain_explorer_url': value.blockchainExplorerUrl,
    };
}

