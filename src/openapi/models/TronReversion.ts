/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TronReversionState } from './TronReversionState';
import {
    TronReversionStateFromJSON,
    TronReversionStateFromJSONTyped,
    TronReversionStateToJSON,
    TronReversionStateToJSONTyped,
} from './TronReversionState';

/**
 * 
 * @export
 * @interface TronReversion
 */
export interface TronReversion {
    /**
     * 
     * @type {TronReversionState}
     * @memberof TronReversion
     */
    state: TronReversionState;
    /**
     * 
     * @type {string}
     * @memberof TronReversion
     */
    reason?: string;
}



/**
 * Check if a given object implements the TronReversion interface.
 */
export function instanceOfTronReversion(value: object): value is TronReversion {
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function TronReversionFromJSON(json: any): TronReversion {
    return TronReversionFromJSONTyped(json, false);
}

export function TronReversionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TronReversion {
    if (json == null) {
        return json;
    }
    return {
        
        'state': TronReversionStateFromJSON(json['state']),
        'reason': json['reason'] == null ? undefined : json['reason'],
    };
}

export function TronReversionToJSON(json: any): TronReversion {
    return TronReversionToJSONTyped(json, false);
}

export function TronReversionToJSONTyped(value?: TronReversion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'state': TronReversionStateToJSON(value['state']),
        'reason': value['reason'],
    };
}

