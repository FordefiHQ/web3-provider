/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DappInfo } from './DappInfo';
import {
    DappInfoFromJSON,
    DappInfoFromJSONTyped,
    DappInfoToJSON,
    DappInfoToJSONTyped,
} from './DappInfo';
import type { SignMode } from './SignMode';
import {
    SignModeFromJSON,
    SignModeFromJSONTyped,
    SignModeToJSON,
    SignModeToJSONTyped,
} from './SignMode';
import type { TonProofMessageRequest } from './TonProofMessageRequest';
import {
    TonProofMessageRequestFromJSON,
    TonProofMessageRequestFromJSONTyped,
    TonProofMessageRequestToJSON,
    TonProofMessageRequestToJSONTyped,
} from './TonProofMessageRequest';
import type { SignerType } from './SignerType';
import {
    SignerTypeFromJSON,
    SignerTypeFromJSONTyped,
    SignerTypeToJSON,
    SignerTypeToJSONTyped,
} from './SignerType';

/**
 * 
 * @export
 * @interface CreateTonMessageRequest
 */
export interface CreateTonMessageRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateTonMessageRequest
     */
    vaultId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTonMessageRequest
     */
    note?: string;
    /**
     * 
     * @type {SignerType}
     * @memberof CreateTonMessageRequest
     */
    signerType?: SignerType;
    /**
     * 
     * @type {SignMode}
     * @memberof CreateTonMessageRequest
     */
    signMode?: SignMode;
    /**
     * 
     * @type {DappInfo}
     * @memberof CreateTonMessageRequest
     */
    dappInfo?: DappInfo;
    /**
     * 
     * @type {string}
     * @memberof CreateTonMessageRequest
     */
    type: CreateTonMessageRequestTypeEnum;
    /**
     * 
     * @type {TonProofMessageRequest}
     * @memberof CreateTonMessageRequest
     */
    details: TonProofMessageRequest;
}


/**
 * @export
 */
export const CreateTonMessageRequestTypeEnum = {
    tonMessage: 'ton_message'
} as const;
export type CreateTonMessageRequestTypeEnum = typeof CreateTonMessageRequestTypeEnum[keyof typeof CreateTonMessageRequestTypeEnum];


/**
 * Check if a given object implements the CreateTonMessageRequest interface.
 */
export function instanceOfCreateTonMessageRequest(value: object): value is CreateTonMessageRequest {
    if (!('vaultId' in value) || value['vaultId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('details' in value) || value['details'] === undefined) return false;
    return true;
}

export function CreateTonMessageRequestFromJSON(json: any): CreateTonMessageRequest {
    return CreateTonMessageRequestFromJSONTyped(json, false);
}

export function CreateTonMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTonMessageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'vaultId': json['vault_id'],
        'note': json['note'] == null ? undefined : json['note'],
        'signerType': json['signer_type'] == null ? undefined : SignerTypeFromJSON(json['signer_type']),
        'signMode': json['sign_mode'] == null ? undefined : SignModeFromJSON(json['sign_mode']),
        'dappInfo': json['dapp_info'] == null ? undefined : DappInfoFromJSON(json['dapp_info']),
        'type': json['type'],
        'details': TonProofMessageRequestFromJSON(json['details']),
    };
}

export function CreateTonMessageRequestToJSON(json: any): CreateTonMessageRequest {
    return CreateTonMessageRequestToJSONTyped(json, false);
}

export function CreateTonMessageRequestToJSONTyped(value?: CreateTonMessageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'vault_id': value['vaultId'],
        'note': value['note'],
        'signer_type': SignerTypeToJSON(value['signerType']),
        'sign_mode': SignModeToJSON(value['signMode']),
        'dapp_info': DappInfoToJSON(value['dappInfo']),
        'type': value['type'],
        'details': TonProofMessageRequestToJSON(value['details']),
    };
}

