/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosGasDebit } from './CosmosGasDebit';
import {
    CosmosGasDebitFromJSON,
    CosmosGasDebitFromJSONTyped,
    CosmosGasDebitToJSON,
    CosmosGasDebitToJSONTyped,
} from './CosmosGasDebit';
import type { CosmosEffects } from './CosmosEffects';
import {
    CosmosEffectsFromJSON,
    CosmosEffectsFromJSONTyped,
    CosmosEffectsToJSON,
    CosmosEffectsToJSONTyped,
} from './CosmosEffects';

/**
 * 
 * @export
 * @interface CosmosTransactionResult
 */
export interface CosmosTransactionResult {
    /**
     * 
     * @type {string}
     * @memberof CosmosTransactionResult
     */
    message?: string;
    /**
     * 
     * @type {CosmosGasDebit}
     * @memberof CosmosTransactionResult
     */
    gasDebit: CosmosGasDebit;
    /**
     * 
     * @type {CosmosEffects}
     * @memberof CosmosTransactionResult
     */
    effects: CosmosEffects;
}

/**
 * Check if a given object implements the CosmosTransactionResult interface.
 */
export function instanceOfCosmosTransactionResult(value: object): value is CosmosTransactionResult {
    if (!('gasDebit' in value) || value['gasDebit'] === undefined) return false;
    if (!('effects' in value) || value['effects'] === undefined) return false;
    return true;
}

export function CosmosTransactionResultFromJSON(json: any): CosmosTransactionResult {
    return CosmosTransactionResultFromJSONTyped(json, false);
}

export function CosmosTransactionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosTransactionResult {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : json['message'],
        'gasDebit': CosmosGasDebitFromJSON(json['gas_debit']),
        'effects': CosmosEffectsFromJSON(json['effects']),
    };
}

export function CosmosTransactionResultToJSON(json: any): CosmosTransactionResult {
    return CosmosTransactionResultToJSONTyped(json, false);
}

export function CosmosTransactionResultToJSONTyped(value?: CosmosTransactionResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'gas_debit': CosmosGasDebitToJSON(value['gasDebit']),
        'effects': CosmosEffectsToJSON(value['effects']),
    };
}

