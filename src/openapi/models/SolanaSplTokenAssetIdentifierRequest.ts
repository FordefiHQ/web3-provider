/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SolanaAddressRequest } from './SolanaAddressRequest';
import {
    SolanaAddressRequestFromJSON,
    SolanaAddressRequestToJSON,
} from './SolanaAddressRequest';

/**
 * 
 * @export
 * @interface SolanaSplTokenAssetIdentifierRequest
 */
export interface SolanaSplTokenAssetIdentifierRequest {
    /**
     * 
     * @type {string}
     * @memberof SolanaSplTokenAssetIdentifierRequest
     */
    type: SolanaSplTokenAssetIdentifierRequestTypeEnum;
    /**
     * 
     * @type {SolanaAddressRequest}
     * @memberof SolanaSplTokenAssetIdentifierRequest
     */
    token: SolanaAddressRequest;
}


/**
 * 
 */
const SolanaSplTokenAssetIdentifierRequestTypeEnum = {
    splToken: 'spl_token'
} as const;
type SolanaSplTokenAssetIdentifierRequestTypeEnum = typeof SolanaSplTokenAssetIdentifierRequestTypeEnum[keyof typeof SolanaSplTokenAssetIdentifierRequestTypeEnum];

export function SolanaSplTokenAssetIdentifierRequestFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SolanaSplTokenAssetIdentifierRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'token': SolanaAddressRequestFromJSON(json['token']),
    };
}

export function SolanaSplTokenAssetIdentifierRequestToJSON(json: any): SolanaSplTokenAssetIdentifierRequest {
    return SolanaSplTokenAssetIdentifierRequestToJSONTyped(json, false);
}

function SolanaSplTokenAssetIdentifierRequestToJSONTyped(value?: SolanaSplTokenAssetIdentifierRequest | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'token': SolanaAddressRequestToJSON(value['token']),
    };
}
