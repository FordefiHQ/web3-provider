/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CloudType } from './CloudType';
import {
    CloudTypeFromJSON,
    CloudTypeFromJSONTyped,
    CloudTypeToJSON,
    CloudTypeToJSONTyped,
} from './CloudType';

/**
 * 
 * @export
 * @interface Cloud
 */
export interface Cloud {
    /**
     * 
     * @type {string}
     * @memberof Cloud
     */
    validationHash: string;
    /**
     * 
     * @type {string}
     * @memberof Cloud
     */
    type: CloudTypeEnum;
    /**
     * 
     * @type {CloudType}
     * @memberof Cloud
     */
    cloudType: CloudType;
    /**
     * 
     * @type {string}
     * @memberof Cloud
     */
    account: string;
    /**
     * 
     * @type {string}
     * @memberof Cloud
     */
    pinCode: string;
}


/**
 * @export
 */
export const CloudTypeEnum = {
    cloud: 'cloud'
} as const;
export type CloudTypeEnum = typeof CloudTypeEnum[keyof typeof CloudTypeEnum];


/**
 * Check if a given object implements the Cloud interface.
 */
export function instanceOfCloud(value: object): value is Cloud {
    if (!('validationHash' in value) || value['validationHash'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('cloudType' in value) || value['cloudType'] === undefined) return false;
    if (!('account' in value) || value['account'] === undefined) return false;
    if (!('pinCode' in value) || value['pinCode'] === undefined) return false;
    return true;
}

export function CloudFromJSON(json: any): Cloud {
    return CloudFromJSONTyped(json, false);
}

export function CloudFromJSONTyped(json: any, ignoreDiscriminator: boolean): Cloud {
    if (json == null) {
        return json;
    }
    return {
        
        'validationHash': json['validation_hash'],
        'type': json['type'],
        'cloudType': CloudTypeFromJSON(json['cloud_type']),
        'account': json['account'],
        'pinCode': json['pin_code'],
    };
}

export function CloudToJSON(json: any): Cloud {
    return CloudToJSONTyped(json, false);
}

export function CloudToJSONTyped(value?: Cloud | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'validation_hash': value['validationHash'],
        'type': value['type'],
        'cloud_type': CloudTypeToJSON(value['cloudType']),
        'account': value['account'],
        'pin_code': value['pinCode'],
    };
}

