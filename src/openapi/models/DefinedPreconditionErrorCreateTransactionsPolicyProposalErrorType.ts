/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateTransactionsPolicyProposalErrorType } from './CreateTransactionsPolicyProposalErrorType';
import {
    CreateTransactionsPolicyProposalErrorTypeFromJSON,
    CreateTransactionsPolicyProposalErrorTypeFromJSONTyped,
    CreateTransactionsPolicyProposalErrorTypeToJSON,
    CreateTransactionsPolicyProposalErrorTypeToJSONTyped,
} from './CreateTransactionsPolicyProposalErrorType';

/**
 * 
 * @export
 * @interface DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType
 */
export interface DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType {
    /**
     * 
     * @type {string}
     * @memberof DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType
     */
    detail: string;
    /**
     * 
     * @type {string}
     * @memberof DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType
     */
    requestId?: string;
    /**
     * 
     * @type {string}
     * @memberof DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType
     */
    systemErrorCode?: string;
    /**
     * 
     * @type {CreateTransactionsPolicyProposalErrorType}
     * @memberof DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType
     */
    errorType?: CreateTransactionsPolicyProposalErrorType;
}



/**
 * Check if a given object implements the DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType interface.
 */
export function instanceOfDefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType(value: object): value is DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('detail' in value) || value['detail'] === undefined) return false;
    return true;
}

export function DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorTypeFromJSON(json: any): DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType {
    return DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorTypeFromJSONTyped(json, false);
}

export function DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'detail': json['detail'],
        'requestId': json['request_id'] == null ? undefined : json['request_id'],
        'systemErrorCode': json['system_error_code'] == null ? undefined : json['system_error_code'],
        'errorType': json['error_type'] == null ? undefined : CreateTransactionsPolicyProposalErrorTypeFromJSON(json['error_type']),
    };
}

export function DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorTypeToJSON(json: any): DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType {
    return DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorTypeToJSONTyped(json, false);
}

export function DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorTypeToJSONTyped(value?: DefinedPreconditionErrorCreateTransactionsPolicyProposalErrorType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'detail': value['detail'],
        'request_id': value['requestId'],
        'system_error_code': value['systemErrorCode'],
        'error_type': CreateTransactionsPolicyProposalErrorTypeToJSON(value['errorType']),
    };
}

