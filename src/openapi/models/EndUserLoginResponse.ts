/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EncryptedDeviceSharesBackup } from './EncryptedDeviceSharesBackup';
import {
    EncryptedDeviceSharesBackupFromJSON,
    EncryptedDeviceSharesBackupFromJSONTyped,
    EncryptedDeviceSharesBackupToJSON,
    EncryptedDeviceSharesBackupToJSONTyped,
} from './EncryptedDeviceSharesBackup';
import type { KeyType } from './KeyType';
import {
    KeyTypeFromJSON,
    KeyTypeFromJSONTyped,
    KeyTypeToJSON,
    KeyTypeToJSONTyped,
} from './KeyType';
import type { KeysetKey } from './KeysetKey';
import {
    KeysetKeyFromJSON,
    KeysetKeyFromJSONTyped,
    KeysetKeyToJSON,
    KeysetKeyToJSONTyped,
} from './KeysetKey';

/**
 * 
 * @export
 * @interface EndUserLoginResponse
 */
export interface EndUserLoginResponse {
    /**
     * 
     * @type {string}
     * @memberof EndUserLoginResponse
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof EndUserLoginResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof EndUserLoginResponse
     */
    modifiedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EndUserLoginResponse
     */
    externalId: string;
    /**
     * 
     * @type {Date}
     * @memberof EndUserLoginResponse
     */
    lastLoginAt: Date;
    /**
     * 
     * @type {Array<KeyType>}
     * @memberof EndUserLoginResponse
     */
    desiredKeyTypes?: Array<KeyType>;
    /**
     * 
     * @type {string}
     * @memberof EndUserLoginResponse
     */
    keysetId: string;
    /**
     * 
     * @type {KeysetKey}
     * @memberof EndUserLoginResponse
     */
    ecdsa?: KeysetKey;
    /**
     * 
     * @type {KeysetKey}
     * @memberof EndUserLoginResponse
     */
    eddsa?: KeysetKey;
    /**
     * 
     * @type {KeysetKey}
     * @memberof EndUserLoginResponse
     */
    ecdsaStark?: KeysetKey;
    /**
     * 
     * @type {KeysetKey}
     * @memberof EndUserLoginResponse
     */
    schnorrSecp256k1?: KeysetKey;
    /**
     * 
     * @type {string}
     * @memberof EndUserLoginResponse
     */
    authPublicKey?: string;
    /**
     * 
     * @type {string}
     * @memberof EndUserLoginResponse
     * @deprecated
     */
    encryptedDeviceAuthKey?: string;
    /**
     * 
     * @type {Array<EncryptedDeviceSharesBackup>}
     * @memberof EndUserLoginResponse
     */
    encryptedDeviceSharesBackups?: Array<EncryptedDeviceSharesBackup>;
    /**
     * 
     * @type {Date}
     * @memberof EndUserLoginResponse
     */
    lastBackupAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof EndUserLoginResponse
     */
    exportAllowed: boolean;
    /**
     * 
     * @type {Date}
     * @memberof EndUserLoginResponse
     */
    lastExportAt: Date;
}

/**
 * Check if a given object implements the EndUserLoginResponse interface.
 */
export function instanceOfEndUserLoginResponse(value: object): value is EndUserLoginResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('externalId' in value) || value['externalId'] === undefined) return false;
    if (!('lastLoginAt' in value) || value['lastLoginAt'] === undefined) return false;
    if (!('keysetId' in value) || value['keysetId'] === undefined) return false;
    if (!('lastBackupAt' in value) || value['lastBackupAt'] === undefined) return false;
    if (!('exportAllowed' in value) || value['exportAllowed'] === undefined) return false;
    if (!('lastExportAt' in value) || value['lastExportAt'] === undefined) return false;
    return true;
}

export function EndUserLoginResponseFromJSON(json: any): EndUserLoginResponse {
    return EndUserLoginResponseFromJSONTyped(json, false);
}

export function EndUserLoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndUserLoginResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'externalId': json['external_id'],
        'lastLoginAt': (new Date(json['last_login_at'])),
        'desiredKeyTypes': json['desired_key_types'] == null ? undefined : ((json['desired_key_types'] as Array<any>).map(KeyTypeFromJSON)),
        'keysetId': json['keyset_id'],
        'ecdsa': json['ecdsa'] == null ? undefined : KeysetKeyFromJSON(json['ecdsa']),
        'eddsa': json['eddsa'] == null ? undefined : KeysetKeyFromJSON(json['eddsa']),
        'ecdsaStark': json['ecdsa_stark'] == null ? undefined : KeysetKeyFromJSON(json['ecdsa_stark']),
        'schnorrSecp256k1': json['schnorr_secp256k1'] == null ? undefined : KeysetKeyFromJSON(json['schnorr_secp256k1']),
        'authPublicKey': json['auth_public_key'] == null ? undefined : json['auth_public_key'],
        'encryptedDeviceAuthKey': json['encrypted_device_auth_key'] == null ? undefined : json['encrypted_device_auth_key'],
        'encryptedDeviceSharesBackups': json['encrypted_device_shares_backups'] == null ? undefined : ((json['encrypted_device_shares_backups'] as Array<any>).map(EncryptedDeviceSharesBackupFromJSON)),
        'lastBackupAt': (new Date(json['last_backup_at'])),
        'exportAllowed': json['export_allowed'],
        'lastExportAt': (new Date(json['last_export_at'])),
    };
}

export function EndUserLoginResponseToJSON(json: any): EndUserLoginResponse {
    return EndUserLoginResponseToJSONTyped(json, false);
}

export function EndUserLoginResponseToJSONTyped(value?: EndUserLoginResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'external_id': value['externalId'],
        'last_login_at': ((value['lastLoginAt']).toISOString()),
        'desired_key_types': value['desiredKeyTypes'] == null ? undefined : ((value['desiredKeyTypes'] as Array<any>).map(KeyTypeToJSON)),
        'keyset_id': value['keysetId'],
        'ecdsa': KeysetKeyToJSON(value['ecdsa']),
        'eddsa': KeysetKeyToJSON(value['eddsa']),
        'ecdsa_stark': KeysetKeyToJSON(value['ecdsaStark']),
        'schnorr_secp256k1': KeysetKeyToJSON(value['schnorrSecp256k1']),
        'auth_public_key': value['authPublicKey'],
        'encrypted_device_auth_key': value['encryptedDeviceAuthKey'],
        'encrypted_device_shares_backups': value['encryptedDeviceSharesBackups'] == null ? undefined : ((value['encryptedDeviceSharesBackups'] as Array<any>).map(EncryptedDeviceSharesBackupToJSON)),
        'last_backup_at': ((value['lastBackupAt']).toISOString()),
        'export_allowed': value['exportAllowed'],
        'last_export_at': ((value['lastExportAt']).toISOString()),
    };
}

