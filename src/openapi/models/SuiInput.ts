/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SuiObjectInputArgument } from './SuiObjectInputArgument';
import {
    SuiObjectInputArgumentFromJSONTyped,
    SuiObjectInputArgumentToJSON,
} from './SuiObjectInputArgument';
import type { SuiPureInputArgument } from './SuiPureInputArgument';
import {
    SuiPureInputArgumentFromJSONTyped,
    SuiPureInputArgumentToJSON,
} from './SuiPureInputArgument';

/**
 * 
 * @export
 * @type SuiInput
 */
export type SuiInput = { type: 'object' } & SuiObjectInputArgument | { type: 'pure' } & SuiPureInputArgument;

export function SuiInputFromJSON(json: any): SuiInput {
    return SuiInputFromJSONTyped(json, false);
}

function SuiInputFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SuiInput {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'object':
            return Object.assign({}, SuiObjectInputArgumentFromJSONTyped(json, true), { type: 'object' } as const);
        case 'pure':
            return Object.assign({}, SuiPureInputArgumentFromJSONTyped(json, true), { type: 'pure' } as const);
        default:
            throw new Error(`No variant of SuiInput exists with 'type=${json['type']}'`);
    }
}

export function SuiInputToJSON(json: any): any {
    return SuiInputToJSONTyped(json, false);
}

function SuiInputToJSONTyped(value?: SuiInput | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'object':
            return Object.assign({}, SuiObjectInputArgumentToJSON(value), { type: 'object' } as const);
        case 'pure':
            return Object.assign({}, SuiPureInputArgumentToJSON(value), { type: 'pure' } as const);
        default:
            throw new Error(`No variant of SuiInput exists with 'type=${value['type']}'`);
    }

}

