/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosAssetIdentifierRequest } from './CosmosAssetIdentifierRequest';
import {
    CosmosAssetIdentifierRequestFromJSON,
    CosmosAssetIdentifierRequestFromJSONTyped,
    CosmosAssetIdentifierRequestToJSON,
} from './CosmosAssetIdentifierRequest';
import type { TypedCosmosTransferRequestTo } from './TypedCosmosTransferRequestTo';
import {
    TypedCosmosTransferRequestToFromJSON,
    TypedCosmosTransferRequestToFromJSONTyped,
    TypedCosmosTransferRequestToToJSON,
} from './TypedCosmosTransferRequestTo';
import type { TypedCosmosTransferRequestValue } from './TypedCosmosTransferRequestValue';
import {
    TypedCosmosTransferRequestValueFromJSON,
    TypedCosmosTransferRequestValueFromJSONTyped,
    TypedCosmosTransferRequestValueToJSON,
} from './TypedCosmosTransferRequestValue';

/**
 * 
 * @export
 * @interface TypedCosmosTransferRequest
 */
export interface TypedCosmosTransferRequest {
    /**
     * 
     * @type {string}
     * @memberof TypedCosmosTransferRequest
     */
    type: TypedCosmosTransferRequestTypeEnum;
    /**
     * 
     * @type {TypedCosmosTransferRequestTo}
     * @memberof TypedCosmosTransferRequest
     */
    to: TypedCosmosTransferRequestTo;
    /**
     * 
     * @type {CosmosAssetIdentifierRequest}
     * @memberof TypedCosmosTransferRequest
     */
    assetIdentifier: CosmosAssetIdentifierRequest;
    /**
     * 
     * @type {TypedCosmosTransferRequestValue}
     * @memberof TypedCosmosTransferRequest
     */
    value: TypedCosmosTransferRequestValue;
    /**
     * 
     * @type {string}
     * @memberof TypedCosmosTransferRequest
     */
    memo?: string;
}


/**
 * @export
 */
export const TypedCosmosTransferRequestTypeEnum = {
    cosmosTransfer: 'cosmos_transfer'
} as const;
export type TypedCosmosTransferRequestTypeEnum = typeof TypedCosmosTransferRequestTypeEnum[keyof typeof TypedCosmosTransferRequestTypeEnum];


/**
 * Check if a given object implements the TypedCosmosTransferRequest interface.
 */
export function instanceOfTypedCosmosTransferRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "assetIdentifier" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function TypedCosmosTransferRequestFromJSON(json: any): TypedCosmosTransferRequest {
    return TypedCosmosTransferRequestFromJSONTyped(json, false);
}

export function TypedCosmosTransferRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypedCosmosTransferRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'to': TypedCosmosTransferRequestToFromJSON(json['to']),
        'assetIdentifier': CosmosAssetIdentifierRequestFromJSON(json['asset_identifier']),
        'value': TypedCosmosTransferRequestValueFromJSON(json['value']),
        'memo': !exists(json, 'memo') ? undefined : json['memo'],
    };
}

export function TypedCosmosTransferRequestToJSON(value?: TypedCosmosTransferRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'to': TypedCosmosTransferRequestToToJSON(value.to),
        'asset_identifier': CosmosAssetIdentifierRequestToJSON(value.assetIdentifier),
        'value': TypedCosmosTransferRequestValueToJSON(value.value),
        'memo': value.memo,
    };
}

