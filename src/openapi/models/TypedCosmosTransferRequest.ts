/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosAssetIdentifierRequest } from './CosmosAssetIdentifierRequest';
import {
    CosmosAssetIdentifierRequestFromJSON,
    CosmosAssetIdentifierRequestFromJSONTyped,
    CosmosAssetIdentifierRequestToJSON,
    CosmosAssetIdentifierRequestToJSONTyped,
} from './CosmosAssetIdentifierRequest';
import type { CreateAptosTransferRequestValue } from './CreateAptosTransferRequestValue';
import {
    CreateAptosTransferRequestValueFromJSON,
    CreateAptosTransferRequestValueFromJSONTyped,
    CreateAptosTransferRequestValueToJSON,
    CreateAptosTransferRequestValueToJSONTyped,
} from './CreateAptosTransferRequestValue';
import type { TypedCosmosTransferRequestTo } from './TypedCosmosTransferRequestTo';
import {
    TypedCosmosTransferRequestToFromJSON,
    TypedCosmosTransferRequestToFromJSONTyped,
    TypedCosmosTransferRequestToToJSON,
    TypedCosmosTransferRequestToToJSONTyped,
} from './TypedCosmosTransferRequestTo';
import type { PushMode } from './PushMode';
import {
    PushModeFromJSON,
    PushModeFromJSONTyped,
    PushModeToJSON,
    PushModeToJSONTyped,
} from './PushMode';

/**
 * 
 * @export
 * @interface TypedCosmosTransferRequest
 */
export interface TypedCosmosTransferRequest {
    /**
     * 
     * @type {string}
     * @memberof TypedCosmosTransferRequest
     */
    type: TypedCosmosTransferRequestTypeEnum;
    /**
     * 
     * @type {PushMode}
     * @memberof TypedCosmosTransferRequest
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {TypedCosmosTransferRequestTo}
     * @memberof TypedCosmosTransferRequest
     */
    to: TypedCosmosTransferRequestTo;
    /**
     * 
     * @type {CosmosAssetIdentifierRequest}
     * @memberof TypedCosmosTransferRequest
     */
    assetIdentifier: CosmosAssetIdentifierRequest;
    /**
     * 
     * @type {CreateAptosTransferRequestValue}
     * @memberof TypedCosmosTransferRequest
     */
    value: CreateAptosTransferRequestValue;
    /**
     * 
     * @type {string}
     * @memberof TypedCosmosTransferRequest
     */
    memo?: string;
}


/**
 * @export
 */
export const TypedCosmosTransferRequestTypeEnum = {
    cosmosTransfer: 'cosmos_transfer'
} as const;
export type TypedCosmosTransferRequestTypeEnum = typeof TypedCosmosTransferRequestTypeEnum[keyof typeof TypedCosmosTransferRequestTypeEnum];


/**
 * Check if a given object implements the TypedCosmosTransferRequest interface.
 */
export function instanceOfTypedCosmosTransferRequest(value: object): value is TypedCosmosTransferRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('assetIdentifier' in value) || value['assetIdentifier'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function TypedCosmosTransferRequestFromJSON(json: any): TypedCosmosTransferRequest {
    return TypedCosmosTransferRequestFromJSONTyped(json, false);
}

export function TypedCosmosTransferRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypedCosmosTransferRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'pushMode': json['push_mode'] == null ? undefined : PushModeFromJSON(json['push_mode']),
        'to': TypedCosmosTransferRequestToFromJSON(json['to']),
        'assetIdentifier': CosmosAssetIdentifierRequestFromJSON(json['asset_identifier']),
        'value': CreateAptosTransferRequestValueFromJSON(json['value']),
        'memo': json['memo'] == null ? undefined : json['memo'],
    };
}

export function TypedCosmosTransferRequestToJSON(json: any): TypedCosmosTransferRequest {
    return TypedCosmosTransferRequestToJSONTyped(json, false);
}

export function TypedCosmosTransferRequestToJSONTyped(value?: TypedCosmosTransferRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'push_mode': PushModeToJSON(value['pushMode']),
        'to': TypedCosmosTransferRequestToToJSON(value['to']),
        'asset_identifier': CosmosAssetIdentifierRequestToJSON(value['assetIdentifier']),
        'value': CreateAptosTransferRequestValueToJSON(value['value']),
        'memo': value['memo'],
    };
}

