/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AlertProviderType } from './AlertProviderType';
import {
    AlertProviderTypeFromJSON,
    AlertProviderTypeFromJSONTyped,
    AlertProviderTypeToJSON,
    AlertProviderTypeToJSONTyped,
} from './AlertProviderType';

/**
 * 
 * @export
 * @interface ConfigAutoRevokeProtectionSettingsRequest
 */
export interface ConfigAutoRevokeProtectionSettingsRequest {
    /**
     * 
     * @type {boolean}
     * @memberof ConfigAutoRevokeProtectionSettingsRequest
     */
    isActive: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConfigAutoRevokeProtectionSettingsRequest
     */
    shouldSendToApiSigner: boolean;
    /**
     * 
     * @type {Array<AlertProviderType>}
     * @memberof ConfigAutoRevokeProtectionSettingsRequest
     */
    alertProviders: Array<AlertProviderType>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ConfigAutoRevokeProtectionSettingsRequest
     */
    signersIds: Array<string>;
}

/**
 * Check if a given object implements the ConfigAutoRevokeProtectionSettingsRequest interface.
 */
export function instanceOfConfigAutoRevokeProtectionSettingsRequest(value: object): value is ConfigAutoRevokeProtectionSettingsRequest {
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    if (!('shouldSendToApiSigner' in value) || value['shouldSendToApiSigner'] === undefined) return false;
    if (!('alertProviders' in value) || value['alertProviders'] === undefined) return false;
    if (!('signersIds' in value) || value['signersIds'] === undefined) return false;
    return true;
}

export function ConfigAutoRevokeProtectionSettingsRequestFromJSON(json: any): ConfigAutoRevokeProtectionSettingsRequest {
    return ConfigAutoRevokeProtectionSettingsRequestFromJSONTyped(json, false);
}

export function ConfigAutoRevokeProtectionSettingsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigAutoRevokeProtectionSettingsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'isActive': json['is_active'],
        'shouldSendToApiSigner': json['should_send_to_api_signer'],
        'alertProviders': ((json['alert_providers'] as Array<any>).map(AlertProviderTypeFromJSON)),
        'signersIds': json['signers_ids'],
    };
}

export function ConfigAutoRevokeProtectionSettingsRequestToJSON(json: any): ConfigAutoRevokeProtectionSettingsRequest {
    return ConfigAutoRevokeProtectionSettingsRequestToJSONTyped(json, false);
}

export function ConfigAutoRevokeProtectionSettingsRequestToJSONTyped(value?: ConfigAutoRevokeProtectionSettingsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_active': value['isActive'],
        'should_send_to_api_signer': value['shouldSendToApiSigner'],
        'alert_providers': ((value['alertProviders'] as Array<any>).map(AlertProviderTypeToJSON)),
        'signers_ids': value['signersIds'],
    };
}

