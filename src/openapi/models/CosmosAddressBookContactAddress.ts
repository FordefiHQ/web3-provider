/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedCosmosChain } from './EnrichedCosmosChain';
import {
    EnrichedCosmosChainFromJSON,
    EnrichedCosmosChainFromJSONTyped,
    EnrichedCosmosChainToJSON,
    EnrichedCosmosChainToJSONTyped,
} from './EnrichedCosmosChain';

/**
 * 
 * @export
 * @interface CosmosAddressBookContactAddress
 */
export interface CosmosAddressBookContactAddress {
    /**
     * 
     * @type {string}
     * @memberof CosmosAddressBookContactAddress
     */
    chainType: CosmosAddressBookContactAddressChainTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CosmosAddressBookContactAddress
     */
    address: string;
    /**
     * 
     * @type {EnrichedCosmosChain}
     * @memberof CosmosAddressBookContactAddress
     */
    chain: EnrichedCosmosChain;
    /**
     * 
     * @type {string}
     * @memberof CosmosAddressBookContactAddress
     */
    memo?: string;
}


/**
 * @export
 */
export const CosmosAddressBookContactAddressChainTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type CosmosAddressBookContactAddressChainTypeEnum = typeof CosmosAddressBookContactAddressChainTypeEnum[keyof typeof CosmosAddressBookContactAddressChainTypeEnum];


/**
 * Check if a given object implements the CosmosAddressBookContactAddress interface.
 */
export function instanceOfCosmosAddressBookContactAddress(value: object): value is CosmosAddressBookContactAddress {
    if (!('chainType' in value) || value['chainType'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    return true;
}

export function CosmosAddressBookContactAddressFromJSON(json: any): CosmosAddressBookContactAddress {
    return CosmosAddressBookContactAddressFromJSONTyped(json, false);
}

export function CosmosAddressBookContactAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosAddressBookContactAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'address': json['address'],
        'chain': EnrichedCosmosChainFromJSON(json['chain']),
        'memo': json['memo'] == null ? undefined : json['memo'],
    };
}

export function CosmosAddressBookContactAddressToJSON(json: any): CosmosAddressBookContactAddress {
    return CosmosAddressBookContactAddressToJSONTyped(json, false);
}

export function CosmosAddressBookContactAddressToJSONTyped(value?: CosmosAddressBookContactAddress | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain_type': value['chainType'],
        'address': value['address'],
        'chain': EnrichedCosmosChainToJSON(value['chain']),
        'memo': value['memo'],
    };
}

