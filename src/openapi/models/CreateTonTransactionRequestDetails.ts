/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CreateTonSerializedRawTransactionRequest } from './CreateTonSerializedRawTransactionRequest';
import {
    instanceOfCreateTonSerializedRawTransactionRequest,
    CreateTonSerializedRawTransactionRequestFromJSON,
    CreateTonSerializedRawTransactionRequestFromJSONTyped,
    CreateTonSerializedRawTransactionRequestToJSON,
} from './CreateTonSerializedRawTransactionRequest';
import type { CreateTonTransferRequest } from './CreateTonTransferRequest';
import {
    instanceOfCreateTonTransferRequest,
    CreateTonTransferRequestFromJSON,
    CreateTonTransferRequestFromJSONTyped,
    CreateTonTransferRequestToJSON,
} from './CreateTonTransferRequest';

/**
 * @type CreateTonTransactionRequestDetails
 * 
 * @export
 */
export type CreateTonTransactionRequestDetails = { type: 'ton_raw_transaction' } & CreateTonSerializedRawTransactionRequest | { type: 'ton_transfer' } & CreateTonTransferRequest;

export function CreateTonTransactionRequestDetailsFromJSON(json: any): CreateTonTransactionRequestDetails {
    return CreateTonTransactionRequestDetailsFromJSONTyped(json, false);
}

export function CreateTonTransactionRequestDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTonTransactionRequestDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'ton_raw_transaction':
            return Object.assign({}, CreateTonSerializedRawTransactionRequestFromJSONTyped(json, true), { type: 'ton_raw_transaction' } as const);
        case 'ton_transfer':
            return Object.assign({}, CreateTonTransferRequestFromJSONTyped(json, true), { type: 'ton_transfer' } as const);
        default:
            throw new Error(`No variant of CreateTonTransactionRequestDetails exists with 'type=${json['type']}'`);
    }
}

export function CreateTonTransactionRequestDetailsToJSON(json: any): any {
    return CreateTonTransactionRequestDetailsToJSONTyped(json, false);
}

export function CreateTonTransactionRequestDetailsToJSONTyped(value?: CreateTonTransactionRequestDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'ton_raw_transaction':
            return Object.assign({}, CreateTonSerializedRawTransactionRequestToJSON(value), { type: 'ton_raw_transaction' } as const);
        case 'ton_transfer':
            return Object.assign({}, CreateTonTransferRequestToJSON(value), { type: 'ton_transfer' } as const);
        default:
            throw new Error(`No variant of CreateTonTransactionRequestDetails exists with 'type=${value['type']}'`);
    }

}

