/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface SuiReceivingObjectRefInputArgument
 */
export interface SuiReceivingObjectRefInputArgument {
    /**
     * 
     * @type {string}
     * @memberof SuiReceivingObjectRefInputArgument
     */
    digest: string;
    /**
     * 
     * @type {string}
     * @memberof SuiReceivingObjectRefInputArgument
     */
    objectId: string;
    /**
     * 
     * @type {string}
     * @memberof SuiReceivingObjectRefInputArgument
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof SuiReceivingObjectRefInputArgument
     */
    type: SuiReceivingObjectRefInputArgumentTypeEnum;
}


/**
 * 
 */
const SuiReceivingObjectRefInputArgumentTypeEnum = {
    receiving: 'receiving'
} as const;
type SuiReceivingObjectRefInputArgumentTypeEnum = typeof SuiReceivingObjectRefInputArgumentTypeEnum[keyof typeof SuiReceivingObjectRefInputArgumentTypeEnum];

export function SuiReceivingObjectRefInputArgumentFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SuiReceivingObjectRefInputArgument {
    if (json == null) {
        return json;
    }
    return {
        
        'digest': json['digest'],
        'objectId': json['object_id'],
        'version': json['version'],
        'type': json['type'],
    };
}

export function SuiReceivingObjectRefInputArgumentToJSON(json: any): SuiReceivingObjectRefInputArgument {
    return SuiReceivingObjectRefInputArgumentToJSONTyped(json, false);
}

function SuiReceivingObjectRefInputArgumentToJSONTyped(value?: SuiReceivingObjectRefInputArgument | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'digest': value['digest'],
        'object_id': value['objectId'],
        'version': value['version'],
        'type': value['type'],
    };
}
