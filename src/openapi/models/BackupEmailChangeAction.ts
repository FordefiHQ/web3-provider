/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
} from './UserRef';

/**
 * 
 * @export
 * @interface BackupEmailChangeAction
 */
export interface BackupEmailChangeAction {
    /**
     * 
     * @type {string}
     * @memberof BackupEmailChangeAction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof BackupEmailChangeAction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof BackupEmailChangeAction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof BackupEmailChangeAction
     */
    type: BackupEmailChangeActionTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof BackupEmailChangeAction
     */
    isPending: boolean;
    /**
     * 
     * @type {UserRef}
     * @memberof BackupEmailChangeAction
     */
    createdBy: UserRef;
    /**
     * 
     * @type {UserRef}
     * @memberof BackupEmailChangeAction
     */
    abortedBy?: UserRef;
    /**
     * 
     * @type {string}
     * @memberof BackupEmailChangeAction
     */
    state: BackupEmailChangeActionStateEnum;
    /**
     * 
     * @type {string}
     * @memberof BackupEmailChangeAction
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof BackupEmailChangeAction
     */
    currentEmail: string;
    /**
     * 
     * @type {string}
     * @memberof BackupEmailChangeAction
     */
    newEmail: string;
}


/**
 * @export
 */
export const BackupEmailChangeActionTypeEnum = {
    backupEmailChange: 'backup_email_change'
} as const;
export type BackupEmailChangeActionTypeEnum = typeof BackupEmailChangeActionTypeEnum[keyof typeof BackupEmailChangeActionTypeEnum];

/**
 * @export
 */
export const BackupEmailChangeActionStateEnum = {
    created: 'created',
    completed: 'completed',
    aborted: 'aborted',
    failed: 'failed'
} as const;
export type BackupEmailChangeActionStateEnum = typeof BackupEmailChangeActionStateEnum[keyof typeof BackupEmailChangeActionStateEnum];


/**
 * Check if a given object implements the BackupEmailChangeAction interface.
 */
export function instanceOfBackupEmailChangeAction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "modifiedAt" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "isPending" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "requestId" in value;
    isInstance = isInstance && "currentEmail" in value;
    isInstance = isInstance && "newEmail" in value;

    return isInstance;
}

export function BackupEmailChangeActionFromJSON(json: any): BackupEmailChangeAction {
    return BackupEmailChangeActionFromJSONTyped(json, false);
}

export function BackupEmailChangeActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackupEmailChangeAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'type': json['type'],
        'isPending': json['is_pending'],
        'createdBy': UserRefFromJSON(json['created_by']),
        'abortedBy': !exists(json, 'aborted_by') ? undefined : UserRefFromJSON(json['aborted_by']),
        'state': json['state'],
        'requestId': json['request_id'],
        'currentEmail': json['current_email'],
        'newEmail': json['new_email'],
    };
}

export function BackupEmailChangeActionToJSON(value?: BackupEmailChangeAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'modified_at': (value.modifiedAt.toISOString()),
        'type': value.type,
        'is_pending': value.isPending,
        'created_by': UserRefToJSON(value.createdBy),
        'aborted_by': UserRefToJSON(value.abortedBy),
        'state': value.state,
        'request_id': value.requestId,
        'current_email': value.currentEmail,
        'new_email': value.newEmail,
    };
}

