/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { StacksNativeAssetIdentifierRequest } from './StacksNativeAssetIdentifierRequest';
import {
    StacksNativeAssetIdentifierRequestFromJSONTyped,
    StacksNativeAssetIdentifierRequestToJSON,
} from './StacksNativeAssetIdentifierRequest';
import type { StacksSip10AssetIdentifierRequest } from './StacksSip10AssetIdentifierRequest';
import {
    StacksSip10AssetIdentifierRequestFromJSONTyped,
    StacksSip10AssetIdentifierRequestToJSON,
} from './StacksSip10AssetIdentifierRequest';

/**
 * 
 * @export
 * @type StacksAssetIdentifierDetails
 */
export type StacksAssetIdentifierDetails = { type: 'native' } & StacksNativeAssetIdentifierRequest | { type: 'sip10' } & StacksSip10AssetIdentifierRequest;

export function StacksAssetIdentifierDetailsFromJSON(json: any): StacksAssetIdentifierDetails {
    return StacksAssetIdentifierDetailsFromJSONTyped(json, false);
}

function StacksAssetIdentifierDetailsFromJSONTyped(json: any, _ignoreDiscriminator: boolean): StacksAssetIdentifierDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'native':
            return Object.assign({}, StacksNativeAssetIdentifierRequestFromJSONTyped(json, true), { type: 'native' } as const);
        case 'sip10':
            return Object.assign({}, StacksSip10AssetIdentifierRequestFromJSONTyped(json, true), { type: 'sip10' } as const);
        default:
            throw new Error(`No variant of StacksAssetIdentifierDetails exists with 'type=${json['type']}'`);
    }
}

export function StacksAssetIdentifierDetailsToJSON(json: any): any {
    return StacksAssetIdentifierDetailsToJSONTyped(json, false);
}

function StacksAssetIdentifierDetailsToJSONTyped(value?: StacksAssetIdentifierDetails | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'native':
            return Object.assign({}, StacksNativeAssetIdentifierRequestToJSON(value), { type: 'native' } as const);
        case 'sip10':
            return Object.assign({}, StacksSip10AssetIdentifierRequestToJSON(value), { type: 'sip10' } as const);
        default:
            throw new Error(`No variant of StacksAssetIdentifierDetails exists with 'type=${value['type']}'`);
    }

}

