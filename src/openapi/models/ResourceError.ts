/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Resource } from './Resource';
import {
    ResourceFromJSON,
    ResourceFromJSONTyped,
    ResourceToJSON,
} from './Resource';

/**
 * 
 * @export
 * @interface ResourceError
 */
export interface ResourceError {
    /**
     * 
     * @type {string}
     * @memberof ResourceError
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ResourceError
     */
    detail: string;
    /**
     * 
     * @type {string}
     * @memberof ResourceError
     */
    requestId?: string;
    /**
     * 
     * @type {Resource}
     * @memberof ResourceError
     */
    resource?: Resource;
}

/**
 * Check if a given object implements the ResourceError interface.
 */
export function instanceOfResourceError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "detail" in value;

    return isInstance;
}

export function ResourceErrorFromJSON(json: any): ResourceError {
    return ResourceErrorFromJSONTyped(json, false);
}

export function ResourceErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'detail': json['detail'],
        'requestId': !exists(json, 'request_id') ? undefined : json['request_id'],
        'resource': !exists(json, 'resource') ? undefined : ResourceFromJSON(json['resource']),
    };
}

export function ResourceErrorToJSON(value?: ResourceError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'detail': value.detail,
        'request_id': value.requestId,
        'resource': ResourceToJSON(value.resource),
    };
}

