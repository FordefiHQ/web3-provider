/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateTransferRequestMaxAmount
 */
export interface CreateTransferRequestMaxAmount {
    /**
     * 
     * @type {string}
     * @memberof CreateTransferRequestMaxAmount
     */
    type: CreateTransferRequestMaxAmountTypeEnum;
}


/**
 * @export
 */
export const CreateTransferRequestMaxAmountTypeEnum = {
    max: 'max'
} as const;
export type CreateTransferRequestMaxAmountTypeEnum = typeof CreateTransferRequestMaxAmountTypeEnum[keyof typeof CreateTransferRequestMaxAmountTypeEnum];


/**
 * Check if a given object implements the CreateTransferRequestMaxAmount interface.
 */
export function instanceOfCreateTransferRequestMaxAmount(value: object): value is CreateTransferRequestMaxAmount {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CreateTransferRequestMaxAmountFromJSON(json: any): CreateTransferRequestMaxAmount {
    return CreateTransferRequestMaxAmountFromJSONTyped(json, false);
}

export function CreateTransferRequestMaxAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTransferRequestMaxAmount {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
    };
}

export function CreateTransferRequestMaxAmountToJSON(json: any): CreateTransferRequestMaxAmount {
    return CreateTransferRequestMaxAmountToJSONTyped(json, false);
}

export function CreateTransferRequestMaxAmountToJSONTyped(value?: CreateTransferRequestMaxAmount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
    };
}

