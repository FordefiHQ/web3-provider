/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TonChainUniqueId } from './TonChainUniqueId';
import {
    TonChainUniqueIdFromJSON,
    TonChainUniqueIdFromJSONTyped,
    TonChainUniqueIdToJSON,
    TonChainUniqueIdToJSONTyped,
} from './TonChainUniqueId';
import type { TonAssetIdentifierRequest } from './TonAssetIdentifierRequest';
import {
    TonAssetIdentifierRequestFromJSON,
    TonAssetIdentifierRequestFromJSONTyped,
    TonAssetIdentifierRequestToJSON,
    TonAssetIdentifierRequestToJSONTyped,
} from './TonAssetIdentifierRequest';

/**
 * 
 * @export
 * @interface CreateTonContactRequest
 */
export interface CreateTonContactRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateTonContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTonContactRequest
     */
    type: CreateTonContactRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateTonContactRequest
     */
    address: string;
    /**
     * 
     * @type {Array<TonChainUniqueId>}
     * @memberof CreateTonContactRequest
     */
    chains: Array<TonChainUniqueId>;
    /**
     * 
     * @type {Array<TonAssetIdentifierRequest>}
     * @memberof CreateTonContactRequest
     */
    assetsIdentifiers?: Array<TonAssetIdentifierRequest>;
    /**
     * 
     * @type {string}
     * @memberof CreateTonContactRequest
     */
    comment?: string;
}


/**
 * @export
 */
export const CreateTonContactRequestTypeEnum = {
    ton: 'ton'
} as const;
export type CreateTonContactRequestTypeEnum = typeof CreateTonContactRequestTypeEnum[keyof typeof CreateTonContactRequestTypeEnum];


/**
 * Check if a given object implements the CreateTonContactRequest interface.
 */
export function instanceOfCreateTonContactRequest(value: object): value is CreateTonContactRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('chains' in value) || value['chains'] === undefined) return false;
    return true;
}

export function CreateTonContactRequestFromJSON(json: any): CreateTonContactRequest {
    return CreateTonContactRequestFromJSONTyped(json, false);
}

export function CreateTonContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTonContactRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'address': json['address'],
        'chains': ((json['chains'] as Array<any>).map(TonChainUniqueIdFromJSON)),
        'assetsIdentifiers': json['assets_identifiers'] == null ? undefined : ((json['assets_identifiers'] as Array<any>).map(TonAssetIdentifierRequestFromJSON)),
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function CreateTonContactRequestToJSON(json: any): CreateTonContactRequest {
    return CreateTonContactRequestToJSONTyped(json, false);
}

export function CreateTonContactRequestToJSONTyped(value?: CreateTonContactRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'address': value['address'],
        'chains': ((value['chains'] as Array<any>).map(TonChainUniqueIdToJSON)),
        'assets_identifiers': value['assetsIdentifiers'] == null ? undefined : ((value['assetsIdentifiers'] as Array<any>).map(TonAssetIdentifierRequestToJSON)),
        'comment': value['comment'],
    };
}

