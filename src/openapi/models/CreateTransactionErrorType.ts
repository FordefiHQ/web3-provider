/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const CreateTransactionErrorType = {
    revertedTransaction: 'reverted_transaction',
    partialSignedRawRequest: 'partial_signed_raw_request',
    blockedByPolicy: 'blocked_by_policy',
    transactionContainsRestrictedAddresses: 'transaction_contains_restricted_addresses',
    vaultNotFound: 'vault_not_found',
    missingSignedRawRequest: 'missing_signed_raw_request',
    redundantSignedRawRequest: 'redundant_signed_raw_request',
    transferToSelf: 'transfer_to_self',
    transactionToNonContract: 'transaction_to_non_contract',
    insecureStarkKeyDerivation: 'insecure_stark_key_derivation',
    invalidSignedRawRequest: 'invalid_signed_raw_request',
    invalidSignerType: 'invalid_signer_type',
    invalidEvmMessage: 'invalid_evm_message',
    invalidEvmTransactionData: 'invalid_evm_transaction_data',
    insufficientFunds: 'insufficient_funds',
    vaultTypeMismatch: 'vault_type_mismatch',
    invalidCreatorType: 'invalid_creator_type',
    invalidRecipient: 'invalid_recipient',
    dustNotAllowed: 'dust_not_allowed',
    invalidGasType: 'invalid_gas_type',
    insufficientApprovers: 'insufficient_approvers',
    fundingBlockedByPolicy: 'funding_blocked_by_policy',
    funderNotAllowedForTransactionType: 'funder_not_allowed_for_transaction_type',
    originVaultUsedAsFunder: 'origin_vault_used_as_funder'
} as const;
export type CreateTransactionErrorType = typeof CreateTransactionErrorType[keyof typeof CreateTransactionErrorType];


export function CreateTransactionErrorTypeFromJSON(json: any): CreateTransactionErrorType {
    return CreateTransactionErrorTypeFromJSONTyped(json, false);
}

export function CreateTransactionErrorTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTransactionErrorType {
    return json as CreateTransactionErrorType;
}

export function CreateTransactionErrorTypeToJSON(value?: CreateTransactionErrorType | null): any {
    return value as any;
}

