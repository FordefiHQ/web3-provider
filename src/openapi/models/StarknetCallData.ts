/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedStarknetAddress } from './EnrichedStarknetAddress';
import {
    EnrichedStarknetAddressFromJSON,
    EnrichedStarknetAddressFromJSONTyped,
    EnrichedStarknetAddressToJSON,
    EnrichedStarknetAddressToJSONTyped,
} from './EnrichedStarknetAddress';

/**
 * 
 * @export
 * @interface StarknetCallData
 */
export interface StarknetCallData {
    /**
     * 
     * @type {EnrichedStarknetAddress}
     * @memberof StarknetCallData
     */
    to: EnrichedStarknetAddress;
    /**
     * 
     * @type {string}
     * @memberof StarknetCallData
     */
    methodName: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof StarknetCallData
     */
    methodArguments: Array<string>;
}

/**
 * Check if a given object implements the StarknetCallData interface.
 */
export function instanceOfStarknetCallData(value: object): value is StarknetCallData {
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('methodName' in value) || value['methodName'] === undefined) return false;
    if (!('methodArguments' in value) || value['methodArguments'] === undefined) return false;
    return true;
}

export function StarknetCallDataFromJSON(json: any): StarknetCallData {
    return StarknetCallDataFromJSONTyped(json, false);
}

export function StarknetCallDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): StarknetCallData {
    if (json == null) {
        return json;
    }
    return {
        
        'to': EnrichedStarknetAddressFromJSON(json['to']),
        'methodName': json['method_name'],
        'methodArguments': json['method_arguments'],
    };
}

export function StarknetCallDataToJSON(json: any): StarknetCallData {
    return StarknetCallDataToJSONTyped(json, false);
}

export function StarknetCallDataToJSONTyped(value?: StarknetCallData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'to': EnrichedStarknetAddressToJSON(value['to']),
        'method_name': value['methodName'],
        'method_arguments': value['methodArguments'],
    };
}

