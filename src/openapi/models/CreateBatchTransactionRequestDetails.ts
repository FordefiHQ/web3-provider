/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SolanaChainUniqueId } from './SolanaChainUniqueId';
import {
    SolanaChainUniqueIdFromJSON,
    SolanaChainUniqueIdFromJSONTyped,
    SolanaChainUniqueIdToJSON,
    SolanaChainUniqueIdToJSONTyped,
} from './SolanaChainUniqueId';
import type { CreateBatchTransactionInstanceDetails } from './CreateBatchTransactionInstanceDetails';
import {
    CreateBatchTransactionInstanceDetailsFromJSON,
    CreateBatchTransactionInstanceDetailsFromJSONTyped,
    CreateBatchTransactionInstanceDetailsToJSON,
    CreateBatchTransactionInstanceDetailsToJSONTyped,
} from './CreateBatchTransactionInstanceDetails';
import type { BatchSolanaTransactionRequestDetailsFee } from './BatchSolanaTransactionRequestDetailsFee';
import {
    BatchSolanaTransactionRequestDetailsFeeFromJSON,
    BatchSolanaTransactionRequestDetailsFeeFromJSONTyped,
    BatchSolanaTransactionRequestDetailsFeeToJSON,
    BatchSolanaTransactionRequestDetailsFeeToJSONTyped,
} from './BatchSolanaTransactionRequestDetailsFee';
import type { PushMode } from './PushMode';
import {
    PushModeFromJSON,
    PushModeFromJSONTyped,
    PushModeToJSON,
    PushModeToJSONTyped,
} from './PushMode';

/**
 * 
 * @export
 * @interface CreateBatchTransactionRequestDetails
 */
export interface CreateBatchTransactionRequestDetails {
    /**
     * 
     * @type {BatchSolanaTransactionRequestDetailsFee}
     * @memberof CreateBatchTransactionRequestDetails
     */
    fee?: BatchSolanaTransactionRequestDetailsFee;
    /**
     * 
     * @type {string}
     * @memberof CreateBatchTransactionRequestDetails
     */
    type: CreateBatchTransactionRequestDetailsTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof CreateBatchTransactionRequestDetails
     */
    failOnPredictionFailure?: boolean;
    /**
     * 
     * @type {PushMode}
     * @memberof CreateBatchTransactionRequestDetails
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {boolean}
     * @memberof CreateBatchTransactionRequestDetails
     */
    skipPrediction?: boolean;
    /**
     * 
     * @type {SolanaChainUniqueId}
     * @memberof CreateBatchTransactionRequestDetails
     */
    chain: SolanaChainUniqueId;
    /**
     * 
     * @type {Array<CreateBatchTransactionInstanceDetails>}
     * @memberof CreateBatchTransactionRequestDetails
     */
    transactions: Array<CreateBatchTransactionInstanceDetails>;
}


/**
 * @export
 */
export const CreateBatchTransactionRequestDetailsTypeEnum = {
    solanaRawTransaction: 'solana_raw_transaction'
} as const;
export type CreateBatchTransactionRequestDetailsTypeEnum = typeof CreateBatchTransactionRequestDetailsTypeEnum[keyof typeof CreateBatchTransactionRequestDetailsTypeEnum];


/**
 * Check if a given object implements the CreateBatchTransactionRequestDetails interface.
 */
export function instanceOfCreateBatchTransactionRequestDetails(value: object): value is CreateBatchTransactionRequestDetails {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('transactions' in value) || value['transactions'] === undefined) return false;
    return true;
}

export function CreateBatchTransactionRequestDetailsFromJSON(json: any): CreateBatchTransactionRequestDetails {
    return CreateBatchTransactionRequestDetailsFromJSONTyped(json, false);
}

export function CreateBatchTransactionRequestDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBatchTransactionRequestDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'fee': json['fee'] == null ? undefined : BatchSolanaTransactionRequestDetailsFeeFromJSON(json['fee']),
        'type': json['type'],
        'failOnPredictionFailure': json['fail_on_prediction_failure'] == null ? undefined : json['fail_on_prediction_failure'],
        'pushMode': json['push_mode'] == null ? undefined : PushModeFromJSON(json['push_mode']),
        'skipPrediction': json['skip_prediction'] == null ? undefined : json['skip_prediction'],
        'chain': SolanaChainUniqueIdFromJSON(json['chain']),
        'transactions': ((json['transactions'] as Array<any>).map(CreateBatchTransactionInstanceDetailsFromJSON)),
    };
}

export function CreateBatchTransactionRequestDetailsToJSON(json: any): CreateBatchTransactionRequestDetails {
    return CreateBatchTransactionRequestDetailsToJSONTyped(json, false);
}

export function CreateBatchTransactionRequestDetailsToJSONTyped(value?: CreateBatchTransactionRequestDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fee': BatchSolanaTransactionRequestDetailsFeeToJSON(value['fee']),
        'type': value['type'],
        'fail_on_prediction_failure': value['failOnPredictionFailure'],
        'push_mode': PushModeToJSON(value['pushMode']),
        'skip_prediction': value['skipPrediction'],
        'chain': SolanaChainUniqueIdToJSON(value['chain']),
        'transactions': ((value['transactions'] as Array<any>).map(CreateBatchTransactionInstanceDetailsToJSON)),
    };
}

