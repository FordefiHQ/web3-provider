/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EndUserRef
 */
export interface EndUserRef {
    /**
     * 
     * @type {string}
     * @memberof EndUserRef
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof EndUserRef
     */
    userType: EndUserRefUserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EndUserRef
     */
    externalId: string;
    /**
     * 
     * @type {string}
     * @memberof EndUserRef
     */
    state: EndUserRefStateEnum;
}


/**
 * @export
 */
export const EndUserRefUserTypeEnum = {
    endUser: 'end_user'
} as const;
export type EndUserRefUserTypeEnum = typeof EndUserRefUserTypeEnum[keyof typeof EndUserRefUserTypeEnum];

/**
 * @export
 */
export const EndUserRefStateEnum = {
    active: 'active',
    deleted: 'deleted'
} as const;
export type EndUserRefStateEnum = typeof EndUserRefStateEnum[keyof typeof EndUserRefStateEnum];


/**
 * Check if a given object implements the EndUserRef interface.
 */
export function instanceOfEndUserRef(value: object): value is EndUserRef {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userType' in value) || value['userType'] === undefined) return false;
    if (!('externalId' in value) || value['externalId'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function EndUserRefFromJSON(json: any): EndUserRef {
    return EndUserRefFromJSONTyped(json, false);
}

export function EndUserRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndUserRef {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userType': json['user_type'],
        'externalId': json['external_id'],
        'state': json['state'],
    };
}

export function EndUserRefToJSON(json: any): EndUserRef {
    return EndUserRefToJSONTyped(json, false);
}

export function EndUserRefToJSONTyped(value?: EndUserRef | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_type': value['userType'],
        'external_id': value['externalId'],
        'state': value['state'],
    };
}

