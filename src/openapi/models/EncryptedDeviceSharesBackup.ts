/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EncryptedDeviceSharesBackup
 */
export interface EncryptedDeviceSharesBackup {
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof EncryptedDeviceSharesBackup
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    ecdsa?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    eddsa?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    ecdsaStark?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    schnorrSecp256k1?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    authKey?: string;
}

/**
 * Check if a given object implements the EncryptedDeviceSharesBackup interface.
 */
export function instanceOfEncryptedDeviceSharesBackup(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function EncryptedDeviceSharesBackupFromJSON(json: any): EncryptedDeviceSharesBackup {
    return EncryptedDeviceSharesBackupFromJSONTyped(json, false);
}

export function EncryptedDeviceSharesBackupFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncryptedDeviceSharesBackup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': (new Date(json['created_at'])),
        'ecdsa': !exists(json, 'ecdsa') ? undefined : json['ecdsa'],
        'eddsa': !exists(json, 'eddsa') ? undefined : json['eddsa'],
        'ecdsaStark': !exists(json, 'ecdsa_stark') ? undefined : json['ecdsa_stark'],
        'schnorrSecp256k1': !exists(json, 'schnorr_secp256k1') ? undefined : json['schnorr_secp256k1'],
        'authKey': !exists(json, 'auth_key') ? undefined : json['auth_key'],
    };
}

export function EncryptedDeviceSharesBackupToJSON(value?: EncryptedDeviceSharesBackup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'ecdsa': value.ecdsa,
        'eddsa': value.eddsa,
        'ecdsa_stark': value.ecdsaStark,
        'schnorr_secp256k1': value.schnorrSecp256k1,
        'auth_key': value.authKey,
    };
}

