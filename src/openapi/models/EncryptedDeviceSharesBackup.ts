/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EncryptedDeviceSharesBackup
 */
export interface EncryptedDeviceSharesBackup {
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof EncryptedDeviceSharesBackup
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    ecdsa?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    eddsa?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    ecdsaStark?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    schnorrSecp256k1?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedDeviceSharesBackup
     */
    authKey?: string;
}

/**
 * Check if a given object implements the EncryptedDeviceSharesBackup interface.
 */
export function instanceOfEncryptedDeviceSharesBackup(value: object): value is EncryptedDeviceSharesBackup {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function EncryptedDeviceSharesBackupFromJSON(json: any): EncryptedDeviceSharesBackup {
    return EncryptedDeviceSharesBackupFromJSONTyped(json, false);
}

export function EncryptedDeviceSharesBackupFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncryptedDeviceSharesBackup {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': (new Date(json['created_at'])),
        'ecdsa': json['ecdsa'] == null ? undefined : json['ecdsa'],
        'eddsa': json['eddsa'] == null ? undefined : json['eddsa'],
        'ecdsaStark': json['ecdsa_stark'] == null ? undefined : json['ecdsa_stark'],
        'schnorrSecp256k1': json['schnorr_secp256k1'] == null ? undefined : json['schnorr_secp256k1'],
        'authKey': json['auth_key'] == null ? undefined : json['auth_key'],
    };
}

export function EncryptedDeviceSharesBackupToJSON(json: any): EncryptedDeviceSharesBackup {
    return EncryptedDeviceSharesBackupToJSONTyped(json, false);
}

export function EncryptedDeviceSharesBackupToJSONTyped(value?: EncryptedDeviceSharesBackup | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'ecdsa': value['ecdsa'],
        'eddsa': value['eddsa'],
        'ecdsa_stark': value['ecdsaStark'],
        'schnorr_secp256k1': value['schnorrSecp256k1'],
        'auth_key': value['authKey'],
    };
}

