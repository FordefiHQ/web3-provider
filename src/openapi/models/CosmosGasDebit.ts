/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosCoinWithAmount } from './CosmosCoinWithAmount';
import {
    CosmosCoinWithAmountFromJSON,
    CosmosCoinWithAmountFromJSONTyped,
    CosmosCoinWithAmountToJSON,
    CosmosCoinWithAmountToJSONTyped,
} from './CosmosCoinWithAmount';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';

/**
 * 
 * @export
 * @interface CosmosGasDebit
 */
export interface CosmosGasDebit {
    /**
     * 
     * @type {string}
     * @memberof CosmosGasDebit
     */
    gasUsed: string;
    /**
     * 
     * @type {Array<CosmosCoinWithAmount>}
     * @memberof CosmosGasDebit
     */
    totalFee: Array<CosmosCoinWithAmount>;
    /**
     * 
     * @type {Array<Price>}
     * @memberof CosmosGasDebit
     */
    fiatPrices: Array<Price>;
}

/**
 * Check if a given object implements the CosmosGasDebit interface.
 */
export function instanceOfCosmosGasDebit(value: object): value is CosmosGasDebit {
    if (!('gasUsed' in value) || value['gasUsed'] === undefined) return false;
    if (!('totalFee' in value) || value['totalFee'] === undefined) return false;
    if (!('fiatPrices' in value) || value['fiatPrices'] === undefined) return false;
    return true;
}

export function CosmosGasDebitFromJSON(json: any): CosmosGasDebit {
    return CosmosGasDebitFromJSONTyped(json, false);
}

export function CosmosGasDebitFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosGasDebit {
    if (json == null) {
        return json;
    }
    return {
        
        'gasUsed': json['gas_used'],
        'totalFee': ((json['total_fee'] as Array<any>).map(CosmosCoinWithAmountFromJSON)),
        'fiatPrices': ((json['fiat_prices'] as Array<any>).map(PriceFromJSON)),
    };
}

export function CosmosGasDebitToJSON(json: any): CosmosGasDebit {
    return CosmosGasDebitToJSONTyped(json, false);
}

export function CosmosGasDebitToJSONTyped(value?: CosmosGasDebit | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gas_used': value['gasUsed'],
        'total_fee': ((value['totalFee'] as Array<any>).map(CosmosCoinWithAmountToJSON)),
        'fiat_prices': ((value['fiatPrices'] as Array<any>).map(PriceToJSON)),
    };
}

