/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SolanaChainUniqueId } from './SolanaChainUniqueId';
import {
    SolanaChainUniqueIdFromJSON,
    SolanaChainUniqueIdFromJSONTyped,
    SolanaChainUniqueIdToJSON,
} from './SolanaChainUniqueId';

/**
 * 
 * @export
 * @interface EditSolanaContactRequest
 */
export interface EditSolanaContactRequest {
    /**
     * 
     * @type {string}
     * @memberof EditSolanaContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EditSolanaContactRequest
     */
    type: EditSolanaContactRequestTypeEnum;
    /**
     * 
     * @type {Array<SolanaChainUniqueId>}
     * @memberof EditSolanaContactRequest
     */
    chains: Array<SolanaChainUniqueId>;
}


/**
 * @export
 */
export const EditSolanaContactRequestTypeEnum = {
    solana: 'solana'
} as const;
export type EditSolanaContactRequestTypeEnum = typeof EditSolanaContactRequestTypeEnum[keyof typeof EditSolanaContactRequestTypeEnum];


/**
 * Check if a given object implements the EditSolanaContactRequest interface.
 */
export function instanceOfEditSolanaContactRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "chains" in value;

    return isInstance;
}

export function EditSolanaContactRequestFromJSON(json: any): EditSolanaContactRequest {
    return EditSolanaContactRequestFromJSONTyped(json, false);
}

export function EditSolanaContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditSolanaContactRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'chains': ((json['chains'] as Array<any>).map(SolanaChainUniqueIdFromJSON)),
    };
}

export function EditSolanaContactRequestToJSON(value?: EditSolanaContactRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'chains': ((value.chains as Array<any>).map(SolanaChainUniqueIdToJSON)),
    };
}

