/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EnrichedUtxoAddress } from './EnrichedUtxoAddress';
import {
    EnrichedUtxoAddressFromJSON,
} from './EnrichedUtxoAddress';
import type { UtxoMessageType } from './UtxoMessageType';
import {
    UtxoMessageTypeFromJSON,
} from './UtxoMessageType';
import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
} from './ManagedTransactionData';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
} from './TransactionSpamState';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
} from './TransactionDirection';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
} from './Signature';
import type { NonPushableTransactionStateChange } from './NonPushableTransactionStateChange';
import {
    NonPushableTransactionStateChangeFromJSON,
} from './NonPushableTransactionStateChange';
import type { EnrichedUtxoChain } from './EnrichedUtxoChain';
import {
    EnrichedUtxoChainFromJSON,
} from './EnrichedUtxoChain';
import type { NonPushableTransactionState } from './NonPushableTransactionState';
import {
    NonPushableTransactionStateFromJSON,
} from './NonPushableTransactionState';

/**
 * 
 * @export
 * @interface UtxoMessage
 */
export interface UtxoMessage {
    /**
     * 
     * @type {string}
     * @memberof UtxoMessage
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof UtxoMessage
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UtxoMessage
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof UtxoMessage
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof UtxoMessage
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof UtxoMessage
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof UtxoMessage
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof UtxoMessage
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {boolean}
     * @memberof UtxoMessage
     */
    signedExternally?: boolean;
    /**
     * 
     * @type {NonPushableTransactionState}
     * @memberof UtxoMessage
     */
    state: NonPushableTransactionState;
    /**
     * 
     * @type {Array<NonPushableTransactionStateChange>}
     * @memberof UtxoMessage
     */
    stateChanges: Array<NonPushableTransactionStateChange>;
    /**
     * 
     * @type {string}
     * @memberof UtxoMessage
     */
    type: UtxoMessageTypeEnum;
    /**
     * 
     * @type {UtxoMessageType}
     * @memberof UtxoMessage
     */
    utxoMessageType: UtxoMessageType;
    /**
     * 
     * @type {string}
     * @memberof UtxoMessage
     */
    rawData: string;
    /**
     * 
     * @type {EnrichedUtxoChain}
     * @memberof UtxoMessage
     */
    chain: EnrichedUtxoChain;
    /**
     * 
     * @type {string}
     * @memberof UtxoMessage
     */
    stringData: string;
    /**
     * 
     * @type {EnrichedUtxoAddress}
     * @memberof UtxoMessage
     */
    sender: EnrichedUtxoAddress;
}


/**
 * 
 */
const UtxoMessageTypeEnum = {
    utxoMessage: 'utxo_message'
} as const;
type UtxoMessageTypeEnum = typeof UtxoMessageTypeEnum[keyof typeof UtxoMessageTypeEnum];

export function UtxoMessageFromJSONTyped(json: any, _ignoreDiscriminator: boolean): UtxoMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': json['managed_transaction_data'] == null ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'spamState': json['spam_state'] == null ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'signedExternally': json['signed_externally'] == null ? undefined : json['signed_externally'],
        'state': NonPushableTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(NonPushableTransactionStateChangeFromJSON)),
        'type': json['type'],
        'utxoMessageType': UtxoMessageTypeFromJSON(json['utxo_message_type']),
        'rawData': json['raw_data'],
        'chain': EnrichedUtxoChainFromJSON(json['chain']),
        'stringData': json['string_data'],
        'sender': EnrichedUtxoAddressFromJSON(json['sender']),
    };
}
