/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    EvmBridgeEffectKnownDestination,
    instanceOfEvmBridgeEffectKnownDestination,
    EvmBridgeEffectKnownDestinationFromJSON,
    EvmBridgeEffectKnownDestinationFromJSONTyped,
    EvmBridgeEffectKnownDestinationToJSON,
} from './EvmBridgeEffectKnownDestination';
import {
    EvmBridgeEffectUnknownDestination,
    instanceOfEvmBridgeEffectUnknownDestination,
    EvmBridgeEffectUnknownDestinationFromJSON,
    EvmBridgeEffectUnknownDestinationFromJSONTyped,
    EvmBridgeEffectUnknownDestinationToJSON,
} from './EvmBridgeEffectUnknownDestination';

/**
 * @type EvmBridgeEffectDestination
 * 
 * @export
 */
export type EvmBridgeEffectDestination = { type: 'known_target_chain' } & EvmBridgeEffectKnownDestination | { type: 'unknown_target_chain' } & EvmBridgeEffectUnknownDestination;

export function EvmBridgeEffectDestinationFromJSON(json: any): EvmBridgeEffectDestination {
    return EvmBridgeEffectDestinationFromJSONTyped(json, false);
}

export function EvmBridgeEffectDestinationFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmBridgeEffectDestination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'known_target_chain':
            return {...EvmBridgeEffectKnownDestinationFromJSONTyped(json, true), type: 'known_target_chain'};
        case 'unknown_target_chain':
            return {...EvmBridgeEffectUnknownDestinationFromJSONTyped(json, true), type: 'unknown_target_chain'};
        default:
            throw new Error(`No variant of EvmBridgeEffectDestination exists with 'type=${json['type']}'`);
    }
}

export function EvmBridgeEffectDestinationToJSON(value?: EvmBridgeEffectDestination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'known_target_chain':
            return EvmBridgeEffectKnownDestinationToJSON(value);
        case 'unknown_target_chain':
            return EvmBridgeEffectUnknownDestinationToJSON(value);
        default:
            throw new Error(`No variant of EvmBridgeEffectDestination exists with 'type=${value['type']}'`);
    }

}

