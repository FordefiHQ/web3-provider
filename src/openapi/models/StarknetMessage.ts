/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnrichedStarknetAddress } from './EnrichedStarknetAddress';
import {
    EnrichedStarknetAddressFromJSON,
    EnrichedStarknetAddressFromJSONTyped,
    EnrichedStarknetAddressToJSON,
} from './EnrichedStarknetAddress';
import type { EnrichedStarknetChain } from './EnrichedStarknetChain';
import {
    EnrichedStarknetChainFromJSON,
    EnrichedStarknetChainFromJSONTyped,
    EnrichedStarknetChainToJSON,
} from './EnrichedStarknetChain';
import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
    ManagedTransactionDataFromJSONTyped,
    ManagedTransactionDataToJSON,
} from './ManagedTransactionData';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
    SignatureFromJSONTyped,
    SignatureToJSON,
} from './Signature';
import type { StarknetMessageState } from './StarknetMessageState';
import {
    StarknetMessageStateFromJSON,
    StarknetMessageStateFromJSONTyped,
    StarknetMessageStateToJSON,
} from './StarknetMessageState';
import type { StarknetMessageStateChange } from './StarknetMessageStateChange';
import {
    StarknetMessageStateChangeFromJSON,
    StarknetMessageStateChangeFromJSONTyped,
    StarknetMessageStateChangeToJSON,
} from './StarknetMessageStateChange';
import type { StarknetMessageType } from './StarknetMessageType';
import {
    StarknetMessageTypeFromJSON,
    StarknetMessageTypeFromJSONTyped,
    StarknetMessageTypeToJSON,
} from './StarknetMessageType';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
    TransactionDirectionFromJSONTyped,
    TransactionDirectionToJSON,
} from './TransactionDirection';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
    TransactionSpamStateFromJSONTyped,
    TransactionSpamStateToJSON,
} from './TransactionSpamState';

/**
 * 
 * @export
 * @interface StarknetMessage
 */
export interface StarknetMessage {
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof StarknetMessage
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof StarknetMessage
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof StarknetMessage
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof StarknetMessage
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof StarknetMessage
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof StarknetMessage
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    type: StarknetMessageTypeEnum;
    /**
     * 
     * @type {StarknetMessageType}
     * @memberof StarknetMessage
     */
    starknetMessageType: StarknetMessageType;
    /**
     * 
     * @type {StarknetMessageState}
     * @memberof StarknetMessage
     */
    state: StarknetMessageState;
    /**
     * 
     * @type {Array<StarknetMessageStateChange>}
     * @memberof StarknetMessage
     */
    stateChanges: Array<StarknetMessageStateChange>;
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    rawData: string;
    /**
     * 
     * @type {EnrichedStarknetChain}
     * @memberof StarknetMessage
     */
    chain: EnrichedStarknetChain;
    /**
     * 
     * @type {EnrichedStarknetAddress}
     * @memberof StarknetMessage
     */
    sender: EnrichedStarknetAddress;
}


/**
 * @export
 */
export const StarknetMessageTypeEnum = {
    starknetMessage: 'starknet_message'
} as const;
export type StarknetMessageTypeEnum = typeof StarknetMessageTypeEnum[keyof typeof StarknetMessageTypeEnum];


/**
 * Check if a given object implements the StarknetMessage interface.
 */
export function instanceOfStarknetMessage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "modifiedAt" in value;
    isInstance = isInstance && "signatures" in value;
    isInstance = isInstance && "direction" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "starknetMessageType" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "stateChanges" in value;
    isInstance = isInstance && "rawData" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "sender" in value;

    return isInstance;
}

export function StarknetMessageFromJSON(json: any): StarknetMessage {
    return StarknetMessageFromJSONTyped(json, false);
}

export function StarknetMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): StarknetMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': !exists(json, 'managed_transaction_data') ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': !exists(json, 'note') ? undefined : json['note'],
        'spamState': !exists(json, 'spam_state') ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'type': json['type'],
        'starknetMessageType': StarknetMessageTypeFromJSON(json['starknet_message_type']),
        'state': StarknetMessageStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(StarknetMessageStateChangeFromJSON)),
        'rawData': json['raw_data'],
        'chain': EnrichedStarknetChainFromJSON(json['chain']),
        'sender': EnrichedStarknetAddressFromJSON(json['sender']),
    };
}

export function StarknetMessageToJSON(value?: StarknetMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'modified_at': (value.modifiedAt.toISOString()),
        'managed_transaction_data': ManagedTransactionDataToJSON(value.managedTransactionData),
        'signatures': ((value.signatures as Array<any>).map(SignatureToJSON)),
        'note': value.note,
        'spam_state': TransactionSpamStateToJSON(value.spamState),
        'direction': TransactionDirectionToJSON(value.direction),
        'type': value.type,
        'starknet_message_type': StarknetMessageTypeToJSON(value.starknetMessageType),
        'state': StarknetMessageStateToJSON(value.state),
        'state_changes': ((value.stateChanges as Array<any>).map(StarknetMessageStateChangeToJSON)),
        'raw_data': value.rawData,
        'chain': EnrichedStarknetChainToJSON(value.chain),
        'sender': EnrichedStarknetAddressToJSON(value.sender),
    };
}

