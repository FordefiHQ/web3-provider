/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
} from './ManagedTransactionData';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
} from './TransactionSpamState';
import type { EnrichedStarknetChain } from './EnrichedStarknetChain';
import {
    EnrichedStarknetChainFromJSON,
} from './EnrichedStarknetChain';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
} from './TransactionDirection';
import type { StarknetMessageType } from './StarknetMessageType';
import {
    StarknetMessageTypeFromJSON,
} from './StarknetMessageType';
import type { EnrichedStarknetAddress } from './EnrichedStarknetAddress';
import {
    EnrichedStarknetAddressFromJSON,
} from './EnrichedStarknetAddress';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
} from './Signature';
import type { NonPushableTransactionStateChange } from './NonPushableTransactionStateChange';
import {
    NonPushableTransactionStateChangeFromJSON,
} from './NonPushableTransactionStateChange';
import type { NonPushableTransactionState } from './NonPushableTransactionState';
import {
    NonPushableTransactionStateFromJSON,
} from './NonPushableTransactionState';

/**
 * 
 * @export
 * @interface StarknetMessage
 */
export interface StarknetMessage {
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof StarknetMessage
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof StarknetMessage
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof StarknetMessage
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof StarknetMessage
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof StarknetMessage
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof StarknetMessage
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {boolean}
     * @memberof StarknetMessage
     */
    signedExternally?: boolean;
    /**
     * 
     * @type {NonPushableTransactionState}
     * @memberof StarknetMessage
     */
    state: NonPushableTransactionState;
    /**
     * 
     * @type {Array<NonPushableTransactionStateChange>}
     * @memberof StarknetMessage
     */
    stateChanges: Array<NonPushableTransactionStateChange>;
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    type: StarknetMessageTypeEnum;
    /**
     * 
     * @type {StarknetMessageType}
     * @memberof StarknetMessage
     */
    starknetMessageType: StarknetMessageType;
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    rawData: string;
    /**
     * 
     * @type {EnrichedStarknetChain}
     * @memberof StarknetMessage
     */
    chain: EnrichedStarknetChain;
    /**
     * 
     * @type {EnrichedStarknetAddress}
     * @memberof StarknetMessage
     */
    sender: EnrichedStarknetAddress;
    /**
     * 
     * @type {string}
     * @memberof StarknetMessage
     */
    messageHash: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof StarknetMessage
     */
    starknetSignatures: Array<string>;
}


/**
 * 
 */
const StarknetMessageTypeEnum = {
    starknetMessage: 'starknet_message'
} as const;
type StarknetMessageTypeEnum = typeof StarknetMessageTypeEnum[keyof typeof StarknetMessageTypeEnum];

export function StarknetMessageFromJSONTyped(json: any, _ignoreDiscriminator: boolean): StarknetMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': json['managed_transaction_data'] == null ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'spamState': json['spam_state'] == null ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'signedExternally': json['signed_externally'] == null ? undefined : json['signed_externally'],
        'state': NonPushableTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(NonPushableTransactionStateChangeFromJSON)),
        'type': json['type'],
        'starknetMessageType': StarknetMessageTypeFromJSON(json['starknet_message_type']),
        'rawData': json['raw_data'],
        'chain': EnrichedStarknetChainFromJSON(json['chain']),
        'sender': EnrichedStarknetAddressFromJSON(json['sender']),
        'messageHash': json['message_hash'],
        'starknetSignatures': json['starknet_signatures'],
    };
}
