/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const PredictTransactionErrorType = {
    vaultNotFound: 'vault_not_found',
    invalidEvmMessage: 'invalid_evm_message',
    invalidEvmTransactionData: 'invalid_evm_transaction_data',
    revertedTransaction: 'reverted_transaction',
    transactionToNonContract: 'transaction_to_non_contract',
    vaultTypeMismatch: 'vault_type_mismatch',
    dustNotAllowed: 'dust_not_allowed',
    insecureKeyDerivation: 'insecure_key_derivation',
    missingSecretKeyOrRecentBlockhash: 'missing_secret_key_or_recent_blockhash',
    missingSecretKeyOrSignature: 'missing_secret_key_or_signature',
    revokeAllowanceGasLimitTooHigh: 'revoke_allowance_gas_limit_too_high',
    priorityFeeAlreadySet: 'priority_fee_already_set',
    quoteNotFound: 'quote_not_found'
} as const;
export type PredictTransactionErrorType = typeof PredictTransactionErrorType[keyof typeof PredictTransactionErrorType];


export function instanceOfPredictTransactionErrorType(value: any): boolean {
    for (const key in PredictTransactionErrorType) {
        if (Object.prototype.hasOwnProperty.call(PredictTransactionErrorType, key)) {
            if (PredictTransactionErrorType[key as keyof typeof PredictTransactionErrorType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function PredictTransactionErrorTypeFromJSON(json: any): PredictTransactionErrorType {
    return PredictTransactionErrorTypeFromJSONTyped(json, false);
}

export function PredictTransactionErrorTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictTransactionErrorType {
    return json as PredictTransactionErrorType;
}

export function PredictTransactionErrorTypeToJSON(value?: PredictTransactionErrorType | null): any {
    return value as any;
}

export function PredictTransactionErrorTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): PredictTransactionErrorType {
    return value as PredictTransactionErrorType;
}

