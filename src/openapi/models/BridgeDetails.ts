/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmBridgeEffect } from './EvmBridgeEffect';
import {
    EvmBridgeEffectFromJSON,
    EvmBridgeEffectFromJSONTyped,
    EvmBridgeEffectToJSON,
} from './EvmBridgeEffect';

/**
 * 
 * @export
 * @interface BridgeDetails
 */
export interface BridgeDetails {
    /**
     * 
     * @type {string}
     * @memberof BridgeDetails
     */
    type: BridgeDetailsTypeEnum;
    /**
     * 
     * @type {EvmBridgeEffect}
     * @memberof BridgeDetails
     */
    bridgeEffect: EvmBridgeEffect;
}


/**
 * @export
 */
export const BridgeDetailsTypeEnum = {
    crossChainBridge: 'cross_chain_bridge'
} as const;
export type BridgeDetailsTypeEnum = typeof BridgeDetailsTypeEnum[keyof typeof BridgeDetailsTypeEnum];


/**
 * Check if a given object implements the BridgeDetails interface.
 */
export function instanceOfBridgeDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "bridgeEffect" in value;

    return isInstance;
}

export function BridgeDetailsFromJSON(json: any): BridgeDetails {
    return BridgeDetailsFromJSONTyped(json, false);
}

export function BridgeDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BridgeDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'bridgeEffect': EvmBridgeEffectFromJSON(json['bridge_effect']),
    };
}

export function BridgeDetailsToJSON(value?: BridgeDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'bridge_effect': EvmBridgeEffectToJSON(value.bridgeEffect),
    };
}

