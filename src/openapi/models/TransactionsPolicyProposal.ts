/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionsPolicyProposalState } from './TransactionsPolicyProposalState';
import {
    TransactionsPolicyProposalStateFromJSON,
    TransactionsPolicyProposalStateFromJSONTyped,
    TransactionsPolicyProposalStateToJSON,
    TransactionsPolicyProposalStateToJSONTyped,
} from './TransactionsPolicyProposalState';
import type { ProposedDefaultAction } from './ProposedDefaultAction';
import {
    ProposedDefaultActionFromJSON,
    ProposedDefaultActionFromJSONTyped,
    ProposedDefaultActionToJSON,
    ProposedDefaultActionToJSONTyped,
} from './ProposedDefaultAction';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { ProposedTransactionRule } from './ProposedTransactionRule';
import {
    ProposedTransactionRuleFromJSON,
    ProposedTransactionRuleFromJSONTyped,
    ProposedTransactionRuleToJSON,
    ProposedTransactionRuleToJSONTyped,
} from './ProposedTransactionRule';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';
import type { VerificationRequest } from './VerificationRequest';
import {
    VerificationRequestFromJSON,
    VerificationRequestFromJSONTyped,
    VerificationRequestToJSON,
    VerificationRequestToJSONTyped,
} from './VerificationRequest';

/**
 * 
 * @export
 * @interface TransactionsPolicyProposal
 */
export interface TransactionsPolicyProposal {
    /**
     * 
     * @type {string}
     * @memberof TransactionsPolicyProposal
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof TransactionsPolicyProposal
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransactionsPolicyProposal
     */
    modifiedAt: Date;
    /**
     * 
     * @type {UserRef}
     * @memberof TransactionsPolicyProposal
     */
    createdBy: UserRef;
    /**
     * 
     * @type {UserRef}
     * @memberof TransactionsPolicyProposal
     */
    abortedBy?: UserRef;
    /**
     * 
     * @type {ProposedDefaultAction}
     * @memberof TransactionsPolicyProposal
     */
    defaultAction: ProposedDefaultAction;
    /**
     * 
     * @type {Array<ProposedTransactionRule>}
     * @memberof TransactionsPolicyProposal
     */
    rules: Array<ProposedTransactionRule>;
    /**
     * 
     * @type {TransactionsPolicyProposalState}
     * @memberof TransactionsPolicyProposal
     */
    state: TransactionsPolicyProposalState;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof TransactionsPolicyProposal
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {VerificationRequest}
     * @memberof TransactionsPolicyProposal
     */
    verificationRequest?: VerificationRequest;
}



/**
 * Check if a given object implements the TransactionsPolicyProposal interface.
 */
export function instanceOfTransactionsPolicyProposal(value: object): value is TransactionsPolicyProposal {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('defaultAction' in value) || value['defaultAction'] === undefined) return false;
    if (!('rules' in value) || value['rules'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function TransactionsPolicyProposalFromJSON(json: any): TransactionsPolicyProposal {
    return TransactionsPolicyProposalFromJSONTyped(json, false);
}

export function TransactionsPolicyProposalFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsPolicyProposal {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'createdBy': UserRefFromJSON(json['created_by']),
        'abortedBy': json['aborted_by'] == null ? undefined : UserRefFromJSON(json['aborted_by']),
        'defaultAction': ProposedDefaultActionFromJSON(json['default_action']),
        'rules': ((json['rules'] as Array<any>).map(ProposedTransactionRuleFromJSON)),
        'state': TransactionsPolicyProposalStateFromJSON(json['state']),
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'verificationRequest': json['verification_request'] == null ? undefined : VerificationRequestFromJSON(json['verification_request']),
    };
}

export function TransactionsPolicyProposalToJSON(json: any): TransactionsPolicyProposal {
    return TransactionsPolicyProposalToJSONTyped(json, false);
}

export function TransactionsPolicyProposalToJSONTyped(value?: TransactionsPolicyProposal | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'created_by': UserRefToJSON(value['createdBy']),
        'aborted_by': UserRefToJSON(value['abortedBy']),
        'default_action': ProposedDefaultActionToJSON(value['defaultAction']),
        'rules': ((value['rules'] as Array<any>).map(ProposedTransactionRuleToJSON)),
        'state': TransactionsPolicyProposalStateToJSON(value['state']),
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'verification_request': VerificationRequestToJSON(value['verificationRequest']),
    };
}

