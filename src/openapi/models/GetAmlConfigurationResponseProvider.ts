/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AmlConfigurationChainlaysis } from './AmlConfigurationChainlaysis';
import {
    instanceOfAmlConfigurationChainlaysis,
    AmlConfigurationChainlaysisFromJSON,
    AmlConfigurationChainlaysisFromJSONTyped,
    AmlConfigurationChainlaysisToJSON,
} from './AmlConfigurationChainlaysis';

/**
 * @type GetAmlConfigurationResponseProvider
 * 
 * @export
 */
export type GetAmlConfigurationResponseProvider = { type: 'chainalysis' } & AmlConfigurationChainlaysis;

export function GetAmlConfigurationResponseProviderFromJSON(json: any): GetAmlConfigurationResponseProvider {
    return GetAmlConfigurationResponseProviderFromJSONTyped(json, false);
}

export function GetAmlConfigurationResponseProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAmlConfigurationResponseProvider {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'chainalysis':
            return Object.assign({}, AmlConfigurationChainlaysisFromJSONTyped(json, true), { type: 'chainalysis' } as const);
        default:
            throw new Error(`No variant of GetAmlConfigurationResponseProvider exists with 'type=${json['type']}'`);
    }
}

export function GetAmlConfigurationResponseProviderToJSON(json: any): any {
    return GetAmlConfigurationResponseProviderToJSONTyped(json, false);
}

export function GetAmlConfigurationResponseProviderToJSONTyped(value?: GetAmlConfigurationResponseProvider | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'chainalysis':
            return Object.assign({}, AmlConfigurationChainlaysisToJSON(value), { type: 'chainalysis' } as const);
        default:
            throw new Error(`No variant of GetAmlConfigurationResponseProvider exists with 'type=${value['type']}'`);
    }

}

