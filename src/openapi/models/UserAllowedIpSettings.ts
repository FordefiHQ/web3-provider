/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserAllowedIpType } from './UserAllowedIpType';
import {
    UserAllowedIpTypeFromJSON,
    UserAllowedIpTypeFromJSONTyped,
    UserAllowedIpTypeToJSON,
    UserAllowedIpTypeToJSONTyped,
} from './UserAllowedIpType';

/**
 * 
 * @export
 * @interface UserAllowedIpSettings
 */
export interface UserAllowedIpSettings {
    /**
     * 
     * @type {UserAllowedIpType}
     * @memberof UserAllowedIpSettings
     */
    allowType: UserAllowedIpType;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserAllowedIpSettings
     */
    ipList?: Array<string>;
}



/**
 * Check if a given object implements the UserAllowedIpSettings interface.
 */
export function instanceOfUserAllowedIpSettings(value: object): value is UserAllowedIpSettings {
    if (!('allowType' in value) || value['allowType'] === undefined) return false;
    return true;
}

export function UserAllowedIpSettingsFromJSON(json: any): UserAllowedIpSettings {
    return UserAllowedIpSettingsFromJSONTyped(json, false);
}

export function UserAllowedIpSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAllowedIpSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'allowType': UserAllowedIpTypeFromJSON(json['allow_type']),
        'ipList': json['ip_list'] == null ? undefined : json['ip_list'],
    };
}

export function UserAllowedIpSettingsToJSON(json: any): UserAllowedIpSettings {
    return UserAllowedIpSettingsToJSONTyped(json, false);
}

export function UserAllowedIpSettingsToJSONTyped(value?: UserAllowedIpSettings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allow_type': UserAllowedIpTypeToJSON(value['allowType']),
        'ip_list': value['ipList'],
    };
}

