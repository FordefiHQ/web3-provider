/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TronChainUniqueId } from './TronChainUniqueId';
import {
    TronChainUniqueIdFromJSON,
    TronChainUniqueIdFromJSONTyped,
    TronChainUniqueIdToJSON,
    TronChainUniqueIdToJSONTyped,
} from './TronChainUniqueId';

/**
 * 
 * @export
 * @interface TronChain
 */
export interface TronChain {
    /**
     * 
     * @type {string}
     * @memberof TronChain
     */
    chainType: TronChainChainTypeEnum;
    /**
     * 
     * @type {TronChainUniqueId}
     * @memberof TronChain
     */
    uniqueId: TronChainUniqueId;
}


/**
 * @export
 */
export const TronChainChainTypeEnum = {
    tron: 'tron'
} as const;
export type TronChainChainTypeEnum = typeof TronChainChainTypeEnum[keyof typeof TronChainChainTypeEnum];


/**
 * Check if a given object implements the TronChain interface.
 */
export function instanceOfTronChain(value: object): value is TronChain {
    if (!('chainType' in value) || value['chainType'] === undefined) return false;
    if (!('uniqueId' in value) || value['uniqueId'] === undefined) return false;
    return true;
}

export function TronChainFromJSON(json: any): TronChain {
    return TronChainFromJSONTyped(json, false);
}

export function TronChainFromJSONTyped(json: any, ignoreDiscriminator: boolean): TronChain {
    if (json == null) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'uniqueId': TronChainUniqueIdFromJSON(json['unique_id']),
    };
}

export function TronChainToJSON(json: any): TronChain {
    return TronChainToJSONTyped(json, false);
}

export function TronChainToJSONTyped(value?: TronChain | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain_type': value['chainType'],
        'unique_id': TronChainUniqueIdToJSON(value['uniqueId']),
    };
}

