/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    DynamicGas,
    instanceOfDynamicGas,
    DynamicGasFromJSON,
    DynamicGasFromJSONTyped,
    DynamicGasToJSON,
} from './DynamicGas';
import {
    LegacyGas,
    instanceOfLegacyGas,
    LegacyGasFromJSON,
    LegacyGasFromJSONTyped,
    LegacyGasToJSON,
} from './LegacyGas';

/**
 * @type EvmTransactionGasSubmitted
 * 
 * @export
 */
export type EvmTransactionGasSubmitted = { type: 'dynamic' } & DynamicGas | { type: 'legacy' } & LegacyGas;

export function EvmTransactionGasSubmittedFromJSON(json: any): EvmTransactionGasSubmitted {
    return EvmTransactionGasSubmittedFromJSONTyped(json, false);
}

export function EvmTransactionGasSubmittedFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmTransactionGasSubmitted {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'dynamic':
            return {...DynamicGasFromJSONTyped(json, true), type: 'dynamic'};
        case 'legacy':
            return {...LegacyGasFromJSONTyped(json, true), type: 'legacy'};
        default:
            throw new Error(`No variant of EvmTransactionGasSubmitted exists with 'type=${json['type']}'`);
    }
}

export function EvmTransactionGasSubmittedToJSON(value?: EvmTransactionGasSubmitted | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'dynamic':
            return DynamicGasToJSON(value);
        case 'legacy':
            return LegacyGasToJSON(value);
        default:
            throw new Error(`No variant of EvmTransactionGasSubmitted exists with 'type=${value['type']}'`);
    }

}

