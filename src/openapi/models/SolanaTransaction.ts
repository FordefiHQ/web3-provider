/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
} from './ManagedTransactionData';
import type { SolanaCompiledInstruction } from './SolanaCompiledInstruction';
import {
    SolanaCompiledInstructionFromJSON,
} from './SolanaCompiledInstruction';
import type { PushableTransactionStateChange } from './PushableTransactionStateChange';
import {
    PushableTransactionStateChangeFromJSON,
} from './PushableTransactionStateChange';
import type { PushableTransactionState } from './PushableTransactionState';
import {
    PushableTransactionStateFromJSON,
} from './PushableTransactionState';
import type { SolanaTransactionAccount } from './SolanaTransactionAccount';
import {
    SolanaTransactionAccountFromJSON,
} from './SolanaTransactionAccount';
import type { AmlPolicyMatchIncoming } from './AmlPolicyMatchIncoming';
import {
    AmlPolicyMatchIncomingFromJSON,
} from './AmlPolicyMatchIncoming';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
} from './TransactionSpamState';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
} from './TransactionDirection';
import type { SolanaMessageVersion } from './SolanaMessageVersion';
import {
    SolanaMessageVersionFromJSON,
} from './SolanaMessageVersion';
import type { EnrichedSolanaAddress } from './EnrichedSolanaAddress';
import {
    EnrichedSolanaAddressFromJSON,
} from './EnrichedSolanaAddress';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
} from './Signature';
import type { SolanaTransactionResult } from './SolanaTransactionResult';
import {
    SolanaTransactionResultFromJSON,
} from './SolanaTransactionResult';
import type { EnrichedSolanaChain } from './EnrichedSolanaChain';
import {
    EnrichedSolanaChainFromJSON,
} from './EnrichedSolanaChain';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
} from './SimulationStatusResult';
import type { SolanaEnrichedMessageAddressTableLookup } from './SolanaEnrichedMessageAddressTableLookup';
import {
    SolanaEnrichedMessageAddressTableLookupFromJSON,
} from './SolanaEnrichedMessageAddressTableLookup';
import type { SolanaTransactionSolanaTransactionTypeDetails } from './SolanaTransactionSolanaTransactionTypeDetails';
import {
    SolanaTransactionSolanaTransactionTypeDetailsFromJSON,
} from './SolanaTransactionSolanaTransactionTypeDetails';
import type { SolanaBlockData } from './SolanaBlockData';
import {
    SolanaBlockDataFromJSON,
} from './SolanaBlockData';
import type { AmlResults } from './AmlResults';
import {
    AmlResultsFromJSON,
} from './AmlResults';

/**
 * 
 * @export
 * @interface SolanaTransaction
 */
export interface SolanaTransaction {
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof SolanaTransaction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SolanaTransaction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof SolanaTransaction
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof SolanaTransaction
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof SolanaTransaction
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof SolanaTransaction
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {boolean}
     * @memberof SolanaTransaction
     */
    signedExternally?: boolean;
    /**
     * 
     * @type {PushableTransactionState}
     * @memberof SolanaTransaction
     */
    state: PushableTransactionState;
    /**
     * 
     * @type {Array<PushableTransactionStateChange>}
     * @memberof SolanaTransaction
     */
    stateChanges: Array<PushableTransactionStateChange>;
    /**
     * 
     * @type {AmlResults}
     * @memberof SolanaTransaction
     */
    amlResults?: AmlResults;
    /**
     * 
     * @type {AmlPolicyMatchIncoming}
     * @memberof SolanaTransaction
     */
    incomingAmlPolicyMatch?: AmlPolicyMatchIncoming;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    type: SolanaTransactionTypeEnum;
    /**
     * 
     * @type {SolanaTransactionSolanaTransactionTypeDetails}
     * @memberof SolanaTransaction
     */
    solanaTransactionTypeDetails: SolanaTransactionSolanaTransactionTypeDetails;
    /**
     * 
     * @type {EnrichedSolanaChain}
     * @memberof SolanaTransaction
     */
    chain: EnrichedSolanaChain;
    /**
     * 
     * @type {SolanaMessageVersion}
     * @memberof SolanaTransaction
     */
    version: SolanaMessageVersion;
    /**
     * 
     * @type {Array<SolanaCompiledInstruction>}
     * @memberof SolanaTransaction
     */
    instructions: Array<SolanaCompiledInstruction>;
    /**
     * 
     * @type {Array<SolanaTransactionAccount>}
     * @memberof SolanaTransaction
     */
    accounts: Array<SolanaTransactionAccount>;
    /**
     * 
     * @type {Array<SolanaEnrichedMessageAddressTableLookup>}
     * @memberof SolanaTransaction
     */
    addressTableLookups: Array<SolanaEnrichedMessageAddressTableLookup>;
    /**
     * 
     * @type {EnrichedSolanaAddress}
     * @memberof SolanaTransaction
     */
    sender: EnrichedSolanaAddress;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    rawTransaction?: string;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    recentBlockhash?: string;
    /**
     * 
     * @type {SolanaBlockData}
     * @memberof SolanaTransaction
     */
    block?: SolanaBlockData;
    /**
     * 
     * @type {SolanaTransactionResult}
     * @memberof SolanaTransaction
     */
    expectedResult?: SolanaTransactionResult;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof SolanaTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {SolanaTransactionResult}
     * @memberof SolanaTransaction
     */
    minedResult?: SolanaTransactionResult;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    explorerUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SolanaTransaction
     */
    wasFeeSetInRequest: boolean;
}


/**
 * 
 */
const SolanaTransactionTypeEnum = {
    solanaTransaction: 'solana_transaction'
} as const;
type SolanaTransactionTypeEnum = typeof SolanaTransactionTypeEnum[keyof typeof SolanaTransactionTypeEnum];

export function SolanaTransactionFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SolanaTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': json['managed_transaction_data'] == null ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'spamState': json['spam_state'] == null ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'signedExternally': json['signed_externally'] == null ? undefined : json['signed_externally'],
        'state': PushableTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(PushableTransactionStateChangeFromJSON)),
        'amlResults': json['aml_results'] == null ? undefined : AmlResultsFromJSON(json['aml_results']),
        'incomingAmlPolicyMatch': json['incoming_aml_policy_match'] == null ? undefined : AmlPolicyMatchIncomingFromJSON(json['incoming_aml_policy_match']),
        'type': json['type'],
        'solanaTransactionTypeDetails': SolanaTransactionSolanaTransactionTypeDetailsFromJSON(json['solana_transaction_type_details']),
        'chain': EnrichedSolanaChainFromJSON(json['chain']),
        'version': SolanaMessageVersionFromJSON(json['version']),
        'instructions': ((json['instructions'] as Array<any>).map(SolanaCompiledInstructionFromJSON)),
        'accounts': ((json['accounts'] as Array<any>).map(SolanaTransactionAccountFromJSON)),
        'addressTableLookups': ((json['address_table_lookups'] as Array<any>).map(SolanaEnrichedMessageAddressTableLookupFromJSON)),
        'sender': EnrichedSolanaAddressFromJSON(json['sender']),
        'rawTransaction': json['raw_transaction'] == null ? undefined : json['raw_transaction'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'recentBlockhash': json['recent_blockhash'] == null ? undefined : json['recent_blockhash'],
        'block': json['block'] == null ? undefined : SolanaBlockDataFromJSON(json['block']),
        'expectedResult': json['expected_result'] == null ? undefined : SolanaTransactionResultFromJSON(json['expected_result']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'minedResult': json['mined_result'] == null ? undefined : SolanaTransactionResultFromJSON(json['mined_result']),
        'explorerUrl': json['explorer_url'] == null ? undefined : json['explorer_url'],
        'wasFeeSetInRequest': json['was_fee_set_in_request'],
    };
}
