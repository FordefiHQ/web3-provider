/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
    ManagedTransactionDataFromJSONTyped,
    ManagedTransactionDataToJSON,
    ManagedTransactionDataToJSONTyped,
} from './ManagedTransactionData';
import type { SolanaCompiledInstruction } from './SolanaCompiledInstruction';
import {
    SolanaCompiledInstructionFromJSON,
    SolanaCompiledInstructionFromJSONTyped,
    SolanaCompiledInstructionToJSON,
    SolanaCompiledInstructionToJSONTyped,
} from './SolanaCompiledInstruction';
import type { PushableTransactionStateChange } from './PushableTransactionStateChange';
import {
    PushableTransactionStateChangeFromJSON,
    PushableTransactionStateChangeFromJSONTyped,
    PushableTransactionStateChangeToJSON,
    PushableTransactionStateChangeToJSONTyped,
} from './PushableTransactionStateChange';
import type { PushableTransactionState } from './PushableTransactionState';
import {
    PushableTransactionStateFromJSON,
    PushableTransactionStateFromJSONTyped,
    PushableTransactionStateToJSON,
    PushableTransactionStateToJSONTyped,
} from './PushableTransactionState';
import type { SolanaTransactionAccount } from './SolanaTransactionAccount';
import {
    SolanaTransactionAccountFromJSON,
    SolanaTransactionAccountFromJSONTyped,
    SolanaTransactionAccountToJSON,
    SolanaTransactionAccountToJSONTyped,
} from './SolanaTransactionAccount';
import type { AmlPolicyMatchIncoming } from './AmlPolicyMatchIncoming';
import {
    AmlPolicyMatchIncomingFromJSON,
    AmlPolicyMatchIncomingFromJSONTyped,
    AmlPolicyMatchIncomingToJSON,
    AmlPolicyMatchIncomingToJSONTyped,
} from './AmlPolicyMatchIncoming';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
    TransactionSpamStateFromJSONTyped,
    TransactionSpamStateToJSON,
    TransactionSpamStateToJSONTyped,
} from './TransactionSpamState';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
    TransactionDirectionFromJSONTyped,
    TransactionDirectionToJSON,
    TransactionDirectionToJSONTyped,
} from './TransactionDirection';
import type { SolanaMessageVersion } from './SolanaMessageVersion';
import {
    SolanaMessageVersionFromJSON,
    SolanaMessageVersionFromJSONTyped,
    SolanaMessageVersionToJSON,
    SolanaMessageVersionToJSONTyped,
} from './SolanaMessageVersion';
import type { EnrichedSolanaAddress } from './EnrichedSolanaAddress';
import {
    EnrichedSolanaAddressFromJSON,
    EnrichedSolanaAddressFromJSONTyped,
    EnrichedSolanaAddressToJSON,
    EnrichedSolanaAddressToJSONTyped,
} from './EnrichedSolanaAddress';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
    SignatureFromJSONTyped,
    SignatureToJSON,
    SignatureToJSONTyped,
} from './Signature';
import type { SolanaTransactionResult } from './SolanaTransactionResult';
import {
    SolanaTransactionResultFromJSON,
    SolanaTransactionResultFromJSONTyped,
    SolanaTransactionResultToJSON,
    SolanaTransactionResultToJSONTyped,
} from './SolanaTransactionResult';
import type { EnrichedSolanaChain } from './EnrichedSolanaChain';
import {
    EnrichedSolanaChainFromJSON,
    EnrichedSolanaChainFromJSONTyped,
    EnrichedSolanaChainToJSON,
    EnrichedSolanaChainToJSONTyped,
} from './EnrichedSolanaChain';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
    SimulationStatusResultToJSONTyped,
} from './SimulationStatusResult';
import type { SolanaEnrichedMessageAddressTableLookup } from './SolanaEnrichedMessageAddressTableLookup';
import {
    SolanaEnrichedMessageAddressTableLookupFromJSON,
    SolanaEnrichedMessageAddressTableLookupFromJSONTyped,
    SolanaEnrichedMessageAddressTableLookupToJSON,
    SolanaEnrichedMessageAddressTableLookupToJSONTyped,
} from './SolanaEnrichedMessageAddressTableLookup';
import type { SolanaTransactionSolanaTransactionTypeDetails } from './SolanaTransactionSolanaTransactionTypeDetails';
import {
    SolanaTransactionSolanaTransactionTypeDetailsFromJSON,
    SolanaTransactionSolanaTransactionTypeDetailsFromJSONTyped,
    SolanaTransactionSolanaTransactionTypeDetailsToJSON,
    SolanaTransactionSolanaTransactionTypeDetailsToJSONTyped,
} from './SolanaTransactionSolanaTransactionTypeDetails';
import type { SolanaBlockData } from './SolanaBlockData';
import {
    SolanaBlockDataFromJSON,
    SolanaBlockDataFromJSONTyped,
    SolanaBlockDataToJSON,
    SolanaBlockDataToJSONTyped,
} from './SolanaBlockData';
import type { AmlResults } from './AmlResults';
import {
    AmlResultsFromJSON,
    AmlResultsFromJSONTyped,
    AmlResultsToJSON,
    AmlResultsToJSONTyped,
} from './AmlResults';

/**
 * 
 * @export
 * @interface SolanaTransaction
 */
export interface SolanaTransaction {
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof SolanaTransaction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SolanaTransaction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof SolanaTransaction
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof SolanaTransaction
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof SolanaTransaction
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof SolanaTransaction
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {boolean}
     * @memberof SolanaTransaction
     */
    signedExternally?: boolean;
    /**
     * 
     * @type {PushableTransactionState}
     * @memberof SolanaTransaction
     */
    state: PushableTransactionState;
    /**
     * 
     * @type {Array<PushableTransactionStateChange>}
     * @memberof SolanaTransaction
     */
    stateChanges: Array<PushableTransactionStateChange>;
    /**
     * 
     * @type {AmlResults}
     * @memberof SolanaTransaction
     */
    amlResults?: AmlResults;
    /**
     * 
     * @type {AmlPolicyMatchIncoming}
     * @memberof SolanaTransaction
     */
    incomingAmlPolicyMatch?: AmlPolicyMatchIncoming;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    type: SolanaTransactionTypeEnum;
    /**
     * 
     * @type {SolanaTransactionSolanaTransactionTypeDetails}
     * @memberof SolanaTransaction
     */
    solanaTransactionTypeDetails: SolanaTransactionSolanaTransactionTypeDetails;
    /**
     * 
     * @type {EnrichedSolanaChain}
     * @memberof SolanaTransaction
     */
    chain: EnrichedSolanaChain;
    /**
     * 
     * @type {SolanaMessageVersion}
     * @memberof SolanaTransaction
     */
    version: SolanaMessageVersion;
    /**
     * 
     * @type {Array<SolanaCompiledInstruction>}
     * @memberof SolanaTransaction
     */
    instructions: Array<SolanaCompiledInstruction>;
    /**
     * 
     * @type {Array<SolanaTransactionAccount>}
     * @memberof SolanaTransaction
     */
    accounts: Array<SolanaTransactionAccount>;
    /**
     * 
     * @type {Array<SolanaEnrichedMessageAddressTableLookup>}
     * @memberof SolanaTransaction
     */
    addressTableLookups: Array<SolanaEnrichedMessageAddressTableLookup>;
    /**
     * 
     * @type {EnrichedSolanaAddress}
     * @memberof SolanaTransaction
     */
    sender: EnrichedSolanaAddress;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    rawTransaction?: string;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    recentBlockhash?: string;
    /**
     * 
     * @type {SolanaBlockData}
     * @memberof SolanaTransaction
     */
    block?: SolanaBlockData;
    /**
     * 
     * @type {SolanaTransactionResult}
     * @memberof SolanaTransaction
     */
    expectedResult?: SolanaTransactionResult;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof SolanaTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {SolanaTransactionResult}
     * @memberof SolanaTransaction
     */
    minedResult?: SolanaTransactionResult;
    /**
     * 
     * @type {string}
     * @memberof SolanaTransaction
     */
    explorerUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SolanaTransaction
     */
    wasFeeSetInRequest: boolean;
}


/**
 * @export
 */
export const SolanaTransactionTypeEnum = {
    solanaTransaction: 'solana_transaction'
} as const;
export type SolanaTransactionTypeEnum = typeof SolanaTransactionTypeEnum[keyof typeof SolanaTransactionTypeEnum];


/**
 * Check if a given object implements the SolanaTransaction interface.
 */
export function instanceOfSolanaTransaction(value: object): value is SolanaTransaction {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('signatures' in value) || value['signatures'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('stateChanges' in value) || value['stateChanges'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('solanaTransactionTypeDetails' in value) || value['solanaTransactionTypeDetails'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('instructions' in value) || value['instructions'] === undefined) return false;
    if (!('accounts' in value) || value['accounts'] === undefined) return false;
    if (!('addressTableLookups' in value) || value['addressTableLookups'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('simulationStatusResult' in value) || value['simulationStatusResult'] === undefined) return false;
    if (!('wasFeeSetInRequest' in value) || value['wasFeeSetInRequest'] === undefined) return false;
    return true;
}

export function SolanaTransactionFromJSON(json: any): SolanaTransaction {
    return SolanaTransactionFromJSONTyped(json, false);
}

export function SolanaTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolanaTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': json['managed_transaction_data'] == null ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'spamState': json['spam_state'] == null ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'signedExternally': json['signed_externally'] == null ? undefined : json['signed_externally'],
        'state': PushableTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(PushableTransactionStateChangeFromJSON)),
        'amlResults': json['aml_results'] == null ? undefined : AmlResultsFromJSON(json['aml_results']),
        'incomingAmlPolicyMatch': json['incoming_aml_policy_match'] == null ? undefined : AmlPolicyMatchIncomingFromJSON(json['incoming_aml_policy_match']),
        'type': json['type'],
        'solanaTransactionTypeDetails': SolanaTransactionSolanaTransactionTypeDetailsFromJSON(json['solana_transaction_type_details']),
        'chain': EnrichedSolanaChainFromJSON(json['chain']),
        'version': SolanaMessageVersionFromJSON(json['version']),
        'instructions': ((json['instructions'] as Array<any>).map(SolanaCompiledInstructionFromJSON)),
        'accounts': ((json['accounts'] as Array<any>).map(SolanaTransactionAccountFromJSON)),
        'addressTableLookups': ((json['address_table_lookups'] as Array<any>).map(SolanaEnrichedMessageAddressTableLookupFromJSON)),
        'sender': EnrichedSolanaAddressFromJSON(json['sender']),
        'rawTransaction': json['raw_transaction'] == null ? undefined : json['raw_transaction'],
        'hash': json['hash'] == null ? undefined : json['hash'],
        'recentBlockhash': json['recent_blockhash'] == null ? undefined : json['recent_blockhash'],
        'block': json['block'] == null ? undefined : SolanaBlockDataFromJSON(json['block']),
        'expectedResult': json['expected_result'] == null ? undefined : SolanaTransactionResultFromJSON(json['expected_result']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'minedResult': json['mined_result'] == null ? undefined : SolanaTransactionResultFromJSON(json['mined_result']),
        'explorerUrl': json['explorer_url'] == null ? undefined : json['explorer_url'],
        'wasFeeSetInRequest': json['was_fee_set_in_request'],
    };
}

export function SolanaTransactionToJSON(json: any): SolanaTransaction {
    return SolanaTransactionToJSONTyped(json, false);
}

export function SolanaTransactionToJSONTyped(value?: SolanaTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'managed_transaction_data': ManagedTransactionDataToJSON(value['managedTransactionData']),
        'signatures': ((value['signatures'] as Array<any>).map(SignatureToJSON)),
        'note': value['note'],
        'spam_state': TransactionSpamStateToJSON(value['spamState']),
        'direction': TransactionDirectionToJSON(value['direction']),
        'signed_externally': value['signedExternally'],
        'state': PushableTransactionStateToJSON(value['state']),
        'state_changes': ((value['stateChanges'] as Array<any>).map(PushableTransactionStateChangeToJSON)),
        'aml_results': AmlResultsToJSON(value['amlResults']),
        'incoming_aml_policy_match': AmlPolicyMatchIncomingToJSON(value['incomingAmlPolicyMatch']),
        'type': value['type'],
        'solana_transaction_type_details': SolanaTransactionSolanaTransactionTypeDetailsToJSON(value['solanaTransactionTypeDetails']),
        'chain': EnrichedSolanaChainToJSON(value['chain']),
        'version': SolanaMessageVersionToJSON(value['version']),
        'instructions': ((value['instructions'] as Array<any>).map(SolanaCompiledInstructionToJSON)),
        'accounts': ((value['accounts'] as Array<any>).map(SolanaTransactionAccountToJSON)),
        'address_table_lookups': ((value['addressTableLookups'] as Array<any>).map(SolanaEnrichedMessageAddressTableLookupToJSON)),
        'sender': EnrichedSolanaAddressToJSON(value['sender']),
        'raw_transaction': value['rawTransaction'],
        'hash': value['hash'],
        'recent_blockhash': value['recentBlockhash'],
        'block': SolanaBlockDataToJSON(value['block']),
        'expected_result': SolanaTransactionResultToJSON(value['expectedResult']),
        'simulation_status_result': SimulationStatusResultToJSON(value['simulationStatusResult']),
        'mined_result': SolanaTransactionResultToJSON(value['minedResult']),
        'explorer_url': value['explorerUrl'],
        'was_fee_set_in_request': value['wasFeeSetInRequest'],
    };
}

