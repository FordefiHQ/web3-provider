/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EvmDataRequestBase64
 */
export interface EvmDataRequestBase64 {
    /**
     * 
     * @type {string}
     * @memberof EvmDataRequestBase64
     */
    type: EvmDataRequestBase64TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EvmDataRequestBase64
     */
    rawData: string;
}


/**
 * @export
 */
export const EvmDataRequestBase64TypeEnum = {
    base64: 'base64'
} as const;
export type EvmDataRequestBase64TypeEnum = typeof EvmDataRequestBase64TypeEnum[keyof typeof EvmDataRequestBase64TypeEnum];


/**
 * Check if a given object implements the EvmDataRequestBase64 interface.
 */
export function instanceOfEvmDataRequestBase64(value: object): value is EvmDataRequestBase64 {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('rawData' in value) || value['rawData'] === undefined) return false;
    return true;
}

export function EvmDataRequestBase64FromJSON(json: any): EvmDataRequestBase64 {
    return EvmDataRequestBase64FromJSONTyped(json, false);
}

export function EvmDataRequestBase64FromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmDataRequestBase64 {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'rawData': json['raw_data'],
    };
}

export function EvmDataRequestBase64ToJSON(json: any): EvmDataRequestBase64 {
    return EvmDataRequestBase64ToJSONTyped(json, false);
}

export function EvmDataRequestBase64ToJSONTyped(value?: EvmDataRequestBase64 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'raw_data': value['rawData'],
    };
}

