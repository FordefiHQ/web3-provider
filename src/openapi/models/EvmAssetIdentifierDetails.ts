/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EvmErc1155AssetIdentifierRequest } from './EvmErc1155AssetIdentifierRequest';
import {
    instanceOfEvmErc1155AssetIdentifierRequest,
    EvmErc1155AssetIdentifierRequestFromJSON,
    EvmErc1155AssetIdentifierRequestFromJSONTyped,
    EvmErc1155AssetIdentifierRequestToJSON,
} from './EvmErc1155AssetIdentifierRequest';
import type { EvmErc20AssetIdentifierRequest } from './EvmErc20AssetIdentifierRequest';
import {
    instanceOfEvmErc20AssetIdentifierRequest,
    EvmErc20AssetIdentifierRequestFromJSON,
    EvmErc20AssetIdentifierRequestFromJSONTyped,
    EvmErc20AssetIdentifierRequestToJSON,
} from './EvmErc20AssetIdentifierRequest';
import type { EvmErc721AssetIdentifierRequest } from './EvmErc721AssetIdentifierRequest';
import {
    instanceOfEvmErc721AssetIdentifierRequest,
    EvmErc721AssetIdentifierRequestFromJSON,
    EvmErc721AssetIdentifierRequestFromJSONTyped,
    EvmErc721AssetIdentifierRequestToJSON,
} from './EvmErc721AssetIdentifierRequest';
import type { EvmHyperLiquidAssetIdentifierRequest } from './EvmHyperLiquidAssetIdentifierRequest';
import {
    instanceOfEvmHyperLiquidAssetIdentifierRequest,
    EvmHyperLiquidAssetIdentifierRequestFromJSON,
    EvmHyperLiquidAssetIdentifierRequestFromJSONTyped,
    EvmHyperLiquidAssetIdentifierRequestToJSON,
} from './EvmHyperLiquidAssetIdentifierRequest';
import type { EvmNativeAssetIdentifierRequest } from './EvmNativeAssetIdentifierRequest';
import {
    instanceOfEvmNativeAssetIdentifierRequest,
    EvmNativeAssetIdentifierRequestFromJSON,
    EvmNativeAssetIdentifierRequestFromJSONTyped,
    EvmNativeAssetIdentifierRequestToJSON,
} from './EvmNativeAssetIdentifierRequest';

/**
 * @type EvmAssetIdentifierDetails
 * 
 * @export
 */
export type EvmAssetIdentifierDetails = { type: 'erc1155' } & EvmErc1155AssetIdentifierRequest | { type: 'erc20' } & EvmErc20AssetIdentifierRequest | { type: 'erc721' } & EvmErc721AssetIdentifierRequest | { type: 'hyperliquid' } & EvmHyperLiquidAssetIdentifierRequest | { type: 'native' } & EvmNativeAssetIdentifierRequest;

export function EvmAssetIdentifierDetailsFromJSON(json: any): EvmAssetIdentifierDetails {
    return EvmAssetIdentifierDetailsFromJSONTyped(json, false);
}

export function EvmAssetIdentifierDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmAssetIdentifierDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'erc1155':
            return Object.assign({}, EvmErc1155AssetIdentifierRequestFromJSONTyped(json, true), { type: 'erc1155' } as const);
        case 'erc20':
            return Object.assign({}, EvmErc20AssetIdentifierRequestFromJSONTyped(json, true), { type: 'erc20' } as const);
        case 'erc721':
            return Object.assign({}, EvmErc721AssetIdentifierRequestFromJSONTyped(json, true), { type: 'erc721' } as const);
        case 'hyperliquid':
            return Object.assign({}, EvmHyperLiquidAssetIdentifierRequestFromJSONTyped(json, true), { type: 'hyperliquid' } as const);
        case 'native':
            return Object.assign({}, EvmNativeAssetIdentifierRequestFromJSONTyped(json, true), { type: 'native' } as const);
        default:
            throw new Error(`No variant of EvmAssetIdentifierDetails exists with 'type=${json['type']}'`);
    }
}

export function EvmAssetIdentifierDetailsToJSON(json: any): any {
    return EvmAssetIdentifierDetailsToJSONTyped(json, false);
}

export function EvmAssetIdentifierDetailsToJSONTyped(value?: EvmAssetIdentifierDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'erc1155':
            return Object.assign({}, EvmErc1155AssetIdentifierRequestToJSON(value), { type: 'erc1155' } as const);
        case 'erc20':
            return Object.assign({}, EvmErc20AssetIdentifierRequestToJSON(value), { type: 'erc20' } as const);
        case 'erc721':
            return Object.assign({}, EvmErc721AssetIdentifierRequestToJSON(value), { type: 'erc721' } as const);
        case 'hyperliquid':
            return Object.assign({}, EvmHyperLiquidAssetIdentifierRequestToJSON(value), { type: 'hyperliquid' } as const);
        case 'native':
            return Object.assign({}, EvmNativeAssetIdentifierRequestToJSON(value), { type: 'native' } as const);
        default:
            throw new Error(`No variant of EvmAssetIdentifierDetails exists with 'type=${value['type']}'`);
    }

}

