/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedSuiAddress } from './EnrichedSuiAddress';
import {
    EnrichedSuiAddressFromJSON,
    EnrichedSuiAddressFromJSONTyped,
    EnrichedSuiAddressToJSON,
    EnrichedSuiAddressToJSONTyped,
} from './EnrichedSuiAddress';
import type { AmlPolicyMatchOutgoing } from './AmlPolicyMatchOutgoing';
import {
    AmlPolicyMatchOutgoingFromJSON,
    AmlPolicyMatchOutgoingFromJSONTyped,
    AmlPolicyMatchOutgoingToJSON,
    AmlPolicyMatchOutgoingToJSONTyped,
} from './AmlPolicyMatchOutgoing';
import type { TransactionRisk } from './TransactionRisk';
import {
    TransactionRiskFromJSON,
    TransactionRiskFromJSONTyped,
    TransactionRiskToJSON,
    TransactionRiskToJSONTyped,
} from './TransactionRisk';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { PolicyMatch } from './PolicyMatch';
import {
    PolicyMatchFromJSON,
    PolicyMatchFromJSONTyped,
    PolicyMatchToJSON,
    PolicyMatchToJSONTyped,
} from './PolicyMatch';
import type { EnrichedSuiChain } from './EnrichedSuiChain';
import {
    EnrichedSuiChainFromJSON,
    EnrichedSuiChainFromJSONTyped,
    EnrichedSuiChainToJSON,
    EnrichedSuiChainToJSONTyped,
} from './EnrichedSuiChain';
import type { SuiMessageType } from './SuiMessageType';
import {
    SuiMessageTypeFromJSON,
    SuiMessageTypeFromJSONTyped,
    SuiMessageTypeToJSON,
    SuiMessageTypeToJSONTyped,
} from './SuiMessageType';

/**
 * 
 * @export
 * @interface PredictedSuiMessage
 */
export interface PredictedSuiMessage {
    /**
     * 
     * @type {AmlPolicyMatchOutgoing}
     * @memberof PredictedSuiMessage
     */
    amlPolicyMatch?: AmlPolicyMatchOutgoing;
    /**
     * 
     * @type {PolicyMatch}
     * @memberof PredictedSuiMessage
     */
    policyMatch: PolicyMatch;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof PredictedSuiMessage
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {Array<TransactionRisk>}
     * @memberof PredictedSuiMessage
     */
    risks: Array<TransactionRisk>;
    /**
     * 
     * @type {string}
     * @memberof PredictedSuiMessage
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof PredictedSuiMessage
     */
    type: PredictedSuiMessageTypeEnum;
    /**
     * 
     * @type {EnrichedSuiChain}
     * @memberof PredictedSuiMessage
     */
    chain: EnrichedSuiChain;
    /**
     * 
     * @type {EnrichedSuiAddress}
     * @memberof PredictedSuiMessage
     */
    sender: EnrichedSuiAddress;
    /**
     * 
     * @type {SuiMessageType}
     * @memberof PredictedSuiMessage
     */
    suiMessageType: SuiMessageType;
    /**
     * 
     * @type {string}
     * @memberof PredictedSuiMessage
     */
    messageToDisplay: string;
}


/**
 * @export
 */
export const PredictedSuiMessageTypeEnum = {
    suiMessage: 'sui_message'
} as const;
export type PredictedSuiMessageTypeEnum = typeof PredictedSuiMessageTypeEnum[keyof typeof PredictedSuiMessageTypeEnum];


/**
 * Check if a given object implements the PredictedSuiMessage interface.
 */
export function instanceOfPredictedSuiMessage(value: object): value is PredictedSuiMessage {
    if (!('policyMatch' in value) || value['policyMatch'] === undefined) return false;
    if (!('risks' in value) || value['risks'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    if (!('suiMessageType' in value) || value['suiMessageType'] === undefined) return false;
    if (!('messageToDisplay' in value) || value['messageToDisplay'] === undefined) return false;
    return true;
}

export function PredictedSuiMessageFromJSON(json: any): PredictedSuiMessage {
    return PredictedSuiMessageFromJSONTyped(json, false);
}

export function PredictedSuiMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedSuiMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'amlPolicyMatch': json['aml_policy_match'] == null ? undefined : AmlPolicyMatchOutgoingFromJSON(json['aml_policy_match']),
        'policyMatch': PolicyMatchFromJSON(json['policy_match']),
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'risks': ((json['risks'] as Array<any>).map(TransactionRiskFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'type': json['type'],
        'chain': EnrichedSuiChainFromJSON(json['chain']),
        'sender': EnrichedSuiAddressFromJSON(json['sender']),
        'suiMessageType': SuiMessageTypeFromJSON(json['sui_message_type']),
        'messageToDisplay': json['message_to_display'],
    };
}

export function PredictedSuiMessageToJSON(json: any): PredictedSuiMessage {
    return PredictedSuiMessageToJSONTyped(json, false);
}

export function PredictedSuiMessageToJSONTyped(value?: PredictedSuiMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aml_policy_match': AmlPolicyMatchOutgoingToJSON(value['amlPolicyMatch']),
        'policy_match': PolicyMatchToJSON(value['policyMatch']),
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'risks': ((value['risks'] as Array<any>).map(TransactionRiskToJSON)),
        'note': value['note'],
        'type': value['type'],
        'chain': EnrichedSuiChainToJSON(value['chain']),
        'sender': EnrichedSuiAddressToJSON(value['sender']),
        'sui_message_type': SuiMessageTypeToJSON(value['suiMessageType']),
        'message_to_display': value['messageToDisplay'],
    };
}

