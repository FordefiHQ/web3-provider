/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { BinaryHashPayload } from './BinaryHashPayload';
import {
    instanceOfBinaryHashPayload,
    BinaryHashPayloadFromJSON,
    BinaryHashPayloadFromJSONTyped,
    BinaryHashPayloadToJSON,
} from './BinaryHashPayload';
import type { IntegerHashPayload } from './IntegerHashPayload';
import {
    instanceOfIntegerHashPayload,
    IntegerHashPayloadFromJSON,
    IntegerHashPayloadFromJSONTyped,
    IntegerHashPayloadToJSON,
} from './IntegerHashPayload';

/**
 * @type CreateBlackBoxSignatureRequestDetails
 * 
 * @export
 */
export type CreateBlackBoxSignatureRequestDetails = { format: 'hash_binary' } & BinaryHashPayload | { format: 'hash_integer' } & IntegerHashPayload;

export function CreateBlackBoxSignatureRequestDetailsFromJSON(json: any): CreateBlackBoxSignatureRequestDetails {
    return CreateBlackBoxSignatureRequestDetailsFromJSONTyped(json, false);
}

export function CreateBlackBoxSignatureRequestDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBlackBoxSignatureRequestDetails {
    if (json == null) {
        return json;
    }
    switch (json['format']) {
        case 'hash_binary':
            return Object.assign({}, BinaryHashPayloadFromJSONTyped(json, true), { format: 'hash_binary' } as const);
        case 'hash_integer':
            return Object.assign({}, IntegerHashPayloadFromJSONTyped(json, true), { format: 'hash_integer' } as const);
        default:
            throw new Error(`No variant of CreateBlackBoxSignatureRequestDetails exists with 'format=${json['format']}'`);
    }
}

export function CreateBlackBoxSignatureRequestDetailsToJSON(json: any): any {
    return CreateBlackBoxSignatureRequestDetailsToJSONTyped(json, false);
}

export function CreateBlackBoxSignatureRequestDetailsToJSONTyped(value?: CreateBlackBoxSignatureRequestDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['format']) {
        case 'hash_binary':
            return Object.assign({}, BinaryHashPayloadToJSON(value), { format: 'hash_binary' } as const);
        case 'hash_integer':
            return Object.assign({}, IntegerHashPayloadToJSON(value), { format: 'hash_integer' } as const);
        default:
            throw new Error(`No variant of CreateBlackBoxSignatureRequestDetails exists with 'format=${value['format']}'`);
    }

}

