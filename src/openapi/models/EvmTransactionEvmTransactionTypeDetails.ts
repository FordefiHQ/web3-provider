/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AllowanceDetails } from './AllowanceDetails';
import {
    instanceOfAllowanceDetails,
    AllowanceDetailsFromJSON,
    AllowanceDetailsFromJSONTyped,
    AllowanceDetailsToJSON,
} from './AllowanceDetails';
import type { BridgeDetails } from './BridgeDetails';
import {
    instanceOfBridgeDetails,
    BridgeDetailsFromJSON,
    BridgeDetailsFromJSONTyped,
    BridgeDetailsToJSON,
} from './BridgeDetails';
import type { ContractCallDetails } from './ContractCallDetails';
import {
    instanceOfContractCallDetails,
    ContractCallDetailsFromJSON,
    ContractCallDetailsFromJSONTyped,
    ContractCallDetailsToJSON,
} from './ContractCallDetails';
import type { ContractDeploymentDetails } from './ContractDeploymentDetails';
import {
    instanceOfContractDeploymentDetails,
    ContractDeploymentDetailsFromJSON,
    ContractDeploymentDetailsFromJSONTyped,
    ContractDeploymentDetailsToJSON,
} from './ContractDeploymentDetails';
import type { EvmNativeTransferDetails } from './EvmNativeTransferDetails';
import {
    instanceOfEvmNativeTransferDetails,
    EvmNativeTransferDetailsFromJSON,
    EvmNativeTransferDetailsFromJSONTyped,
    EvmNativeTransferDetailsToJSON,
} from './EvmNativeTransferDetails';
import type { TokenTransferDetails } from './TokenTransferDetails';
import {
    instanceOfTokenTransferDetails,
    TokenTransferDetailsFromJSON,
    TokenTransferDetailsFromJSONTyped,
    TokenTransferDetailsToJSON,
} from './TokenTransferDetails';

/**
 * @type EvmTransactionEvmTransactionTypeDetails
 * 
 * @export
 */
export type EvmTransactionEvmTransactionTypeDetails = { type: 'allowance' } & AllowanceDetails | { type: 'contract_call' } & ContractCallDetails | { type: 'contract_deployment' } & ContractDeploymentDetails | { type: 'cross_chain_bridge' } & BridgeDetails | { type: 'native_transfer' } & EvmNativeTransferDetails | { type: 'token_transfer' } & TokenTransferDetails;

export function EvmTransactionEvmTransactionTypeDetailsFromJSON(json: any): EvmTransactionEvmTransactionTypeDetails {
    return EvmTransactionEvmTransactionTypeDetailsFromJSONTyped(json, false);
}

export function EvmTransactionEvmTransactionTypeDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmTransactionEvmTransactionTypeDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'allowance':
            return Object.assign({}, AllowanceDetailsFromJSONTyped(json, true), { type: 'allowance' } as const);
        case 'contract_call':
            return Object.assign({}, ContractCallDetailsFromJSONTyped(json, true), { type: 'contract_call' } as const);
        case 'contract_deployment':
            return Object.assign({}, ContractDeploymentDetailsFromJSONTyped(json, true), { type: 'contract_deployment' } as const);
        case 'cross_chain_bridge':
            return Object.assign({}, BridgeDetailsFromJSONTyped(json, true), { type: 'cross_chain_bridge' } as const);
        case 'native_transfer':
            return Object.assign({}, EvmNativeTransferDetailsFromJSONTyped(json, true), { type: 'native_transfer' } as const);
        case 'token_transfer':
            return Object.assign({}, TokenTransferDetailsFromJSONTyped(json, true), { type: 'token_transfer' } as const);
        default:
            throw new Error(`No variant of EvmTransactionEvmTransactionTypeDetails exists with 'type=${json['type']}'`);
    }
}

export function EvmTransactionEvmTransactionTypeDetailsToJSON(json: any): any {
    return EvmTransactionEvmTransactionTypeDetailsToJSONTyped(json, false);
}

export function EvmTransactionEvmTransactionTypeDetailsToJSONTyped(value?: EvmTransactionEvmTransactionTypeDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'allowance':
            return Object.assign({}, AllowanceDetailsToJSON(value), { type: 'allowance' } as const);
        case 'contract_call':
            return Object.assign({}, ContractCallDetailsToJSON(value), { type: 'contract_call' } as const);
        case 'contract_deployment':
            return Object.assign({}, ContractDeploymentDetailsToJSON(value), { type: 'contract_deployment' } as const);
        case 'cross_chain_bridge':
            return Object.assign({}, BridgeDetailsToJSON(value), { type: 'cross_chain_bridge' } as const);
        case 'native_transfer':
            return Object.assign({}, EvmNativeTransferDetailsToJSON(value), { type: 'native_transfer' } as const);
        case 'token_transfer':
            return Object.assign({}, TokenTransferDetailsToJSON(value), { type: 'token_transfer' } as const);
        default:
            throw new Error(`No variant of EvmTransactionEvmTransactionTypeDetails exists with 'type=${value['type']}'`);
    }

}

