/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AmlPolicyMatchOutgoing } from './AmlPolicyMatchOutgoing';
import {
    AmlPolicyMatchOutgoingFromJSON,
    AmlPolicyMatchOutgoingFromJSONTyped,
    AmlPolicyMatchOutgoingToJSON,
    AmlPolicyMatchOutgoingToJSONTyped,
} from './AmlPolicyMatchOutgoing';
import type { TransactionRisk } from './TransactionRisk';
import {
    TransactionRiskFromJSON,
    TransactionRiskFromJSONTyped,
    TransactionRiskToJSON,
    TransactionRiskToJSONTyped,
} from './TransactionRisk';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
    SimulationStatusResultToJSONTyped,
} from './SimulationStatusResult';
import type { PolicyMatch } from './PolicyMatch';
import {
    PolicyMatchFromJSON,
    PolicyMatchFromJSONTyped,
    PolicyMatchToJSON,
    PolicyMatchToJSONTyped,
} from './PolicyMatch';
import type { ExchangeTransactionExchangeTransactionTypeDetails } from './ExchangeTransactionExchangeTransactionTypeDetails';
import {
    ExchangeTransactionExchangeTransactionTypeDetailsFromJSON,
    ExchangeTransactionExchangeTransactionTypeDetailsFromJSONTyped,
    ExchangeTransactionExchangeTransactionTypeDetailsToJSON,
    ExchangeTransactionExchangeTransactionTypeDetailsToJSONTyped,
} from './ExchangeTransactionExchangeTransactionTypeDetails';
import type { ExchangeTransactionResult } from './ExchangeTransactionResult';
import {
    ExchangeTransactionResultFromJSON,
    ExchangeTransactionResultFromJSONTyped,
    ExchangeTransactionResultToJSON,
    ExchangeTransactionResultToJSONTyped,
} from './ExchangeTransactionResult';

/**
 * 
 * @export
 * @interface PredictedExchangeTransaction
 */
export interface PredictedExchangeTransaction {
    /**
     * 
     * @type {AmlPolicyMatchOutgoing}
     * @memberof PredictedExchangeTransaction
     */
    amlPolicyMatch?: AmlPolicyMatchOutgoing;
    /**
     * 
     * @type {PolicyMatch}
     * @memberof PredictedExchangeTransaction
     */
    policyMatch: PolicyMatch;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof PredictedExchangeTransaction
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {Array<TransactionRisk>}
     * @memberof PredictedExchangeTransaction
     */
    risks: Array<TransactionRisk>;
    /**
     * 
     * @type {string}
     * @memberof PredictedExchangeTransaction
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof PredictedExchangeTransaction
     */
    type: PredictedExchangeTransactionTypeEnum;
    /**
     * 
     * @type {ExchangeTransactionResult}
     * @memberof PredictedExchangeTransaction
     */
    expectedResult: ExchangeTransactionResult;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof PredictedExchangeTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {ExchangeTransactionExchangeTransactionTypeDetails}
     * @memberof PredictedExchangeTransaction
     */
    exchangeTransactionTypeDetails: ExchangeTransactionExchangeTransactionTypeDetails;
}


/**
 * @export
 */
export const PredictedExchangeTransactionTypeEnum = {
    exchangeTransaction: 'exchange_transaction'
} as const;
export type PredictedExchangeTransactionTypeEnum = typeof PredictedExchangeTransactionTypeEnum[keyof typeof PredictedExchangeTransactionTypeEnum];


/**
 * Check if a given object implements the PredictedExchangeTransaction interface.
 */
export function instanceOfPredictedExchangeTransaction(value: object): value is PredictedExchangeTransaction {
    if (!('policyMatch' in value) || value['policyMatch'] === undefined) return false;
    if (!('risks' in value) || value['risks'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('expectedResult' in value) || value['expectedResult'] === undefined) return false;
    if (!('simulationStatusResult' in value) || value['simulationStatusResult'] === undefined) return false;
    if (!('exchangeTransactionTypeDetails' in value) || value['exchangeTransactionTypeDetails'] === undefined) return false;
    return true;
}

export function PredictedExchangeTransactionFromJSON(json: any): PredictedExchangeTransaction {
    return PredictedExchangeTransactionFromJSONTyped(json, false);
}

export function PredictedExchangeTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedExchangeTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'amlPolicyMatch': json['aml_policy_match'] == null ? undefined : AmlPolicyMatchOutgoingFromJSON(json['aml_policy_match']),
        'policyMatch': PolicyMatchFromJSON(json['policy_match']),
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'risks': ((json['risks'] as Array<any>).map(TransactionRiskFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
        'type': json['type'],
        'expectedResult': ExchangeTransactionResultFromJSON(json['expected_result']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'exchangeTransactionTypeDetails': ExchangeTransactionExchangeTransactionTypeDetailsFromJSON(json['exchange_transaction_type_details']),
    };
}

export function PredictedExchangeTransactionToJSON(json: any): PredictedExchangeTransaction {
    return PredictedExchangeTransactionToJSONTyped(json, false);
}

export function PredictedExchangeTransactionToJSONTyped(value?: PredictedExchangeTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aml_policy_match': AmlPolicyMatchOutgoingToJSON(value['amlPolicyMatch']),
        'policy_match': PolicyMatchToJSON(value['policyMatch']),
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'risks': ((value['risks'] as Array<any>).map(TransactionRiskToJSON)),
        'note': value['note'],
        'type': value['type'],
        'expected_result': ExchangeTransactionResultToJSON(value['expectedResult']),
        'simulation_status_result': SimulationStatusResultToJSON(value['simulationStatusResult']),
        'exchange_transaction_type_details': ExchangeTransactionExchangeTransactionTypeDetailsToJSON(value['exchangeTransactionTypeDetails']),
    };
}

