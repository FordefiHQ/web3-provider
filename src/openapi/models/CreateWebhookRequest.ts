/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebhookResourceType } from './WebhookResourceType';
import {
    WebhookResourceTypeFromJSON,
    WebhookResourceTypeFromJSONTyped,
    WebhookResourceTypeToJSON,
} from './WebhookResourceType';

/**
 * 
 * @export
 * @interface CreateWebhookRequest
 */
export interface CreateWebhookRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequest
     */
    name: string;
    /**
     * 
     * @type {Array<WebhookResourceType>}
     * @memberof CreateWebhookRequest
     */
    events: Array<WebhookResourceType>;
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequest
     */
    url: string;
}

/**
 * Check if a given object implements the CreateWebhookRequest interface.
 */
export function instanceOfCreateWebhookRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "events" in value;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function CreateWebhookRequestFromJSON(json: any): CreateWebhookRequest {
    return CreateWebhookRequestFromJSONTyped(json, false);
}

export function CreateWebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateWebhookRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'events': ((json['events'] as Array<any>).map(WebhookResourceTypeFromJSON)),
        'url': json['url'],
    };
}

export function CreateWebhookRequestToJSON(value?: CreateWebhookRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'events': ((value.events as Array<any>).map(WebhookResourceTypeToJSON)),
        'url': value.url,
    };
}

