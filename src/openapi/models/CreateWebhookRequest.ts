/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookResourceType } from './WebhookResourceType';
import {
    WebhookResourceTypeFromJSON,
    WebhookResourceTypeFromJSONTyped,
    WebhookResourceTypeToJSON,
    WebhookResourceTypeToJSONTyped,
} from './WebhookResourceType';

/**
 * 
 * @export
 * @interface CreateWebhookRequest
 */
export interface CreateWebhookRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequest
     */
    name: string;
    /**
     * 
     * @type {Array<WebhookResourceType>}
     * @memberof CreateWebhookRequest
     */
    events: Array<WebhookResourceType>;
    /**
     * 
     * @type {string}
     * @memberof CreateWebhookRequest
     */
    url: string;
}

/**
 * Check if a given object implements the CreateWebhookRequest interface.
 */
export function instanceOfCreateWebhookRequest(value: object): value is CreateWebhookRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('events' in value) || value['events'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function CreateWebhookRequestFromJSON(json: any): CreateWebhookRequest {
    return CreateWebhookRequestFromJSONTyped(json, false);
}

export function CreateWebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateWebhookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'events': ((json['events'] as Array<any>).map(WebhookResourceTypeFromJSON)),
        'url': json['url'],
    };
}

export function CreateWebhookRequestToJSON(json: any): CreateWebhookRequest {
    return CreateWebhookRequestToJSONTyped(json, false);
}

export function CreateWebhookRequestToJSONTyped(value?: CreateWebhookRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'events': ((value['events'] as Array<any>).map(WebhookResourceTypeToJSON)),
        'url': value['url'],
    };
}

