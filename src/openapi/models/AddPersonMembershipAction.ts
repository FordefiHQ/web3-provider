/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PersonRef } from './PersonRef';
import {
    PersonRefFromJSON,
    PersonRefFromJSONTyped,
    PersonRefToJSON,
    PersonRefToJSONTyped,
} from './PersonRef';
import type { ActionSigningRequest } from './ActionSigningRequest';
import {
    ActionSigningRequestFromJSON,
    ActionSigningRequestFromJSONTyped,
    ActionSigningRequestToJSON,
    ActionSigningRequestToJSONTyped,
} from './ActionSigningRequest';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';
import type { UserGroupRef } from './UserGroupRef';
import {
    UserGroupRefFromJSON,
    UserGroupRefFromJSONTyped,
    UserGroupRefToJSON,
    UserGroupRefToJSONTyped,
} from './UserGroupRef';

/**
 * 
 * @export
 * @interface AddPersonMembershipAction
 */
export interface AddPersonMembershipAction {
    /**
     * 
     * @type {string}
     * @memberof AddPersonMembershipAction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof AddPersonMembershipAction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AddPersonMembershipAction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AddPersonMembershipAction
     */
    isPending: boolean;
    /**
     * 
     * @type {string}
     * @memberof AddPersonMembershipAction
     */
    type: AddPersonMembershipActionTypeEnum;
    /**
     * 
     * @type {UserRef}
     * @memberof AddPersonMembershipAction
     */
    createdBy: UserRef;
    /**
     * 
     * @type {UserRef}
     * @memberof AddPersonMembershipAction
     */
    abortedBy?: UserRef;
    /**
     * 
     * @type {PersonRef}
     * @memberof AddPersonMembershipAction
     */
    personRef: PersonRef;
    /**
     * 
     * @type {string}
     * @memberof AddPersonMembershipAction
     */
    state: AddPersonMembershipActionStateEnum;
    /**
     * 
     * @type {string}
     * @memberof AddPersonMembershipAction
     */
    deviceId?: string;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof AddPersonMembershipAction
     */
    approvalRequest: ApprovalRequest;
    /**
     * 
     * @type {ActionSigningRequest}
     * @memberof AddPersonMembershipAction
     */
    signingRequest?: ActionSigningRequest;
    /**
     * 
     * @type {Array<UserGroupRef>}
     * @memberof AddPersonMembershipAction
     */
    pendingAdditionToGroups?: Array<UserGroupRef>;
}


/**
 * @export
 */
export const AddPersonMembershipActionTypeEnum = {
    addPersonMembership: 'add_person_membership'
} as const;
export type AddPersonMembershipActionTypeEnum = typeof AddPersonMembershipActionTypeEnum[keyof typeof AddPersonMembershipActionTypeEnum];

/**
 * @export
 */
export const AddPersonMembershipActionStateEnum = {
    created: 'created',
    approved: 'approved',
    completed: 'completed',
    aborted: 'aborted'
} as const;
export type AddPersonMembershipActionStateEnum = typeof AddPersonMembershipActionStateEnum[keyof typeof AddPersonMembershipActionStateEnum];


/**
 * Check if a given object implements the AddPersonMembershipAction interface.
 */
export function instanceOfAddPersonMembershipAction(value: object): value is AddPersonMembershipAction {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('isPending' in value) || value['isPending'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('personRef' in value) || value['personRef'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('approvalRequest' in value) || value['approvalRequest'] === undefined) return false;
    return true;
}

export function AddPersonMembershipActionFromJSON(json: any): AddPersonMembershipAction {
    return AddPersonMembershipActionFromJSONTyped(json, false);
}

export function AddPersonMembershipActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddPersonMembershipAction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'isPending': json['is_pending'],
        'type': json['type'],
        'createdBy': UserRefFromJSON(json['created_by']),
        'abortedBy': json['aborted_by'] == null ? undefined : UserRefFromJSON(json['aborted_by']),
        'personRef': PersonRefFromJSON(json['person_ref']),
        'state': json['state'],
        'deviceId': json['device_id'] == null ? undefined : json['device_id'],
        'approvalRequest': ApprovalRequestFromJSON(json['approval_request']),
        'signingRequest': json['signing_request'] == null ? undefined : ActionSigningRequestFromJSON(json['signing_request']),
        'pendingAdditionToGroups': json['pending_addition_to_groups'] == null ? undefined : ((json['pending_addition_to_groups'] as Array<any>).map(UserGroupRefFromJSON)),
    };
}

export function AddPersonMembershipActionToJSON(json: any): AddPersonMembershipAction {
    return AddPersonMembershipActionToJSONTyped(json, false);
}

export function AddPersonMembershipActionToJSONTyped(value?: AddPersonMembershipAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'is_pending': value['isPending'],
        'type': value['type'],
        'created_by': UserRefToJSON(value['createdBy']),
        'aborted_by': UserRefToJSON(value['abortedBy']),
        'person_ref': PersonRefToJSON(value['personRef']),
        'state': value['state'],
        'device_id': value['deviceId'],
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'signing_request': ActionSigningRequestToJSON(value['signingRequest']),
        'pending_addition_to_groups': value['pendingAdditionToGroups'] == null ? undefined : ((value['pendingAdditionToGroups'] as Array<any>).map(UserGroupRefToJSON)),
    };
}

