/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TronAddressRequest } from './TronAddressRequest';
import {
    TronAddressRequestFromJSON,
    TronAddressRequestFromJSONTyped,
    TronAddressRequestToJSON,
    TronAddressRequestToJSONTyped,
} from './TronAddressRequest';

/**
 * 
 * @export
 * @interface TronTrc20AssetIdentifierRequest
 */
export interface TronTrc20AssetIdentifierRequest {
    /**
     * 
     * @type {string}
     * @memberof TronTrc20AssetIdentifierRequest
     */
    type: TronTrc20AssetIdentifierRequestTypeEnum;
    /**
     * 
     * @type {TronAddressRequest}
     * @memberof TronTrc20AssetIdentifierRequest
     */
    trc20: TronAddressRequest;
}


/**
 * @export
 */
export const TronTrc20AssetIdentifierRequestTypeEnum = {
    trc20: 'trc20'
} as const;
export type TronTrc20AssetIdentifierRequestTypeEnum = typeof TronTrc20AssetIdentifierRequestTypeEnum[keyof typeof TronTrc20AssetIdentifierRequestTypeEnum];


/**
 * Check if a given object implements the TronTrc20AssetIdentifierRequest interface.
 */
export function instanceOfTronTrc20AssetIdentifierRequest(value: object): value is TronTrc20AssetIdentifierRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('trc20' in value) || value['trc20'] === undefined) return false;
    return true;
}

export function TronTrc20AssetIdentifierRequestFromJSON(json: any): TronTrc20AssetIdentifierRequest {
    return TronTrc20AssetIdentifierRequestFromJSONTyped(json, false);
}

export function TronTrc20AssetIdentifierRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TronTrc20AssetIdentifierRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'trc20': TronAddressRequestFromJSON(json['trc20']),
    };
}

export function TronTrc20AssetIdentifierRequestToJSON(json: any): TronTrc20AssetIdentifierRequest {
    return TronTrc20AssetIdentifierRequestToJSONTyped(json, false);
}

export function TronTrc20AssetIdentifierRequestToJSONTyped(value?: TronTrc20AssetIdentifierRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'trc20': TronAddressRequestToJSON(value['trc20']),
    };
}

