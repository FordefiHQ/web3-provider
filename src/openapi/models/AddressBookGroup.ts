/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressBookGroupChanges } from './AddressBookGroupChanges';
import {
    AddressBookGroupChangesFromJSON,
    AddressBookGroupChangesFromJSONTyped,
    AddressBookGroupChangesToJSON,
    AddressBookGroupChangesToJSONTyped,
} from './AddressBookGroupChanges';
import type { AddressBookContact } from './AddressBookContact';
import {
    AddressBookContactFromJSON,
    AddressBookContactFromJSONTyped,
    AddressBookContactToJSON,
    AddressBookContactToJSONTyped,
} from './AddressBookContact';
import type { AddressBookGroupState } from './AddressBookGroupState';
import {
    AddressBookGroupStateFromJSON,
    AddressBookGroupStateFromJSONTyped,
    AddressBookGroupStateToJSON,
    AddressBookGroupStateToJSONTyped,
} from './AddressBookGroupState';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';

/**
 * 
 * @export
 * @interface AddressBookGroup
 */
export interface AddressBookGroup {
    /**
     * 
     * @type {string}
     * @memberof AddressBookGroup
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof AddressBookGroup
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AddressBookGroup
     */
    modifiedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof AddressBookGroup
     */
    name: string;
    /**
     * 
     * @type {Array<AddressBookContact>}
     * @memberof AddressBookGroup
     */
    contacts: Array<AddressBookContact>;
    /**
     * 
     * @type {UserRef}
     * @memberof AddressBookGroup
     */
    modifiedBy: UserRef;
    /**
     * 
     * @type {AddressBookGroupChanges}
     * @memberof AddressBookGroup
     */
    pendingChanges?: AddressBookGroupChanges;
    /**
     * 
     * @type {number}
     * @memberof AddressBookGroup
     */
    contactCount: number;
    /**
     * 
     * @type {AddressBookGroupState}
     * @memberof AddressBookGroup
     */
    state: AddressBookGroupState;
}



/**
 * Check if a given object implements the AddressBookGroup interface.
 */
export function instanceOfAddressBookGroup(value: object): value is AddressBookGroup {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('contacts' in value) || value['contacts'] === undefined) return false;
    if (!('modifiedBy' in value) || value['modifiedBy'] === undefined) return false;
    if (!('contactCount' in value) || value['contactCount'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function AddressBookGroupFromJSON(json: any): AddressBookGroup {
    return AddressBookGroupFromJSONTyped(json, false);
}

export function AddressBookGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressBookGroup {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'name': json['name'],
        'contacts': ((json['contacts'] as Array<any>).map(AddressBookContactFromJSON)),
        'modifiedBy': UserRefFromJSON(json['modified_by']),
        'pendingChanges': json['pending_changes'] == null ? undefined : AddressBookGroupChangesFromJSON(json['pending_changes']),
        'contactCount': json['contact_count'],
        'state': AddressBookGroupStateFromJSON(json['state']),
    };
}

export function AddressBookGroupToJSON(json: any): AddressBookGroup {
    return AddressBookGroupToJSONTyped(json, false);
}

export function AddressBookGroupToJSONTyped(value?: AddressBookGroup | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'name': value['name'],
        'contacts': ((value['contacts'] as Array<any>).map(AddressBookContactToJSON)),
        'modified_by': UserRefToJSON(value['modifiedBy']),
        'pending_changes': AddressBookGroupChangesToJSON(value['pendingChanges']),
        'contact_count': value['contactCount'],
        'state': AddressBookGroupStateToJSON(value['state']),
    };
}

