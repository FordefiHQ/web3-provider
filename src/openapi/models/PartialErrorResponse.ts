/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErroneousItem } from './ErroneousItem';
import {
    ErroneousItemFromJSON,
    ErroneousItemFromJSONTyped,
    ErroneousItemToJSON,
    ErroneousItemToJSONTyped,
} from './ErroneousItem';
import type { PartialErrorResponseRequestId } from './PartialErrorResponseRequestId';
import {
    PartialErrorResponseRequestIdFromJSON,
    PartialErrorResponseRequestIdFromJSONTyped,
    PartialErrorResponseRequestIdToJSON,
    PartialErrorResponseRequestIdToJSONTyped,
} from './PartialErrorResponseRequestId';

/**
 * 
 * @export
 * @interface PartialErrorResponse
 */
export interface PartialErrorResponse {
    /**
     * 
     * @type {Array<ErroneousItem>}
     * @memberof PartialErrorResponse
     */
    errors: Array<ErroneousItem>;
    /**
     * 
     * @type {PartialErrorResponseRequestId}
     * @memberof PartialErrorResponse
     */
    requestId?: PartialErrorResponseRequestId;
}

/**
 * Check if a given object implements the PartialErrorResponse interface.
 */
export function instanceOfPartialErrorResponse(value: object): value is PartialErrorResponse {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function PartialErrorResponseFromJSON(json: any): PartialErrorResponse {
    return PartialErrorResponseFromJSONTyped(json, false);
}

export function PartialErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PartialErrorResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'errors': ((json['errors'] as Array<any>).map(ErroneousItemFromJSON)),
        'requestId': json['request_id'] == null ? undefined : PartialErrorResponseRequestIdFromJSON(json['request_id']),
    };
}

export function PartialErrorResponseToJSON(json: any): PartialErrorResponse {
    return PartialErrorResponseToJSONTyped(json, false);
}

export function PartialErrorResponseToJSONTyped(value?: PartialErrorResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'errors': ((value['errors'] as Array<any>).map(ErroneousItemToJSON)),
        'request_id': PartialErrorResponseRequestIdToJSON(value['requestId']),
    };
}

