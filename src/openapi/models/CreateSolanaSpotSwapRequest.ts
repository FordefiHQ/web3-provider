/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SolanaAssetIdentifierRequest } from './SolanaAssetIdentifierRequest';
import {
    SolanaAssetIdentifierRequestToJSON,
} from './SolanaAssetIdentifierRequest';
import type { CreateSolanaSpotSwapRequestFee } from './CreateSolanaSpotSwapRequestFee';
import {
    CreateSolanaSpotSwapRequestFeeToJSON,
} from './CreateSolanaSpotSwapRequestFee';
import type { PushMode } from './PushMode';
import {
    PushModeToJSON,
} from './PushMode';

/**
 * 
 * @export
 * @interface CreateSolanaSpotSwapRequest
 */
export interface CreateSolanaSpotSwapRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateSolanaSpotSwapRequest
     */
    quoteId: string;
    /**
     * 
     * @type {SolanaAssetIdentifierRequest}
     * @memberof CreateSolanaSpotSwapRequest
     */
    inputAssetIdentifier: SolanaAssetIdentifierRequest;
    /**
     * 
     * @type {SolanaAssetIdentifierRequest}
     * @memberof CreateSolanaSpotSwapRequest
     */
    outputAssetIdentifier: SolanaAssetIdentifierRequest;
    /**
     * 
     * @type {string}
     * @memberof CreateSolanaSpotSwapRequest
     */
    amount: string;
    /**
     * 
     * @type {CreateSolanaSpotSwapRequestFee}
     * @memberof CreateSolanaSpotSwapRequest
     */
    fee?: CreateSolanaSpotSwapRequestFee;
    /**
     * 
     * @type {string}
     * @memberof CreateSolanaSpotSwapRequest
     */
    slippageBps?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSolanaSpotSwapRequest
     */
    type: CreateSolanaSpotSwapRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof CreateSolanaSpotSwapRequest
     */
    failOnPredictionFailure?: boolean;
    /**
     * 
     * @type {PushMode}
     * @memberof CreateSolanaSpotSwapRequest
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {boolean}
     * @memberof CreateSolanaSpotSwapRequest
     */
    skipPrediction?: boolean;
}


/**
 * 
 */
const CreateSolanaSpotSwapRequestTypeEnum = {
    solanaSpotSwap: 'solana_spot_swap'
} as const;
type CreateSolanaSpotSwapRequestTypeEnum = typeof CreateSolanaSpotSwapRequestTypeEnum[keyof typeof CreateSolanaSpotSwapRequestTypeEnum];

export function CreateSolanaSpotSwapRequestToJSON(json: any): CreateSolanaSpotSwapRequest {
    return CreateSolanaSpotSwapRequestToJSONTyped(json, false);
}

function CreateSolanaSpotSwapRequestToJSONTyped(value?: CreateSolanaSpotSwapRequest | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'quote_id': value['quoteId'],
        'input_asset_identifier': SolanaAssetIdentifierRequestToJSON(value['inputAssetIdentifier']),
        'output_asset_identifier': SolanaAssetIdentifierRequestToJSON(value['outputAssetIdentifier']),
        'amount': value['amount'],
        'fee': CreateSolanaSpotSwapRequestFeeToJSON(value['fee']),
        'slippage_bps': value['slippageBps'],
        'type': value['type'],
        'fail_on_prediction_failure': value['failOnPredictionFailure'],
        'push_mode': PushModeToJSON(value['pushMode']),
        'skip_prediction': value['skipPrediction'],
    };
}
