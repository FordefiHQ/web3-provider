/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateMpcSetupCallbackArgs
 */
export interface CreateMpcSetupCallbackArgs {
    /**
     * 
     * @type {string}
     * @memberof CreateMpcSetupCallbackArgs
     */
    type: CreateMpcSetupCallbackArgsTypeEnum;
}


/**
 * @export
 */
export const CreateMpcSetupCallbackArgsTypeEnum = {
    createMpcSetup: 'create_mpc_setup'
} as const;
export type CreateMpcSetupCallbackArgsTypeEnum = typeof CreateMpcSetupCallbackArgsTypeEnum[keyof typeof CreateMpcSetupCallbackArgsTypeEnum];


/**
 * Check if a given object implements the CreateMpcSetupCallbackArgs interface.
 */
export function instanceOfCreateMpcSetupCallbackArgs(value: object): value is CreateMpcSetupCallbackArgs {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CreateMpcSetupCallbackArgsFromJSON(json: any): CreateMpcSetupCallbackArgs {
    return CreateMpcSetupCallbackArgsFromJSONTyped(json, false);
}

export function CreateMpcSetupCallbackArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMpcSetupCallbackArgs {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
    };
}

export function CreateMpcSetupCallbackArgsToJSON(json: any): CreateMpcSetupCallbackArgs {
    return CreateMpcSetupCallbackArgsToJSONTyped(json, false);
}

export function CreateMpcSetupCallbackArgsToJSONTyped(value?: CreateMpcSetupCallbackArgs | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
    };
}

