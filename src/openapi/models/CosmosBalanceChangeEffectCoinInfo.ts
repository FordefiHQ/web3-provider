/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosNativeCoinInfo } from './CosmosNativeCoinInfo';
import {
    CosmosNativeCoinInfoFromJSON,
    CosmosNativeCoinInfoFromJSONTyped,
    CosmosNativeCoinInfoToJSON,
} from './CosmosNativeCoinInfo';
import type { CosmosToken } from './CosmosToken';
import {
    CosmosTokenFromJSON,
    CosmosTokenFromJSONTyped,
    CosmosTokenToJSON,
} from './CosmosToken';
import type { CosmosTokenInfo } from './CosmosTokenInfo';
import {
    CosmosTokenInfoFromJSON,
    CosmosTokenInfoFromJSONTyped,
    CosmosTokenInfoToJSON,
} from './CosmosTokenInfo';

/**
 * 
 * @export
 * @interface CosmosBalanceChangeEffectCoinInfo
 */
export interface CosmosBalanceChangeEffectCoinInfo {
    /**
     * 
     * @type {boolean}
     * @memberof CosmosBalanceChangeEffectCoinInfo
     */
    isVerified: boolean;
    /**
     * 
     * @type {CosmosToken}
     * @memberof CosmosBalanceChangeEffectCoinInfo
     */
    coin: CosmosToken;
}

/**
 * Check if a given object implements the CosmosBalanceChangeEffectCoinInfo interface.
 */
export function instanceOfCosmosBalanceChangeEffectCoinInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isVerified" in value;
    isInstance = isInstance && "coin" in value;

    return isInstance;
}

export function CosmosBalanceChangeEffectCoinInfoFromJSON(json: any): CosmosBalanceChangeEffectCoinInfo {
    return CosmosBalanceChangeEffectCoinInfoFromJSONTyped(json, false);
}

export function CosmosBalanceChangeEffectCoinInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosBalanceChangeEffectCoinInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isVerified': json['is_verified'],
        'coin': CosmosTokenFromJSON(json['coin']),
    };
}

export function CosmosBalanceChangeEffectCoinInfoToJSON(value?: CosmosBalanceChangeEffectCoinInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'is_verified': value.isVerified,
        'coin': CosmosTokenToJSON(value.coin),
    };
}

