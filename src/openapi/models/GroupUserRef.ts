/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ApiUserRef,
    instanceOfApiUserRef,
    ApiUserRefFromJSON,
    ApiUserRefFromJSONTyped,
    ApiUserRefToJSON,
} from './ApiUserRef';
import {
    PersonRef,
    instanceOfPersonRef,
    PersonRefFromJSON,
    PersonRefFromJSONTyped,
    PersonRefToJSON,
} from './PersonRef';

/**
 * @type GroupUserRef
 * 
 * @export
 */
export type GroupUserRef = { userType: 'api_user' } & ApiUserRef | { userType: 'person' } & PersonRef;

export function GroupUserRefFromJSON(json: any): GroupUserRef {
    return GroupUserRefFromJSONTyped(json, false);
}

export function GroupUserRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupUserRef {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['user_type']) {
        case 'api_user':
            return {...ApiUserRefFromJSONTyped(json, true), userType: 'api_user'};
        case 'person':
            return {...PersonRefFromJSONTyped(json, true), userType: 'person'};
        default:
            throw new Error(`No variant of GroupUserRef exists with 'userType=${json['userType']}'`);
    }
}

export function GroupUserRefToJSON(value?: GroupUserRef | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['userType']) {
        case 'api_user':
            return ApiUserRefToJSON(value);
        case 'person':
            return PersonRefToJSON(value);
        default:
            throw new Error(`No variant of GroupUserRef exists with 'userType=${value['userType']}'`);
    }

}

