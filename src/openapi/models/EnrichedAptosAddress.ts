/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VaultRef } from './VaultRef';
import {
    VaultRefFromJSON,
    VaultRefFromJSONTyped,
    VaultRefToJSON,
    VaultRefToJSONTyped,
} from './VaultRef';
import type { ContactRef } from './ContactRef';
import {
    ContactRefFromJSON,
    ContactRefFromJSONTyped,
    ContactRefToJSON,
    ContactRefToJSONTyped,
} from './ContactRef';

/**
 * 
 * @export
 * @interface EnrichedAptosAddress
 */
export interface EnrichedAptosAddress {
    /**
     * 
     * @type {VaultRef}
     * @memberof EnrichedAptosAddress
     */
    vault?: VaultRef;
    /**
     * 
     * @type {string}
     * @memberof EnrichedAptosAddress
     */
    explorerUrl?: string;
    /**
     * 
     * @type {ContactRef}
     * @memberof EnrichedAptosAddress
     */
    contact?: ContactRef;
    /**
     * 
     * @type {string}
     * @memberof EnrichedAptosAddress
     */
    type: EnrichedAptosAddressTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EnrichedAptosAddress
     */
    address: string;
}


/**
 * @export
 */
export const EnrichedAptosAddressTypeEnum = {
    aptos: 'aptos'
} as const;
export type EnrichedAptosAddressTypeEnum = typeof EnrichedAptosAddressTypeEnum[keyof typeof EnrichedAptosAddressTypeEnum];


/**
 * Check if a given object implements the EnrichedAptosAddress interface.
 */
export function instanceOfEnrichedAptosAddress(value: object): value is EnrichedAptosAddress {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    return true;
}

export function EnrichedAptosAddressFromJSON(json: any): EnrichedAptosAddress {
    return EnrichedAptosAddressFromJSONTyped(json, false);
}

export function EnrichedAptosAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrichedAptosAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'vault': json['vault'] == null ? undefined : VaultRefFromJSON(json['vault']),
        'explorerUrl': json['explorer_url'] == null ? undefined : json['explorer_url'],
        'contact': json['contact'] == null ? undefined : ContactRefFromJSON(json['contact']),
        'type': json['type'],
        'address': json['address'],
    };
}

export function EnrichedAptosAddressToJSON(json: any): EnrichedAptosAddress {
    return EnrichedAptosAddressToJSONTyped(json, false);
}

export function EnrichedAptosAddressToJSONTyped(value?: EnrichedAptosAddress | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'vault': VaultRefToJSON(value['vault']),
        'explorer_url': value['explorerUrl'],
        'contact': ContactRefToJSON(value['contact']),
        'type': value['type'],
        'address': value['address'],
    };
}

