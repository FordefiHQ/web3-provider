/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosBechAddress } from './CosmosBechAddress';
import {
    CosmosBechAddressFromJSON,
    CosmosBechAddressFromJSONTyped,
    CosmosBechAddressToJSON,
} from './CosmosBechAddress';

/**
 * 
 * @export
 * @interface CosmosTransferToAddressRequest
 */
export interface CosmosTransferToAddressRequest {
    /**
     * 
     * @type {string}
     * @memberof CosmosTransferToAddressRequest
     */
    type: CosmosTransferToAddressRequestTypeEnum;
    /**
     * 
     * @type {CosmosBechAddress}
     * @memberof CosmosTransferToAddressRequest
     */
    address: CosmosBechAddress;
}


/**
 * @export
 */
export const CosmosTransferToAddressRequestTypeEnum = {
    address: 'address'
} as const;
export type CosmosTransferToAddressRequestTypeEnum = typeof CosmosTransferToAddressRequestTypeEnum[keyof typeof CosmosTransferToAddressRequestTypeEnum];


/**
 * Check if a given object implements the CosmosTransferToAddressRequest interface.
 */
export function instanceOfCosmosTransferToAddressRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function CosmosTransferToAddressRequestFromJSON(json: any): CosmosTransferToAddressRequest {
    return CosmosTransferToAddressRequestFromJSONTyped(json, false);
}

export function CosmosTransferToAddressRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosTransferToAddressRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'address': CosmosBechAddressFromJSON(json['address']),
    };
}

export function CosmosTransferToAddressRequestToJSON(value?: CosmosTransferToAddressRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'address': CosmosBechAddressToJSON(value.address),
    };
}

