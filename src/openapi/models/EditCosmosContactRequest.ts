/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosAssetIdentifierRequest } from './CosmosAssetIdentifierRequest';
import {
    CosmosAssetIdentifierRequestFromJSON,
    CosmosAssetIdentifierRequestFromJSONTyped,
    CosmosAssetIdentifierRequestToJSON,
    CosmosAssetIdentifierRequestToJSONTyped,
} from './CosmosAssetIdentifierRequest';

/**
 * 
 * @export
 * @interface EditCosmosContactRequest
 */
export interface EditCosmosContactRequest {
    /**
     * 
     * @type {string}
     * @memberof EditCosmosContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EditCosmosContactRequest
     */
    type: EditCosmosContactRequestTypeEnum;
    /**
     * 
     * @type {Array<CosmosAssetIdentifierRequest>}
     * @memberof EditCosmosContactRequest
     */
    assetsIdentifiers?: Array<CosmosAssetIdentifierRequest>;
    /**
     * 
     * @type {string}
     * @memberof EditCosmosContactRequest
     */
    memo?: string;
}


/**
 * @export
 */
export const EditCosmosContactRequestTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type EditCosmosContactRequestTypeEnum = typeof EditCosmosContactRequestTypeEnum[keyof typeof EditCosmosContactRequestTypeEnum];


/**
 * Check if a given object implements the EditCosmosContactRequest interface.
 */
export function instanceOfEditCosmosContactRequest(value: object): value is EditCosmosContactRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function EditCosmosContactRequestFromJSON(json: any): EditCosmosContactRequest {
    return EditCosmosContactRequestFromJSONTyped(json, false);
}

export function EditCosmosContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditCosmosContactRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'assetsIdentifiers': json['assets_identifiers'] == null ? undefined : ((json['assets_identifiers'] as Array<any>).map(CosmosAssetIdentifierRequestFromJSON)),
        'memo': json['memo'] == null ? undefined : json['memo'],
    };
}

export function EditCosmosContactRequestToJSON(json: any): EditCosmosContactRequest {
    return EditCosmosContactRequestToJSONTyped(json, false);
}

export function EditCosmosContactRequestToJSONTyped(value?: EditCosmosContactRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'assets_identifiers': value['assetsIdentifiers'] == null ? undefined : ((value['assetsIdentifiers'] as Array<any>).map(CosmosAssetIdentifierRequestToJSON)),
        'memo': value['memo'],
    };
}

