/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnrichedUtxoAddress } from './EnrichedUtxoAddress';
import {
    EnrichedUtxoAddressFromJSON,
    EnrichedUtxoAddressFromJSONTyped,
    EnrichedUtxoAddressToJSON,
} from './EnrichedUtxoAddress';
import type { EnrichedUtxoChain } from './EnrichedUtxoChain';
import {
    EnrichedUtxoChainFromJSON,
    EnrichedUtxoChainFromJSONTyped,
    EnrichedUtxoChainToJSON,
} from './EnrichedUtxoChain';
import type { UtxoMessageType } from './UtxoMessageType';
import {
    UtxoMessageTypeFromJSON,
    UtxoMessageTypeFromJSONTyped,
    UtxoMessageTypeToJSON,
} from './UtxoMessageType';
import type { VaultRef } from './VaultRef';
import {
    VaultRefFromJSON,
    VaultRefFromJSONTyped,
    VaultRefToJSON,
} from './VaultRef';

/**
 * 
 * @export
 * @interface DescribedUtxoMessage
 */
export interface DescribedUtxoMessage {
    /**
     * 
     * @type {string}
     * @memberof DescribedUtxoMessage
     */
    type: DescribedUtxoMessageTypeEnum;
    /**
     * 
     * @type {EnrichedUtxoChain}
     * @memberof DescribedUtxoMessage
     */
    chain: EnrichedUtxoChain;
    /**
     * 
     * @type {UtxoMessageType}
     * @memberof DescribedUtxoMessage
     */
    utxoMessageType: UtxoMessageType;
    /**
     * 
     * @type {string}
     * @memberof DescribedUtxoMessage
     */
    messageToDisplay: string;
    /**
     * 
     * @type {VaultRef}
     * @memberof DescribedUtxoMessage
     */
    vault: VaultRef;
    /**
     * 
     * @type {EnrichedUtxoAddress}
     * @memberof DescribedUtxoMessage
     */
    sender: EnrichedUtxoAddress;
}


/**
 * @export
 */
export const DescribedUtxoMessageTypeEnum = {
    utxoMessage: 'utxo_message'
} as const;
export type DescribedUtxoMessageTypeEnum = typeof DescribedUtxoMessageTypeEnum[keyof typeof DescribedUtxoMessageTypeEnum];


/**
 * Check if a given object implements the DescribedUtxoMessage interface.
 */
export function instanceOfDescribedUtxoMessage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "utxoMessageType" in value;
    isInstance = isInstance && "messageToDisplay" in value;
    isInstance = isInstance && "vault" in value;
    isInstance = isInstance && "sender" in value;

    return isInstance;
}

export function DescribedUtxoMessageFromJSON(json: any): DescribedUtxoMessage {
    return DescribedUtxoMessageFromJSONTyped(json, false);
}

export function DescribedUtxoMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): DescribedUtxoMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'chain': EnrichedUtxoChainFromJSON(json['chain']),
        'utxoMessageType': UtxoMessageTypeFromJSON(json['utxo_message_type']),
        'messageToDisplay': json['message_to_display'],
        'vault': VaultRefFromJSON(json['vault']),
        'sender': EnrichedUtxoAddressFromJSON(json['sender']),
    };
}

export function DescribedUtxoMessageToJSON(value?: DescribedUtxoMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'chain': EnrichedUtxoChainToJSON(value.chain),
        'utxo_message_type': UtxoMessageTypeToJSON(value.utxoMessageType),
        'message_to_display': value.messageToDisplay,
        'vault': VaultRefToJSON(value.vault),
        'sender': EnrichedUtxoAddressToJSON(value.sender),
    };
}

