/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AmlRuleAction } from './AmlRuleAction';
import {
    AmlRuleActionFromJSON,
    AmlRuleActionFromJSONTyped,
    AmlRuleActionToJSON,
    AmlRuleActionToJSONTyped,
} from './AmlRuleAction';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';
import type { ChainalysisRule } from './ChainalysisRule';
import {
    ChainalysisRuleFromJSON,
    ChainalysisRuleFromJSONTyped,
    ChainalysisRuleToJSON,
    ChainalysisRuleToJSONTyped,
} from './ChainalysisRule';

/**
 * 
 * @export
 * @interface ChainalysisPolicy
 */
export interface ChainalysisPolicy {
    /**
     * 
     * @type {Date}
     * @memberof ChainalysisPolicy
     */
    modifiedAt: Date;
    /**
     * 
     * @type {UserRef}
     * @memberof ChainalysisPolicy
     */
    modifiedBy: UserRef;
    /**
     * 
     * @type {AmlRuleAction}
     * @memberof ChainalysisPolicy
     */
    defaultAction: AmlRuleAction;
    /**
     * 
     * @type {string}
     * @memberof ChainalysisPolicy
     */
    type: ChainalysisPolicyTypeEnum;
    /**
     * 
     * @type {Array<ChainalysisRule>}
     * @memberof ChainalysisPolicy
     */
    rules: Array<ChainalysisRule>;
}


/**
 * @export
 */
export const ChainalysisPolicyTypeEnum = {
    chainalysis: 'chainalysis'
} as const;
export type ChainalysisPolicyTypeEnum = typeof ChainalysisPolicyTypeEnum[keyof typeof ChainalysisPolicyTypeEnum];


/**
 * Check if a given object implements the ChainalysisPolicy interface.
 */
export function instanceOfChainalysisPolicy(value: object): value is ChainalysisPolicy {
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('modifiedBy' in value) || value['modifiedBy'] === undefined) return false;
    if (!('defaultAction' in value) || value['defaultAction'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('rules' in value) || value['rules'] === undefined) return false;
    return true;
}

export function ChainalysisPolicyFromJSON(json: any): ChainalysisPolicy {
    return ChainalysisPolicyFromJSONTyped(json, false);
}

export function ChainalysisPolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainalysisPolicy {
    if (json == null) {
        return json;
    }
    return {
        
        'modifiedAt': (new Date(json['modified_at'])),
        'modifiedBy': UserRefFromJSON(json['modified_by']),
        'defaultAction': AmlRuleActionFromJSON(json['default_action']),
        'type': json['type'],
        'rules': ((json['rules'] as Array<any>).map(ChainalysisRuleFromJSON)),
    };
}

export function ChainalysisPolicyToJSON(json: any): ChainalysisPolicy {
    return ChainalysisPolicyToJSONTyped(json, false);
}

export function ChainalysisPolicyToJSONTyped(value?: ChainalysisPolicy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'modified_at': ((value['modifiedAt']).toISOString()),
        'modified_by': UserRefToJSON(value['modifiedBy']),
        'default_action': AmlRuleActionToJSON(value['defaultAction']),
        'type': value['type'],
        'rules': ((value['rules'] as Array<any>).map(ChainalysisRuleToJSON)),
    };
}

