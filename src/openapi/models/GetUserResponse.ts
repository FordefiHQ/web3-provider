/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ApiSigner,
    instanceOfApiSigner,
    ApiSignerFromJSON,
    ApiSignerFromJSONTyped,
    ApiSignerToJSON,
} from './ApiSigner';
import {
    ApiUser,
    instanceOfApiUser,
    ApiUserFromJSON,
    ApiUserFromJSONTyped,
    ApiUserToJSON,
} from './ApiUser';
import {
    Person,
    instanceOfPerson,
    PersonFromJSON,
    PersonFromJSONTyped,
    PersonToJSON,
} from './Person';

/**
 * @type GetUserResponse
 * 
 * @export
 */
export type GetUserResponse = { userType: 'api_signer' } & ApiSigner | { userType: 'api_user' } & ApiUser | { userType: 'person' } & Person;

export function GetUserResponseFromJSON(json: any): GetUserResponse {
    return GetUserResponseFromJSONTyped(json, false);
}

export function GetUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUserResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['user_type']) {
        case 'api_signer':
            return {...ApiSignerFromJSONTyped(json, true), userType: 'api_signer'};
        case 'api_user':
            return {...ApiUserFromJSONTyped(json, true), userType: 'api_user'};
        case 'person':
            return {...PersonFromJSONTyped(json, true), userType: 'person'};
        default:
            throw new Error(`No variant of GetUserResponse exists with 'userType=${json['userType']}'`);
    }
}

export function GetUserResponseToJSON(value?: GetUserResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['userType']) {
        case 'api_signer':
            return ApiSignerToJSON(value);
        case 'api_user':
            return ApiUserToJSON(value);
        case 'person':
            return PersonToJSON(value);
        default:
            throw new Error(`No variant of GetUserResponse exists with 'userType=${value['userType']}'`);
    }

}

