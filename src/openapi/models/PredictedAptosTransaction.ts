/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
} from './ApprovalRequest';
import type { AptosSuggestedFees } from './AptosSuggestedFees';
import {
    AptosSuggestedFeesFromJSON,
    AptosSuggestedFeesFromJSONTyped,
    AptosSuggestedFeesToJSON,
} from './AptosSuggestedFees';
import type { AptosTransactionAptosTransactionTypeDetails } from './AptosTransactionAptosTransactionTypeDetails';
import {
    AptosTransactionAptosTransactionTypeDetailsFromJSON,
    AptosTransactionAptosTransactionTypeDetailsFromJSONTyped,
    AptosTransactionAptosTransactionTypeDetailsToJSON,
} from './AptosTransactionAptosTransactionTypeDetails';
import type { AptosTransactionPayload } from './AptosTransactionPayload';
import {
    AptosTransactionPayloadFromJSON,
    AptosTransactionPayloadFromJSONTyped,
    AptosTransactionPayloadToJSON,
} from './AptosTransactionPayload';
import type { AptosTransactionResult } from './AptosTransactionResult';
import {
    AptosTransactionResultFromJSON,
    AptosTransactionResultFromJSONTyped,
    AptosTransactionResultToJSON,
} from './AptosTransactionResult';
import type { EnrichedAptosAddress } from './EnrichedAptosAddress';
import {
    EnrichedAptosAddressFromJSON,
    EnrichedAptosAddressFromJSONTyped,
    EnrichedAptosAddressToJSON,
} from './EnrichedAptosAddress';
import type { EnrichedAptosChain } from './EnrichedAptosChain';
import {
    EnrichedAptosChainFromJSON,
    EnrichedAptosChainFromJSONTyped,
    EnrichedAptosChainToJSON,
} from './EnrichedAptosChain';
import type { PolicyMatch } from './PolicyMatch';
import {
    PolicyMatchFromJSON,
    PolicyMatchFromJSONTyped,
    PolicyMatchToJSON,
} from './PolicyMatch';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
} from './SimulationStatusResult';
import type { TransactionRisk } from './TransactionRisk';
import {
    TransactionRiskFromJSON,
    TransactionRiskFromJSONTyped,
    TransactionRiskToJSON,
} from './TransactionRisk';

/**
 * 
 * @export
 * @interface PredictedAptosTransaction
 */
export interface PredictedAptosTransaction {
    /**
     * 
     * @type {PolicyMatch}
     * @memberof PredictedAptosTransaction
     */
    policyMatch: PolicyMatch;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof PredictedAptosTransaction
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {Array<TransactionRisk>}
     * @memberof PredictedAptosTransaction
     */
    risks: Array<TransactionRisk>;
    /**
     * 
     * @type {string}
     * @memberof PredictedAptosTransaction
     */
    type: PredictedAptosTransactionTypeEnum;
    /**
     * 
     * @type {AptosTransactionResult}
     * @memberof PredictedAptosTransaction
     */
    expectedResult: AptosTransactionResult;
    /**
     * 
     * @type {EnrichedAptosChain}
     * @memberof PredictedAptosTransaction
     */
    chain: EnrichedAptosChain;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof PredictedAptosTransaction
     */
    simulationStatusResult: SimulationStatusResult;
    /**
     * 
     * @type {AptosTransactionPayload}
     * @memberof PredictedAptosTransaction
     */
    payload: AptosTransactionPayload;
    /**
     * 
     * @type {AptosTransactionAptosTransactionTypeDetails}
     * @memberof PredictedAptosTransaction
     */
    aptosTransactionTypeDetails: AptosTransactionAptosTransactionTypeDetails;
    /**
     * 
     * @type {AptosSuggestedFees}
     * @memberof PredictedAptosTransaction
     */
    suggestedFees: AptosSuggestedFees;
    /**
     * 
     * @type {EnrichedAptosAddress}
     * @memberof PredictedAptosTransaction
     */
    sender: EnrichedAptosAddress;
}


/**
 * @export
 */
export const PredictedAptosTransactionTypeEnum = {
    aptosTransaction: 'aptos_transaction'
} as const;
export type PredictedAptosTransactionTypeEnum = typeof PredictedAptosTransactionTypeEnum[keyof typeof PredictedAptosTransactionTypeEnum];


/**
 * Check if a given object implements the PredictedAptosTransaction interface.
 */
export function instanceOfPredictedAptosTransaction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "policyMatch" in value;
    isInstance = isInstance && "risks" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "expectedResult" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "simulationStatusResult" in value;
    isInstance = isInstance && "payload" in value;
    isInstance = isInstance && "aptosTransactionTypeDetails" in value;
    isInstance = isInstance && "suggestedFees" in value;
    isInstance = isInstance && "sender" in value;

    return isInstance;
}

export function PredictedAptosTransactionFromJSON(json: any): PredictedAptosTransaction {
    return PredictedAptosTransactionFromJSONTyped(json, false);
}

export function PredictedAptosTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedAptosTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'policyMatch': PolicyMatchFromJSON(json['policy_match']),
        'approvalRequest': !exists(json, 'approval_request') ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'risks': ((json['risks'] as Array<any>).map(TransactionRiskFromJSON)),
        'type': json['type'],
        'expectedResult': AptosTransactionResultFromJSON(json['expected_result']),
        'chain': EnrichedAptosChainFromJSON(json['chain']),
        'simulationStatusResult': SimulationStatusResultFromJSON(json['simulation_status_result']),
        'payload': AptosTransactionPayloadFromJSON(json['payload']),
        'aptosTransactionTypeDetails': AptosTransactionAptosTransactionTypeDetailsFromJSON(json['aptos_transaction_type_details']),
        'suggestedFees': AptosSuggestedFeesFromJSON(json['suggested_fees']),
        'sender': EnrichedAptosAddressFromJSON(json['sender']),
    };
}

export function PredictedAptosTransactionToJSON(value?: PredictedAptosTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'policy_match': PolicyMatchToJSON(value.policyMatch),
        'approval_request': ApprovalRequestToJSON(value.approvalRequest),
        'risks': ((value.risks as Array<any>).map(TransactionRiskToJSON)),
        'type': value.type,
        'expected_result': AptosTransactionResultToJSON(value.expectedResult),
        'chain': EnrichedAptosChainToJSON(value.chain),
        'simulation_status_result': SimulationStatusResultToJSON(value.simulationStatusResult),
        'payload': AptosTransactionPayloadToJSON(value.payload),
        'aptos_transaction_type_details': AptosTransactionAptosTransactionTypeDetailsToJSON(value.aptosTransactionTypeDetails),
        'suggested_fees': AptosSuggestedFeesToJSON(value.suggestedFees),
        'sender': EnrichedAptosAddressToJSON(value.sender),
    };
}

