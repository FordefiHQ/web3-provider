/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SuiCommandArgument } from './SuiCommandArgument';
import {
    SuiCommandArgumentFromJSON,
    SuiCommandArgumentToJSON,
} from './SuiCommandArgument';

/**
 * 
 * @export
 * @interface SuiTransferObjectsCommand
 */
export interface SuiTransferObjectsCommand {
    /**
     * 
     * @type {string}
     * @memberof SuiTransferObjectsCommand
     */
    type: SuiTransferObjectsCommandTypeEnum;
    /**
     * 
     * @type {Array<SuiCommandArgument>}
     * @memberof SuiTransferObjectsCommand
     */
    objects: Array<SuiCommandArgument>;
    /**
     * 
     * @type {SuiCommandArgument}
     * @memberof SuiTransferObjectsCommand
     */
    address: SuiCommandArgument;
}


/**
 * 
 */
const SuiTransferObjectsCommandTypeEnum = {
    transferObjects: 'transfer_objects'
} as const;
type SuiTransferObjectsCommandTypeEnum = typeof SuiTransferObjectsCommandTypeEnum[keyof typeof SuiTransferObjectsCommandTypeEnum];

export function SuiTransferObjectsCommandFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SuiTransferObjectsCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'objects': ((json['objects'] as Array<any>).map(SuiCommandArgumentFromJSON)),
        'address': SuiCommandArgumentFromJSON(json['address']),
    };
}

export function SuiTransferObjectsCommandToJSON(json: any): SuiTransferObjectsCommand {
    return SuiTransferObjectsCommandToJSONTyped(json, false);
}

function SuiTransferObjectsCommandToJSONTyped(value?: SuiTransferObjectsCommand | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'objects': ((value['objects'] as Array<any>).map(SuiCommandArgumentToJSON)),
        'address': SuiCommandArgumentToJSON(value['address']),
    };
}
