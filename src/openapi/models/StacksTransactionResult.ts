/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StacksEffects } from './StacksEffects';
import {
    StacksEffectsFromJSON,
    StacksEffectsFromJSONTyped,
    StacksEffectsToJSON,
    StacksEffectsToJSONTyped,
} from './StacksEffects';
import type { StacksFee } from './StacksFee';
import {
    StacksFeeFromJSON,
    StacksFeeFromJSONTyped,
    StacksFeeToJSON,
    StacksFeeToJSONTyped,
} from './StacksFee';
import type { StacksReversion } from './StacksReversion';
import {
    StacksReversionFromJSON,
    StacksReversionFromJSONTyped,
    StacksReversionToJSON,
    StacksReversionToJSONTyped,
} from './StacksReversion';

/**
 * 
 * @export
 * @interface StacksTransactionResult
 */
export interface StacksTransactionResult {
    /**
     * 
     * @type {StacksReversion}
     * @memberof StacksTransactionResult
     */
    reversion: StacksReversion;
    /**
     * 
     * @type {StacksFee}
     * @memberof StacksTransactionResult
     */
    fee: StacksFee;
    /**
     * 
     * @type {StacksEffects}
     * @memberof StacksTransactionResult
     */
    effects: StacksEffects;
}

/**
 * Check if a given object implements the StacksTransactionResult interface.
 */
export function instanceOfStacksTransactionResult(value: object): value is StacksTransactionResult {
    if (!('reversion' in value) || value['reversion'] === undefined) return false;
    if (!('fee' in value) || value['fee'] === undefined) return false;
    if (!('effects' in value) || value['effects'] === undefined) return false;
    return true;
}

export function StacksTransactionResultFromJSON(json: any): StacksTransactionResult {
    return StacksTransactionResultFromJSONTyped(json, false);
}

export function StacksTransactionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): StacksTransactionResult {
    if (json == null) {
        return json;
    }
    return {
        
        'reversion': StacksReversionFromJSON(json['reversion']),
        'fee': StacksFeeFromJSON(json['fee']),
        'effects': StacksEffectsFromJSON(json['effects']),
    };
}

export function StacksTransactionResultToJSON(json: any): StacksTransactionResult {
    return StacksTransactionResultToJSONTyped(json, false);
}

export function StacksTransactionResultToJSONTyped(value?: StacksTransactionResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reversion': StacksReversionToJSON(value['reversion']),
        'fee': StacksFeeToJSON(value['fee']),
        'effects': StacksEffectsToJSON(value['effects']),
    };
}

