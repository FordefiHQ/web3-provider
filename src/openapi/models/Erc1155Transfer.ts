/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnrichedEvmAddress } from './EnrichedEvmAddress';
import {
    EnrichedEvmAddressFromJSON,
    EnrichedEvmAddressFromJSONTyped,
    EnrichedEvmAddressToJSON,
} from './EnrichedEvmAddress';
import type { Erc1155Contract } from './Erc1155Contract';
import {
    Erc1155ContractFromJSON,
    Erc1155ContractFromJSONTyped,
    Erc1155ContractToJSON,
} from './Erc1155Contract';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
} from './PricedAsset';

/**
 * 
 * @export
 * @interface Erc1155Transfer
 */
export interface Erc1155Transfer {
    /**
     * 
     * @type {PricedAsset}
     * @memberof Erc1155Transfer
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof Erc1155Transfer
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof Erc1155Transfer
     */
    type: Erc1155TransferTypeEnum;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof Erc1155Transfer
     */
    from: EnrichedEvmAddress;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof Erc1155Transfer
     */
    to: EnrichedEvmAddress;
    /**
     * 
     * @type {string}
     * @memberof Erc1155Transfer
     * @deprecated
     */
    tokenId: string;
    /**
     * 
     * @type {Erc1155Contract}
     * @memberof Erc1155Transfer
     */
    tokenContract: Erc1155Contract;
}


/**
 * @export
 */
export const Erc1155TransferTypeEnum = {
    erc1155: 'erc1155'
} as const;
export type Erc1155TransferTypeEnum = typeof Erc1155TransferTypeEnum[keyof typeof Erc1155TransferTypeEnum];


/**
 * Check if a given object implements the Erc1155Transfer interface.
 */
export function instanceOfErc1155Transfer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pricedAsset" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "from" in value;
    isInstance = isInstance && "to" in value;
    isInstance = isInstance && "tokenId" in value;
    isInstance = isInstance && "tokenContract" in value;

    return isInstance;
}

export function Erc1155TransferFromJSON(json: any): Erc1155Transfer {
    return Erc1155TransferFromJSONTyped(json, false);
}

export function Erc1155TransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): Erc1155Transfer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'amount': json['amount'],
        'type': json['type'],
        'from': EnrichedEvmAddressFromJSON(json['from']),
        'to': EnrichedEvmAddressFromJSON(json['to']),
        'tokenId': json['token_id'],
        'tokenContract': Erc1155ContractFromJSON(json['token_contract']),
    };
}

export function Erc1155TransferToJSON(value?: Erc1155Transfer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'priced_asset': PricedAssetToJSON(value.pricedAsset),
        'amount': value.amount,
        'type': value.type,
        'from': EnrichedEvmAddressToJSON(value.from),
        'to': EnrichedEvmAddressToJSON(value.to),
        'token_id': value.tokenId,
        'token_contract': Erc1155ContractToJSON(value.tokenContract),
    };
}

