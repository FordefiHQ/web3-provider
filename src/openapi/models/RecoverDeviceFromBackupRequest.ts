/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeviceSystemInfo } from './DeviceSystemInfo';
import {
    DeviceSystemInfoFromJSON,
    DeviceSystemInfoFromJSONTyped,
    DeviceSystemInfoToJSON,
    DeviceSystemInfoToJSONTyped,
} from './DeviceSystemInfo';

/**
 * 
 * @export
 * @interface RecoverDeviceFromBackupRequest
 */
export interface RecoverDeviceFromBackupRequest {
    /**
     * 
     * @type {string}
     * @memberof RecoverDeviceFromBackupRequest
     */
    deviceId: string;
    /**
     * 
     * @type {string}
     * @memberof RecoverDeviceFromBackupRequest
     */
    pubKey: string;
    /**
     * 
     * @type {string}
     * @memberof RecoverDeviceFromBackupRequest
     */
    deviceRegistrationSignature: string;
    /**
     * 
     * @type {DeviceSystemInfo}
     * @memberof RecoverDeviceFromBackupRequest
     */
    deviceInfo: DeviceSystemInfo;
    /**
     * 
     * @type {string}
     * @memberof RecoverDeviceFromBackupRequest
     */
    pinCode?: string;
}

/**
 * Check if a given object implements the RecoverDeviceFromBackupRequest interface.
 */
export function instanceOfRecoverDeviceFromBackupRequest(value: object): value is RecoverDeviceFromBackupRequest {
    if (!('deviceId' in value) || value['deviceId'] === undefined) return false;
    if (!('pubKey' in value) || value['pubKey'] === undefined) return false;
    if (!('deviceRegistrationSignature' in value) || value['deviceRegistrationSignature'] === undefined) return false;
    if (!('deviceInfo' in value) || value['deviceInfo'] === undefined) return false;
    return true;
}

export function RecoverDeviceFromBackupRequestFromJSON(json: any): RecoverDeviceFromBackupRequest {
    return RecoverDeviceFromBackupRequestFromJSONTyped(json, false);
}

export function RecoverDeviceFromBackupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecoverDeviceFromBackupRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceId': json['device_id'],
        'pubKey': json['pub_key'],
        'deviceRegistrationSignature': json['device_registration_signature'],
        'deviceInfo': DeviceSystemInfoFromJSON(json['device_info']),
        'pinCode': json['pin_code'] == null ? undefined : json['pin_code'],
    };
}

export function RecoverDeviceFromBackupRequestToJSON(json: any): RecoverDeviceFromBackupRequest {
    return RecoverDeviceFromBackupRequestToJSONTyped(json, false);
}

export function RecoverDeviceFromBackupRequestToJSONTyped(value?: RecoverDeviceFromBackupRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'device_id': value['deviceId'],
        'pub_key': value['pubKey'],
        'device_registration_signature': value['deviceRegistrationSignature'],
        'device_info': DeviceSystemInfoToJSON(value['deviceInfo']),
        'pin_code': value['pinCode'],
    };
}

