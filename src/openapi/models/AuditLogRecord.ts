/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuditLogCategory } from './AuditLogCategory';
import {
    AuditLogCategoryFromJSON,
    AuditLogCategoryFromJSONTyped,
    AuditLogCategoryToJSON,
    AuditLogCategoryToJSONTyped,
} from './AuditLogCategory';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';

/**
 * 
 * @export
 * @interface AuditLogRecord
 */
export interface AuditLogRecord {
    /**
     * 
     * @type {Date}
     * @memberof AuditLogRecord
     */
    timestamp: Date;
    /**
     * 
     * @type {string}
     * @memberof AuditLogRecord
     */
    requestId: string;
    /**
     * 
     * @type {AuditLogCategory}
     * @memberof AuditLogRecord
     */
    category: AuditLogCategory;
    /**
     * 
     * @type {string}
     * @memberof AuditLogRecord
     */
    action: string;
    /**
     * 
     * @type {UserRef}
     * @memberof AuditLogRecord
     */
    createdBy: UserRef;
    /**
     * 
     * @type {string}
     * @memberof AuditLogRecord
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof AuditLogRecord
     */
    clientIp: string;
}



/**
 * Check if a given object implements the AuditLogRecord interface.
 */
export function instanceOfAuditLogRecord(value: object): value is AuditLogRecord {
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('clientIp' in value) || value['clientIp'] === undefined) return false;
    return true;
}

export function AuditLogRecordFromJSON(json: any): AuditLogRecord {
    return AuditLogRecordFromJSONTyped(json, false);
}

export function AuditLogRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditLogRecord {
    if (json == null) {
        return json;
    }
    return {
        
        'timestamp': (new Date(json['timestamp'])),
        'requestId': json['request_id'],
        'category': AuditLogCategoryFromJSON(json['category']),
        'action': json['action'],
        'createdBy': UserRefFromJSON(json['created_by']),
        'description': json['description'],
        'clientIp': json['client_ip'],
    };
}

export function AuditLogRecordToJSON(json: any): AuditLogRecord {
    return AuditLogRecordToJSONTyped(json, false);
}

export function AuditLogRecordToJSONTyped(value?: AuditLogRecord | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timestamp': ((value['timestamp']).toISOString()),
        'request_id': value['requestId'],
        'category': AuditLogCategoryToJSON(value['category']),
        'action': value['action'],
        'created_by': UserRefToJSON(value['createdBy']),
        'description': value['description'],
        'client_ip': value['clientIp'],
    };
}

