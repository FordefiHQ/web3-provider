/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    Erc1155AllowanceForAllChange,
    instanceOfErc1155AllowanceForAllChange,
    Erc1155AllowanceForAllChangeFromJSON,
    Erc1155AllowanceForAllChangeFromJSONTyped,
    Erc1155AllowanceForAllChangeToJSON,
} from './Erc1155AllowanceForAllChange';
import {
    Erc20AllowanceChange,
    instanceOfErc20AllowanceChange,
    Erc20AllowanceChangeFromJSON,
    Erc20AllowanceChangeFromJSONTyped,
    Erc20AllowanceChangeToJSON,
} from './Erc20AllowanceChange';
import {
    Erc721AllowanceChange,
    instanceOfErc721AllowanceChange,
    Erc721AllowanceChangeFromJSON,
    Erc721AllowanceChangeFromJSONTyped,
    Erc721AllowanceChangeToJSON,
} from './Erc721AllowanceChange';
import {
    Erc721AllowanceForAllChange,
    instanceOfErc721AllowanceForAllChange,
    Erc721AllowanceForAllChangeFromJSON,
    Erc721AllowanceForAllChangeFromJSONTyped,
    Erc721AllowanceForAllChangeToJSON,
} from './Erc721AllowanceForAllChange';

/**
 * @type AllowanceEffect
 * 
 * @export
 */
export type AllowanceEffect = { type: 'erc1155_for_all' } & Erc1155AllowanceForAllChange | { type: 'erc20' } & Erc20AllowanceChange | { type: 'erc721' } & Erc721AllowanceChange | { type: 'erc721_for_all' } & Erc721AllowanceForAllChange;

export function AllowanceEffectFromJSON(json: any): AllowanceEffect {
    return AllowanceEffectFromJSONTyped(json, false);
}

export function AllowanceEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllowanceEffect {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'erc1155_for_all':
            return {...Erc1155AllowanceForAllChangeFromJSONTyped(json, true), type: 'erc1155_for_all'};
        case 'erc20':
            return {...Erc20AllowanceChangeFromJSONTyped(json, true), type: 'erc20'};
        case 'erc721':
            return {...Erc721AllowanceChangeFromJSONTyped(json, true), type: 'erc721'};
        case 'erc721_for_all':
            return {...Erc721AllowanceForAllChangeFromJSONTyped(json, true), type: 'erc721_for_all'};
        default:
            throw new Error(`No variant of AllowanceEffect exists with 'type=${json['type']}'`);
    }
}

export function AllowanceEffectToJSON(value?: AllowanceEffect | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'erc1155_for_all':
            return Erc1155AllowanceForAllChangeToJSON(value);
        case 'erc20':
            return Erc20AllowanceChangeToJSON(value);
        case 'erc721':
            return Erc721AllowanceChangeToJSON(value);
        case 'erc721_for_all':
            return Erc721AllowanceForAllChangeToJSON(value);
        default:
            throw new Error(`No variant of AllowanceEffect exists with 'type=${value['type']}'`);
    }

}

