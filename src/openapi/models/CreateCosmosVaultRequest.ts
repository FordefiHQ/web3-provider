/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCosmosVaultRequest
 */
export interface CreateCosmosVaultRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateCosmosVaultRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCosmosVaultRequest
     */
    keysetId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCosmosVaultRequest
     */
    vaultGroupId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCosmosVaultRequest
     */
    type: CreateCosmosVaultRequestTypeEnum;
}


/**
 * @export
 */
export const CreateCosmosVaultRequestTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type CreateCosmosVaultRequestTypeEnum = typeof CreateCosmosVaultRequestTypeEnum[keyof typeof CreateCosmosVaultRequestTypeEnum];


/**
 * Check if a given object implements the CreateCosmosVaultRequest interface.
 */
export function instanceOfCreateCosmosVaultRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function CreateCosmosVaultRequestFromJSON(json: any): CreateCosmosVaultRequest {
    return CreateCosmosVaultRequestFromJSONTyped(json, false);
}

export function CreateCosmosVaultRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCosmosVaultRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'keysetId': !exists(json, 'keyset_id') ? undefined : json['keyset_id'],
        'vaultGroupId': !exists(json, 'vault_group_id') ? undefined : json['vault_group_id'],
        'type': json['type'],
    };
}

export function CreateCosmosVaultRequestToJSON(value?: CreateCosmosVaultRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'keyset_id': value.keysetId,
        'vault_group_id': value.vaultGroupId,
        'type': value.type,
    };
}

