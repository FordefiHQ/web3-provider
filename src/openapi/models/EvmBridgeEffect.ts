/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvmBridgeEffectDestination } from './EvmBridgeEffectDestination';
import {
    EvmBridgeEffectDestinationFromJSON,
    EvmBridgeEffectDestinationFromJSONTyped,
    EvmBridgeEffectDestinationToJSON,
} from './EvmBridgeEffectDestination';
import type { EvmBridgeEffectSource } from './EvmBridgeEffectSource';
import {
    EvmBridgeEffectSourceFromJSON,
    EvmBridgeEffectSourceFromJSONTyped,
    EvmBridgeEffectSourceToJSON,
} from './EvmBridgeEffectSource';

/**
 * 
 * @export
 * @interface EvmBridgeEffect
 */
export interface EvmBridgeEffect {
    /**
     * 
     * @type {string}
     * @memberof EvmBridgeEffect
     */
    bridgeName: string;
    /**
     * 
     * @type {EvmBridgeEffectSource}
     * @memberof EvmBridgeEffect
     */
    source?: EvmBridgeEffectSource;
    /**
     * 
     * @type {EvmBridgeEffectDestination}
     * @memberof EvmBridgeEffect
     */
    destination: EvmBridgeEffectDestination;
    /**
     * 
     * @type {string}
     * @memberof EvmBridgeEffect
     */
    amount: string;
}

/**
 * Check if a given object implements the EvmBridgeEffect interface.
 */
export function instanceOfEvmBridgeEffect(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "bridgeName" in value;
    isInstance = isInstance && "destination" in value;
    isInstance = isInstance && "amount" in value;

    return isInstance;
}

export function EvmBridgeEffectFromJSON(json: any): EvmBridgeEffect {
    return EvmBridgeEffectFromJSONTyped(json, false);
}

export function EvmBridgeEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmBridgeEffect {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bridgeName': json['bridge_name'],
        'source': !exists(json, 'source') ? undefined : EvmBridgeEffectSourceFromJSON(json['source']),
        'destination': EvmBridgeEffectDestinationFromJSON(json['destination']),
        'amount': json['amount'],
    };
}

export function EvmBridgeEffectToJSON(value?: EvmBridgeEffect | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bridge_name': value.bridgeName,
        'source': EvmBridgeEffectSourceToJSON(value.source),
        'destination': EvmBridgeEffectDestinationToJSON(value.destination),
        'amount': value.amount,
    };
}

