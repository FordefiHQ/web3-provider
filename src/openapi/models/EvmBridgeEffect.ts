/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EvmBridgeEffectSource } from './EvmBridgeEffectSource';
import {
    EvmBridgeEffectSourceFromJSON,
    EvmBridgeEffectSourceFromJSONTyped,
    EvmBridgeEffectSourceToJSON,
    EvmBridgeEffectSourceToJSONTyped,
} from './EvmBridgeEffectSource';
import type { EvmBridgeEffectDestination } from './EvmBridgeEffectDestination';
import {
    EvmBridgeEffectDestinationFromJSON,
    EvmBridgeEffectDestinationFromJSONTyped,
    EvmBridgeEffectDestinationToJSON,
    EvmBridgeEffectDestinationToJSONTyped,
} from './EvmBridgeEffectDestination';

/**
 * 
 * @export
 * @interface EvmBridgeEffect
 */
export interface EvmBridgeEffect {
    /**
     * 
     * @type {string}
     * @memberof EvmBridgeEffect
     */
    bridgeName: string;
    /**
     * 
     * @type {EvmBridgeEffectSource}
     * @memberof EvmBridgeEffect
     */
    source?: EvmBridgeEffectSource;
    /**
     * 
     * @type {EvmBridgeEffectDestination}
     * @memberof EvmBridgeEffect
     */
    destination: EvmBridgeEffectDestination;
    /**
     * 
     * @type {string}
     * @memberof EvmBridgeEffect
     */
    amount: string;
}

/**
 * Check if a given object implements the EvmBridgeEffect interface.
 */
export function instanceOfEvmBridgeEffect(value: object): value is EvmBridgeEffect {
    if (!('bridgeName' in value) || value['bridgeName'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function EvmBridgeEffectFromJSON(json: any): EvmBridgeEffect {
    return EvmBridgeEffectFromJSONTyped(json, false);
}

export function EvmBridgeEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmBridgeEffect {
    if (json == null) {
        return json;
    }
    return {
        
        'bridgeName': json['bridge_name'],
        'source': json['source'] == null ? undefined : EvmBridgeEffectSourceFromJSON(json['source']),
        'destination': EvmBridgeEffectDestinationFromJSON(json['destination']),
        'amount': json['amount'],
    };
}

export function EvmBridgeEffectToJSON(json: any): EvmBridgeEffect {
    return EvmBridgeEffectToJSONTyped(json, false);
}

export function EvmBridgeEffectToJSONTyped(value?: EvmBridgeEffect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bridge_name': value['bridgeName'],
        'source': EvmBridgeEffectSourceToJSON(value['source']),
        'destination': EvmBridgeEffectDestinationToJSON(value['destination']),
        'amount': value['amount'],
    };
}

