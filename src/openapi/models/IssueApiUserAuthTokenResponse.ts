/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IssueApiUserAuthTokenResponse
 */
export interface IssueApiUserAuthTokenResponse {
    /**
     * 
     * @type {string}
     * @memberof IssueApiUserAuthTokenResponse
     */
    userType: IssueApiUserAuthTokenResponseUserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof IssueApiUserAuthTokenResponse
     */
    accessToken: string;
}


/**
 * @export
 */
export const IssueApiUserAuthTokenResponseUserTypeEnum = {
    apiUser: 'api_user'
} as const;
export type IssueApiUserAuthTokenResponseUserTypeEnum = typeof IssueApiUserAuthTokenResponseUserTypeEnum[keyof typeof IssueApiUserAuthTokenResponseUserTypeEnum];


/**
 * Check if a given object implements the IssueApiUserAuthTokenResponse interface.
 */
export function instanceOfIssueApiUserAuthTokenResponse(value: object): value is IssueApiUserAuthTokenResponse {
    if (!('userType' in value) || value['userType'] === undefined) return false;
    if (!('accessToken' in value) || value['accessToken'] === undefined) return false;
    return true;
}

export function IssueApiUserAuthTokenResponseFromJSON(json: any): IssueApiUserAuthTokenResponse {
    return IssueApiUserAuthTokenResponseFromJSONTyped(json, false);
}

export function IssueApiUserAuthTokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IssueApiUserAuthTokenResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'userType': json['user_type'],
        'accessToken': json['access_token'],
    };
}

export function IssueApiUserAuthTokenResponseToJSON(json: any): IssueApiUserAuthTokenResponse {
    return IssueApiUserAuthTokenResponseToJSONTyped(json, false);
}

export function IssueApiUserAuthTokenResponseToJSONTyped(value?: IssueApiUserAuthTokenResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_type': value['userType'],
        'access_token': value['accessToken'],
    };
}

