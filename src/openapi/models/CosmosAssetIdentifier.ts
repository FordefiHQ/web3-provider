/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosAssetIdentifierDetails } from './CosmosAssetIdentifierDetails';
import {
    CosmosAssetIdentifierDetailsFromJSON,
    CosmosAssetIdentifierDetailsFromJSONTyped,
    CosmosAssetIdentifierDetailsToJSON,
} from './CosmosAssetIdentifierDetails';
import type { EnrichedCosmosChain } from './EnrichedCosmosChain';
import {
    EnrichedCosmosChainFromJSON,
    EnrichedCosmosChainFromJSONTyped,
    EnrichedCosmosChainToJSON,
} from './EnrichedCosmosChain';

/**
 * 
 * @export
 * @interface CosmosAssetIdentifier
 */
export interface CosmosAssetIdentifier {
    /**
     * 
     * @type {string}
     * @memberof CosmosAssetIdentifier
     */
    type: CosmosAssetIdentifierTypeEnum;
    /**
     * 
     * @type {CosmosAssetIdentifierDetails}
     * @memberof CosmosAssetIdentifier
     */
    details: CosmosAssetIdentifierDetails;
    /**
     * 
     * @type {EnrichedCosmosChain}
     * @memberof CosmosAssetIdentifier
     */
    chain: EnrichedCosmosChain;
}


/**
 * @export
 */
export const CosmosAssetIdentifierTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type CosmosAssetIdentifierTypeEnum = typeof CosmosAssetIdentifierTypeEnum[keyof typeof CosmosAssetIdentifierTypeEnum];


/**
 * Check if a given object implements the CosmosAssetIdentifier interface.
 */
export function instanceOfCosmosAssetIdentifier(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "details" in value;
    isInstance = isInstance && "chain" in value;

    return isInstance;
}

export function CosmosAssetIdentifierFromJSON(json: any): CosmosAssetIdentifier {
    return CosmosAssetIdentifierFromJSONTyped(json, false);
}

export function CosmosAssetIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosAssetIdentifier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'details': CosmosAssetIdentifierDetailsFromJSON(json['details']),
        'chain': EnrichedCosmosChainFromJSON(json['chain']),
    };
}

export function CosmosAssetIdentifierToJSON(value?: CosmosAssetIdentifier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'details': CosmosAssetIdentifierDetailsToJSON(value.details),
        'chain': EnrichedCosmosChainToJSON(value.chain),
    };
}

