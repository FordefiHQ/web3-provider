/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    Erc1155Transfer,
    instanceOfErc1155Transfer,
    Erc1155TransferFromJSON,
    Erc1155TransferFromJSONTyped,
    Erc1155TransferToJSON,
} from './Erc1155Transfer';
import {
    Erc20Transfer,
    instanceOfErc20Transfer,
    Erc20TransferFromJSON,
    Erc20TransferFromJSONTyped,
    Erc20TransferToJSON,
} from './Erc20Transfer';
import {
    Erc721Transfer,
    instanceOfErc721Transfer,
    Erc721TransferFromJSON,
    Erc721TransferFromJSONTyped,
    Erc721TransferToJSON,
} from './Erc721Transfer';
import {
    EvmNativeCurrencyTransfer,
    instanceOfEvmNativeCurrencyTransfer,
    EvmNativeCurrencyTransferFromJSON,
    EvmNativeCurrencyTransferFromJSONTyped,
    EvmNativeCurrencyTransferToJSON,
} from './EvmNativeCurrencyTransfer';

/**
 * @type EvmTransferEffect
 * 
 * @export
 */
export type EvmTransferEffect = { type: 'erc1155' } & Erc1155Transfer | { type: 'erc20' } & Erc20Transfer | { type: 'erc721' } & Erc721Transfer | { type: 'native' } & EvmNativeCurrencyTransfer;

export function EvmTransferEffectFromJSON(json: any): EvmTransferEffect {
    return EvmTransferEffectFromJSONTyped(json, false);
}

export function EvmTransferEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmTransferEffect {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'erc1155':
            return {...Erc1155TransferFromJSONTyped(json, true), type: 'erc1155'};
        case 'erc20':
            return {...Erc20TransferFromJSONTyped(json, true), type: 'erc20'};
        case 'erc721':
            return {...Erc721TransferFromJSONTyped(json, true), type: 'erc721'};
        case 'native':
            return {...EvmNativeCurrencyTransferFromJSONTyped(json, true), type: 'native'};
        default:
            throw new Error(`No variant of EvmTransferEffect exists with 'type=${json['type']}'`);
    }
}

export function EvmTransferEffectToJSON(value?: EvmTransferEffect | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'erc1155':
            return Erc1155TransferToJSON(value);
        case 'erc20':
            return Erc20TransferToJSON(value);
        case 'erc721':
            return Erc721TransferToJSON(value);
        case 'native':
            return EvmNativeCurrencyTransferToJSON(value);
        default:
            throw new Error(`No variant of EvmTransferEffect exists with 'type=${value['type']}'`);
    }

}

