/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
    PricedAssetToJSONTyped,
} from './PricedAsset';
import type { EvmBalanceChangeEffectTokenContract } from './EvmBalanceChangeEffectTokenContract';
import {
    EvmBalanceChangeEffectTokenContractFromJSON,
    EvmBalanceChangeEffectTokenContractFromJSONTyped,
    EvmBalanceChangeEffectTokenContractToJSON,
    EvmBalanceChangeEffectTokenContractToJSONTyped,
} from './EvmBalanceChangeEffectTokenContract';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';
import type { EnrichedEvmAddress } from './EnrichedEvmAddress';
import {
    EnrichedEvmAddressFromJSON,
    EnrichedEvmAddressFromJSONTyped,
    EnrichedEvmAddressToJSON,
    EnrichedEvmAddressToJSONTyped,
} from './EnrichedEvmAddress';
import type { EvmTransferEffectType } from './EvmTransferEffectType';
import {
    EvmTransferEffectTypeFromJSON,
    EvmTransferEffectTypeFromJSONTyped,
    EvmTransferEffectTypeToJSON,
    EvmTransferEffectTypeToJSONTyped,
} from './EvmTransferEffectType';

/**
 * 
 * @export
 * @interface EvmTransferEffect
 */
export interface EvmTransferEffect {
    /**
     * 
     * @type {PricedAsset}
     * @memberof EvmTransferEffect
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof EvmTransferEffect
     */
    amount: string;
    /**
     * 
     * @type {EvmTransferEffectType}
     * @memberof EvmTransferEffect
     */
    type: EvmTransferEffectType;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof EvmTransferEffect
     */
    from: EnrichedEvmAddress;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof EvmTransferEffect
     */
    to: EnrichedEvmAddress;
    /**
     * 
     * @type {Price}
     * @memberof EvmTransferEffect
     */
    price?: Price;
    /**
     * 
     * @type {EvmBalanceChangeEffectTokenContract}
     * @memberof EvmTransferEffect
     * @deprecated
     */
    tokenContract?: EvmBalanceChangeEffectTokenContract;
    /**
     * 
     * @type {string}
     * @memberof EvmTransferEffect
     * @deprecated
     */
    tokenId?: string;
}



/**
 * Check if a given object implements the EvmTransferEffect interface.
 */
export function instanceOfEvmTransferEffect(value: object): value is EvmTransferEffect {
    if (!('pricedAsset' in value) || value['pricedAsset'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    return true;
}

export function EvmTransferEffectFromJSON(json: any): EvmTransferEffect {
    return EvmTransferEffectFromJSONTyped(json, false);
}

export function EvmTransferEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmTransferEffect {
    if (json == null) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'amount': json['amount'],
        'type': EvmTransferEffectTypeFromJSON(json['type']),
        'from': EnrichedEvmAddressFromJSON(json['from']),
        'to': EnrichedEvmAddressFromJSON(json['to']),
        'price': json['price'] == null ? undefined : PriceFromJSON(json['price']),
        'tokenContract': json['token_contract'] == null ? undefined : EvmBalanceChangeEffectTokenContractFromJSON(json['token_contract']),
        'tokenId': json['token_id'] == null ? undefined : json['token_id'],
    };
}

export function EvmTransferEffectToJSON(json: any): EvmTransferEffect {
    return EvmTransferEffectToJSONTyped(json, false);
}

export function EvmTransferEffectToJSONTyped(value?: EvmTransferEffect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'priced_asset': PricedAssetToJSON(value['pricedAsset']),
        'amount': value['amount'],
        'type': EvmTransferEffectTypeToJSON(value['type']),
        'from': EnrichedEvmAddressToJSON(value['from']),
        'to': EnrichedEvmAddressToJSON(value['to']),
        'price': PriceToJSON(value['price']),
        'token_contract': EvmBalanceChangeEffectTokenContractToJSON(value['tokenContract']),
        'token_id': value['tokenId'],
    };
}

