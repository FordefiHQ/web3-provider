/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TronTransferEffect } from './TronTransferEffect';
import {
    TronTransferEffectFromJSON,
    TronTransferEffectFromJSONTyped,
    TronTransferEffectToJSON,
    TronTransferEffectToJSONTyped,
} from './TronTransferEffect';
import type { TronBalanceChangeEffect } from './TronBalanceChangeEffect';
import {
    TronBalanceChangeEffectFromJSON,
    TronBalanceChangeEffectFromJSONTyped,
    TronBalanceChangeEffectToJSON,
    TronBalanceChangeEffectToJSONTyped,
} from './TronBalanceChangeEffect';

/**
 * 
 * @export
 * @interface TronEffects
 */
export interface TronEffects {
    /**
     * 
     * @type {Array<TronBalanceChangeEffect>}
     * @memberof TronEffects
     */
    balanceChanges: Array<TronBalanceChangeEffect>;
    /**
     * 
     * @type {Array<TronTransferEffect>}
     * @memberof TronEffects
     */
    transfers: Array<TronTransferEffect>;
}

/**
 * Check if a given object implements the TronEffects interface.
 */
export function instanceOfTronEffects(value: object): value is TronEffects {
    if (!('balanceChanges' in value) || value['balanceChanges'] === undefined) return false;
    if (!('transfers' in value) || value['transfers'] === undefined) return false;
    return true;
}

export function TronEffectsFromJSON(json: any): TronEffects {
    return TronEffectsFromJSONTyped(json, false);
}

export function TronEffectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TronEffects {
    if (json == null) {
        return json;
    }
    return {
        
        'balanceChanges': ((json['balance_changes'] as Array<any>).map(TronBalanceChangeEffectFromJSON)),
        'transfers': ((json['transfers'] as Array<any>).map(TronTransferEffectFromJSON)),
    };
}

export function TronEffectsToJSON(json: any): TronEffects {
    return TronEffectsToJSONTyped(json, false);
}

export function TronEffectsToJSONTyped(value?: TronEffects | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'balance_changes': ((value['balanceChanges'] as Array<any>).map(TronBalanceChangeEffectToJSON)),
        'transfers': ((value['transfers'] as Array<any>).map(TronTransferEffectToJSON)),
    };
}

