/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdminQuorum } from './AdminQuorum';
import {
    AdminQuorumFromJSON,
    AdminQuorumFromJSONTyped,
    AdminQuorumToJSON,
    AdminQuorumToJSONTyped,
} from './AdminQuorum';
import type { ApprovalRequest } from './ApprovalRequest';
import {
    ApprovalRequestFromJSON,
    ApprovalRequestFromJSONTyped,
    ApprovalRequestToJSON,
    ApprovalRequestToJSONTyped,
} from './ApprovalRequest';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
    UserRefToJSONTyped,
} from './UserRef';
import type { VerificationRequest } from './VerificationRequest';
import {
    VerificationRequestFromJSON,
    VerificationRequestFromJSONTyped,
    VerificationRequestToJSON,
    VerificationRequestToJSONTyped,
} from './VerificationRequest';

/**
 * 
 * @export
 * @interface AdminQuorumChangeAction
 */
export interface AdminQuorumChangeAction {
    /**
     * 
     * @type {string}
     * @memberof AdminQuorumChangeAction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof AdminQuorumChangeAction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdminQuorumChangeAction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AdminQuorumChangeAction
     */
    isPending: boolean;
    /**
     * 
     * @type {string}
     * @memberof AdminQuorumChangeAction
     */
    type: AdminQuorumChangeActionTypeEnum;
    /**
     * 
     * @type {UserRef}
     * @memberof AdminQuorumChangeAction
     */
    createdBy: UserRef;
    /**
     * 
     * @type {UserRef}
     * @memberof AdminQuorumChangeAction
     */
    abortedBy?: UserRef;
    /**
     * 
     * @type {string}
     * @memberof AdminQuorumChangeAction
     */
    requestId: string;
    /**
     * 
     * @type {ApprovalRequest}
     * @memberof AdminQuorumChangeAction
     */
    approvalRequest?: ApprovalRequest;
    /**
     * 
     * @type {VerificationRequest}
     * @memberof AdminQuorumChangeAction
     */
    verificationRequest?: VerificationRequest;
    /**
     * 
     * @type {string}
     * @memberof AdminQuorumChangeAction
     */
    state: AdminQuorumChangeActionStateEnum;
    /**
     * 
     * @type {AdminQuorum}
     * @memberof AdminQuorumChangeAction
     */
    oldQuorum: AdminQuorum;
    /**
     * 
     * @type {AdminQuorum}
     * @memberof AdminQuorumChangeAction
     */
    newQuorum: AdminQuorum;
}


/**
 * @export
 */
export const AdminQuorumChangeActionTypeEnum = {
    adminQuorumChange: 'admin_quorum_change'
} as const;
export type AdminQuorumChangeActionTypeEnum = typeof AdminQuorumChangeActionTypeEnum[keyof typeof AdminQuorumChangeActionTypeEnum];

/**
 * @export
 */
export const AdminQuorumChangeActionStateEnum = {
    pendingVerification: 'pending_verification',
    pendingApproval: 'pending_approval',
    created: 'created',
    completed: 'completed',
    aborted: 'aborted',
    failed: 'failed'
} as const;
export type AdminQuorumChangeActionStateEnum = typeof AdminQuorumChangeActionStateEnum[keyof typeof AdminQuorumChangeActionStateEnum];


/**
 * Check if a given object implements the AdminQuorumChangeAction interface.
 */
export function instanceOfAdminQuorumChangeAction(value: object): value is AdminQuorumChangeAction {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    if (!('isPending' in value) || value['isPending'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('oldQuorum' in value) || value['oldQuorum'] === undefined) return false;
    if (!('newQuorum' in value) || value['newQuorum'] === undefined) return false;
    return true;
}

export function AdminQuorumChangeActionFromJSON(json: any): AdminQuorumChangeAction {
    return AdminQuorumChangeActionFromJSONTyped(json, false);
}

export function AdminQuorumChangeActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminQuorumChangeAction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'isPending': json['is_pending'],
        'type': json['type'],
        'createdBy': UserRefFromJSON(json['created_by']),
        'abortedBy': json['aborted_by'] == null ? undefined : UserRefFromJSON(json['aborted_by']),
        'requestId': json['request_id'],
        'approvalRequest': json['approval_request'] == null ? undefined : ApprovalRequestFromJSON(json['approval_request']),
        'verificationRequest': json['verification_request'] == null ? undefined : VerificationRequestFromJSON(json['verification_request']),
        'state': json['state'],
        'oldQuorum': AdminQuorumFromJSON(json['old_quorum']),
        'newQuorum': AdminQuorumFromJSON(json['new_quorum']),
    };
}

export function AdminQuorumChangeActionToJSON(json: any): AdminQuorumChangeAction {
    return AdminQuorumChangeActionToJSONTyped(json, false);
}

export function AdminQuorumChangeActionToJSONTyped(value?: AdminQuorumChangeAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'modified_at': ((value['modifiedAt']).toISOString()),
        'is_pending': value['isPending'],
        'type': value['type'],
        'created_by': UserRefToJSON(value['createdBy']),
        'aborted_by': UserRefToJSON(value['abortedBy']),
        'request_id': value['requestId'],
        'approval_request': ApprovalRequestToJSON(value['approvalRequest']),
        'verification_request': VerificationRequestToJSON(value['verificationRequest']),
        'state': value['state'],
        'old_quorum': AdminQuorumToJSON(value['oldQuorum']),
        'new_quorum': AdminQuorumToJSON(value['newQuorum']),
    };
}

