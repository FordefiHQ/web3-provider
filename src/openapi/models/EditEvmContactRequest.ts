/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EditEvmContactRequest
 */
export interface EditEvmContactRequest {
    /**
     * 
     * @type {string}
     * @memberof EditEvmContactRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EditEvmContactRequest
     */
    type: EditEvmContactRequestTypeEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof EditEvmContactRequest
     */
    chains: Array<EditEvmContactRequestChainsEnum>;
}


/**
 * @export
 */
export const EditEvmContactRequestTypeEnum = {
    evm: 'evm'
} as const;
export type EditEvmContactRequestTypeEnum = typeof EditEvmContactRequestTypeEnum[keyof typeof EditEvmContactRequestTypeEnum];

/**
 * @export
 */
export const EditEvmContactRequestChainsEnum = {
    _1: 'evm_1',
    _5: 'evm_5',
    _10: 'evm_10',
    _16: 'evm_16',
    _56: 'evm_56',
    _100: 'evm_100',
    _137: 'evm_137',
    _169: 'evm_169',
    _250: 'evm_250',
    _324: 'evm_324',
    _1030: 'evm_1030',
    _1100: 'evm_1100',
    _1101: 'evm_1101',
    _1329: 'evm_1329',
    _1729: 'evm_1729',
    _2222: 'evm_2222',
    _4200: 'evm_4200',
    _5000: 'evm_5000',
    _7000: 'evm_7000',
    _7700: 'evm_7700',
    _8453: 'evm_8453',
    _17000: 'evm_17000',
    _80001: 'evm_80001',
    _42161: 'evm_42161',
    _43114: 'evm_43114',
    _59144: 'evm_59144',
    _81457: 'evm_81457',
    _421614: 'evm_421614',
    _534352: 'evm_534352',
    _660279: 'evm_660279',
    _810180: 'evm_810180',
    _11155111: 'evm_11155111',
    ethereumMainnet: 'evm_ethereum_mainnet',
    ethereumGoerli: 'evm_ethereum_goerli',
    optimismMainnet: 'evm_optimism_mainnet',
    flareTestnet: 'evm_flare_testnet',
    bscMainnet: 'evm_bsc_mainnet',
    gnosisMainnet: 'evm_gnosis_mainnet',
    polygonMainnet: 'evm_polygon_mainnet',
    mantaPacificMainnet: 'evm_manta_pacific_mainnet',
    fantomMainnet: 'evm_fantom_mainnet',
    zksyncEraMainnet: 'evm_zksync_era_mainnet',
    confluxMainnet: 'evm_conflux_mainnet',
    dymensionMainnet: 'evm_dymension_mainnet',
    polygonZkevmMainnet: 'evm_polygon_zkevm_mainnet',
    seiMainnet: 'evm_sei_mainnet',
    reyaMainnet: 'evm_reya_mainnet',
    kavaMainnet: 'evm_kava_mainnet',
    merlinMainnet: 'evm_merlin_mainnet',
    mantleMainnet: 'evm_mantle_mainnet',
    zetaMainnet: 'evm_zeta_mainnet',
    cantoMainnet: 'evm_canto_mainnet',
    baseMainnet: 'evm_base_mainnet',
    ethereumHolesky: 'evm_ethereum_holesky',
    polygonMumbai: 'evm_polygon_mumbai',
    arbitrumMainnet: 'evm_arbitrum_mainnet',
    avalancheChain: 'evm_avalanche_chain',
    lineaMainnet: 'evm_linea_mainnet',
    blastMainnet: 'evm_blast_mainnet',
    arbitrumSepolia: 'evm_arbitrum_sepolia',
    scrollMainnet: 'evm_scroll_mainnet',
    xaiMainnet: 'evm_xai_mainnet',
    zklinkNovaMainnet: 'evm_zklink_nova_mainnet',
    ethereumSepolia: 'evm_ethereum_sepolia'
} as const;
export type EditEvmContactRequestChainsEnum = typeof EditEvmContactRequestChainsEnum[keyof typeof EditEvmContactRequestChainsEnum];


/**
 * Check if a given object implements the EditEvmContactRequest interface.
 */
export function instanceOfEditEvmContactRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "chains" in value;

    return isInstance;
}

export function EditEvmContactRequestFromJSON(json: any): EditEvmContactRequest {
    return EditEvmContactRequestFromJSONTyped(json, false);
}

export function EditEvmContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditEvmContactRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'chains': json['chains'],
    };
}

export function EditEvmContactRequestToJSON(value?: EditEvmContactRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'chains': value.chains,
    };
}

