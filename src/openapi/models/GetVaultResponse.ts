/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    BlackBoxVault,
    instanceOfBlackBoxVault,
    BlackBoxVaultFromJSON,
    BlackBoxVaultFromJSONTyped,
    BlackBoxVaultToJSON,
} from './BlackBoxVault';
import {
    CosmosVault,
    instanceOfCosmosVault,
    CosmosVaultFromJSON,
    CosmosVaultFromJSONTyped,
    CosmosVaultToJSON,
} from './CosmosVault';
import {
    EvmVault,
    instanceOfEvmVault,
    EvmVaultFromJSON,
    EvmVaultFromJSONTyped,
    EvmVaultToJSON,
} from './EvmVault';
import {
    SolanaVault,
    instanceOfSolanaVault,
    SolanaVaultFromJSON,
    SolanaVaultFromJSONTyped,
    SolanaVaultToJSON,
} from './SolanaVault';
import {
    UtxoVault,
    instanceOfUtxoVault,
    UtxoVaultFromJSON,
    UtxoVaultFromJSONTyped,
    UtxoVaultToJSON,
} from './UtxoVault';

/**
 * @type GetVaultResponse
 * 
 * @export
 */
export type GetVaultResponse = { type: 'black_box' } & BlackBoxVault | { type: 'cosmos' } & CosmosVault | { type: 'evm' } & EvmVault | { type: 'solana' } & SolanaVault | { type: 'utxo' } & UtxoVault;

export function GetVaultResponseFromJSON(json: any): GetVaultResponse {
    return GetVaultResponseFromJSONTyped(json, false);
}

export function GetVaultResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetVaultResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'black_box':
            return {...BlackBoxVaultFromJSONTyped(json, true), type: 'black_box'};
        case 'cosmos':
            return {...CosmosVaultFromJSONTyped(json, true), type: 'cosmos'};
        case 'evm':
            return {...EvmVaultFromJSONTyped(json, true), type: 'evm'};
        case 'solana':
            return {...SolanaVaultFromJSONTyped(json, true), type: 'solana'};
        case 'utxo':
            return {...UtxoVaultFromJSONTyped(json, true), type: 'utxo'};
        default:
            throw new Error(`No variant of GetVaultResponse exists with 'type=${json['type']}'`);
    }
}

export function GetVaultResponseToJSON(value?: GetVaultResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'black_box':
            return BlackBoxVaultToJSON(value);
        case 'cosmos':
            return CosmosVaultToJSON(value);
        case 'evm':
            return EvmVaultToJSON(value);
        case 'solana':
            return SolanaVaultToJSON(value);
        case 'utxo':
            return UtxoVaultToJSON(value);
        default:
            throw new Error(`No variant of GetVaultResponse exists with 'type=${value['type']}'`);
    }

}

