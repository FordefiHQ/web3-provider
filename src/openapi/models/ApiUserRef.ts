/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserRole } from './UserRole';
import {
    UserRoleFromJSON,
    UserRoleFromJSONTyped,
    UserRoleToJSON,
    UserRoleToJSONTyped,
} from './UserRole';

/**
 * 
 * @export
 * @interface ApiUserRef
 */
export interface ApiUserRef {
    /**
     * 
     * @type {string}
     * @memberof ApiUserRef
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ApiUserRef
     */
    userType: ApiUserRefUserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ApiUserRef
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ApiUserRef
     */
    state: ApiUserRefStateEnum;
    /**
     * 
     * @type {UserRole}
     * @memberof ApiUserRef
     */
    role: UserRole;
}


/**
 * @export
 */
export const ApiUserRefUserTypeEnum = {
    apiUser: 'api_user'
} as const;
export type ApiUserRefUserTypeEnum = typeof ApiUserRefUserTypeEnum[keyof typeof ApiUserRefUserTypeEnum];

/**
 * @export
 */
export const ApiUserRefStateEnum = {
    active: 'active',
    deleted: 'deleted'
} as const;
export type ApiUserRefStateEnum = typeof ApiUserRefStateEnum[keyof typeof ApiUserRefStateEnum];


/**
 * Check if a given object implements the ApiUserRef interface.
 */
export function instanceOfApiUserRef(value: object): value is ApiUserRef {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userType' in value) || value['userType'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function ApiUserRefFromJSON(json: any): ApiUserRef {
    return ApiUserRefFromJSONTyped(json, false);
}

export function ApiUserRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiUserRef {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userType': json['user_type'],
        'name': json['name'],
        'state': json['state'],
        'role': UserRoleFromJSON(json['role']),
    };
}

export function ApiUserRefToJSON(json: any): ApiUserRef {
    return ApiUserRefToJSONTyped(json, false);
}

export function ApiUserRefToJSONTyped(value?: ApiUserRef | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_type': value['userType'],
        'name': value['name'],
        'state': value['state'],
        'role': UserRoleToJSON(value['role']),
    };
}

