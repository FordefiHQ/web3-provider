/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SolanaMessageAddressTableLookupRequest } from './SolanaMessageAddressTableLookupRequest';
import {
    SolanaMessageAddressTableLookupRequestFromJSON,
    SolanaMessageAddressTableLookupRequestFromJSONTyped,
    SolanaMessageAddressTableLookupRequestToJSON,
    SolanaMessageAddressTableLookupRequestToJSONTyped,
} from './SolanaMessageAddressTableLookupRequest';
import type { SolanaMessageVersion } from './SolanaMessageVersion';
import {
    SolanaMessageVersionFromJSON,
    SolanaMessageVersionFromJSONTyped,
    SolanaMessageVersionToJSON,
    SolanaMessageVersionToJSONTyped,
} from './SolanaMessageVersion';
import type { SolanaChainUniqueId } from './SolanaChainUniqueId';
import {
    SolanaChainUniqueIdFromJSON,
    SolanaChainUniqueIdFromJSONTyped,
    SolanaChainUniqueIdToJSON,
    SolanaChainUniqueIdToJSONTyped,
} from './SolanaChainUniqueId';
import type { SolanaTransactionSignaturesRequest } from './SolanaTransactionSignaturesRequest';
import {
    SolanaTransactionSignaturesRequestFromJSON,
    SolanaTransactionSignaturesRequestFromJSONTyped,
    SolanaTransactionSignaturesRequestToJSON,
    SolanaTransactionSignaturesRequestToJSONTyped,
} from './SolanaTransactionSignaturesRequest';
import type { BatchSolanaTransactionRequestDetailsFee } from './BatchSolanaTransactionRequestDetailsFee';
import {
    BatchSolanaTransactionRequestDetailsFeeFromJSON,
    BatchSolanaTransactionRequestDetailsFeeFromJSONTyped,
    BatchSolanaTransactionRequestDetailsFeeToJSON,
    BatchSolanaTransactionRequestDetailsFeeToJSONTyped,
} from './BatchSolanaTransactionRequestDetailsFee';
import type { PushMode } from './PushMode';
import {
    PushModeFromJSON,
    PushModeFromJSONTyped,
    PushModeToJSON,
    PushModeToJSONTyped,
} from './PushMode';
import type { SolanaCompiledInstructionRequest } from './SolanaCompiledInstructionRequest';
import {
    SolanaCompiledInstructionRequestFromJSON,
    SolanaCompiledInstructionRequestFromJSONTyped,
    SolanaCompiledInstructionRequestToJSON,
    SolanaCompiledInstructionRequestToJSONTyped,
} from './SolanaCompiledInstructionRequest';
import type { SolanaTransactionAccountRequest } from './SolanaTransactionAccountRequest';
import {
    SolanaTransactionAccountRequestFromJSON,
    SolanaTransactionAccountRequestFromJSONTyped,
    SolanaTransactionAccountRequestToJSON,
    SolanaTransactionAccountRequestToJSONTyped,
} from './SolanaTransactionAccountRequest';

/**
 * 
 * @export
 * @interface CreateSolanaRawTransactionRequest
 */
export interface CreateSolanaRawTransactionRequest {
    /**
     * 
     * @type {SolanaMessageVersion}
     * @memberof CreateSolanaRawTransactionRequest
     */
    version: SolanaMessageVersion;
    /**
     * 
     * @type {Array<SolanaCompiledInstructionRequest>}
     * @memberof CreateSolanaRawTransactionRequest
     */
    instructions: Array<SolanaCompiledInstructionRequest>;
    /**
     * 
     * @type {Array<SolanaTransactionAccountRequest>}
     * @memberof CreateSolanaRawTransactionRequest
     */
    accounts: Array<SolanaTransactionAccountRequest>;
    /**
     * 
     * @type {Array<SolanaMessageAddressTableLookupRequest>}
     * @memberof CreateSolanaRawTransactionRequest
     */
    addressTableLookups: Array<SolanaMessageAddressTableLookupRequest>;
    /**
     * 
     * @type {Array<SolanaTransactionSignaturesRequest>}
     * @memberof CreateSolanaRawTransactionRequest
     */
    signatures?: Array<SolanaTransactionSignaturesRequest>;
    /**
     * 
     * @type {string}
     * @memberof CreateSolanaRawTransactionRequest
     */
    recentBlockhash?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSolanaRawTransactionRequest
     */
    type: CreateSolanaRawTransactionRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof CreateSolanaRawTransactionRequest
     */
    failOnPredictionFailure?: boolean;
    /**
     * 
     * @type {PushMode}
     * @memberof CreateSolanaRawTransactionRequest
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {BatchSolanaTransactionRequestDetailsFee}
     * @memberof CreateSolanaRawTransactionRequest
     */
    fee?: BatchSolanaTransactionRequestDetailsFee;
    /**
     * 
     * @type {boolean}
     * @memberof CreateSolanaRawTransactionRequest
     */
    skipPrediction?: boolean;
    /**
     * 
     * @type {SolanaChainUniqueId}
     * @memberof CreateSolanaRawTransactionRequest
     */
    chain: SolanaChainUniqueId;
}


/**
 * @export
 */
export const CreateSolanaRawTransactionRequestTypeEnum = {
    solanaRawTransaction: 'solana_raw_transaction'
} as const;
export type CreateSolanaRawTransactionRequestTypeEnum = typeof CreateSolanaRawTransactionRequestTypeEnum[keyof typeof CreateSolanaRawTransactionRequestTypeEnum];


/**
 * Check if a given object implements the CreateSolanaRawTransactionRequest interface.
 */
export function instanceOfCreateSolanaRawTransactionRequest(value: object): value is CreateSolanaRawTransactionRequest {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('instructions' in value) || value['instructions'] === undefined) return false;
    if (!('accounts' in value) || value['accounts'] === undefined) return false;
    if (!('addressTableLookups' in value) || value['addressTableLookups'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    return true;
}

export function CreateSolanaRawTransactionRequestFromJSON(json: any): CreateSolanaRawTransactionRequest {
    return CreateSolanaRawTransactionRequestFromJSONTyped(json, false);
}

export function CreateSolanaRawTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSolanaRawTransactionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'version': SolanaMessageVersionFromJSON(json['version']),
        'instructions': ((json['instructions'] as Array<any>).map(SolanaCompiledInstructionRequestFromJSON)),
        'accounts': ((json['accounts'] as Array<any>).map(SolanaTransactionAccountRequestFromJSON)),
        'addressTableLookups': ((json['address_table_lookups'] as Array<any>).map(SolanaMessageAddressTableLookupRequestFromJSON)),
        'signatures': json['signatures'] == null ? undefined : ((json['signatures'] as Array<any>).map(SolanaTransactionSignaturesRequestFromJSON)),
        'recentBlockhash': json['recent_blockhash'] == null ? undefined : json['recent_blockhash'],
        'type': json['type'],
        'failOnPredictionFailure': json['fail_on_prediction_failure'] == null ? undefined : json['fail_on_prediction_failure'],
        'pushMode': json['push_mode'] == null ? undefined : PushModeFromJSON(json['push_mode']),
        'fee': json['fee'] == null ? undefined : BatchSolanaTransactionRequestDetailsFeeFromJSON(json['fee']),
        'skipPrediction': json['skip_prediction'] == null ? undefined : json['skip_prediction'],
        'chain': SolanaChainUniqueIdFromJSON(json['chain']),
    };
}

export function CreateSolanaRawTransactionRequestToJSON(json: any): CreateSolanaRawTransactionRequest {
    return CreateSolanaRawTransactionRequestToJSONTyped(json, false);
}

export function CreateSolanaRawTransactionRequestToJSONTyped(value?: CreateSolanaRawTransactionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': SolanaMessageVersionToJSON(value['version']),
        'instructions': ((value['instructions'] as Array<any>).map(SolanaCompiledInstructionRequestToJSON)),
        'accounts': ((value['accounts'] as Array<any>).map(SolanaTransactionAccountRequestToJSON)),
        'address_table_lookups': ((value['addressTableLookups'] as Array<any>).map(SolanaMessageAddressTableLookupRequestToJSON)),
        'signatures': value['signatures'] == null ? undefined : ((value['signatures'] as Array<any>).map(SolanaTransactionSignaturesRequestToJSON)),
        'recent_blockhash': value['recentBlockhash'],
        'type': value['type'],
        'fail_on_prediction_failure': value['failOnPredictionFailure'],
        'push_mode': PushModeToJSON(value['pushMode']),
        'fee': BatchSolanaTransactionRequestDetailsFeeToJSON(value['fee']),
        'skip_prediction': value['skipPrediction'],
        'chain': SolanaChainUniqueIdToJSON(value['chain']),
    };
}

