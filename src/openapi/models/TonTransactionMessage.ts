/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TonAccountRepr } from './TonAccountRepr';
import {
    TonAccountReprFromJSON,
    TonAccountReprToJSON,
} from './TonAccountRepr';

/**
 * 
 * @export
 * @interface TonTransactionMessage
 */
export interface TonTransactionMessage {
    /**
     * 
     * @type {TonAccountRepr}
     * @memberof TonTransactionMessage
     */
    address: TonAccountRepr;
    /**
     * 
     * @type {string}
     * @memberof TonTransactionMessage
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof TonTransactionMessage
     */
    payload?: string;
    /**
     * 
     * @type {string}
     * @memberof TonTransactionMessage
     */
    stateInit?: string;
    /**
     * 
     * @type {string}
     * @memberof TonTransactionMessage
     */
    comment?: string;
}

export function TonTransactionMessageFromJSON(json: any): TonTransactionMessage {
    return TonTransactionMessageFromJSONTyped(json, false);
}

function TonTransactionMessageFromJSONTyped(json: any, _ignoreDiscriminator: boolean): TonTransactionMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'address': TonAccountReprFromJSON(json['address']),
        'amount': json['amount'],
        'payload': json['payload'] == null ? undefined : json['payload'],
        'stateInit': json['state_init'] == null ? undefined : json['state_init'],
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function TonTransactionMessageToJSON(json: any): TonTransactionMessage {
    return TonTransactionMessageToJSONTyped(json, false);
}

function TonTransactionMessageToJSONTyped(value?: TonTransactionMessage | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': TonAccountReprToJSON(value['address']),
        'amount': value['amount'],
        'payload': value['payload'],
        'state_init': value['stateInit'],
        'comment': value['comment'],
    };
}

