/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedTonChain } from './EnrichedTonChain';
import {
    EnrichedTonChainFromJSON,
    EnrichedTonChainFromJSONTyped,
    EnrichedTonChainToJSON,
    EnrichedTonChainToJSONTyped,
} from './EnrichedTonChain';

/**
 * 
 * @export
 * @interface TonAddressBookContactAddress
 */
export interface TonAddressBookContactAddress {
    /**
     * 
     * @type {string}
     * @memberof TonAddressBookContactAddress
     */
    chainType: TonAddressBookContactAddressChainTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TonAddressBookContactAddress
     */
    address: string;
    /**
     * 
     * @type {Array<EnrichedTonChain>}
     * @memberof TonAddressBookContactAddress
     */
    chains: Array<EnrichedTonChain>;
    /**
     * 
     * @type {string}
     * @memberof TonAddressBookContactAddress
     */
    comment?: string;
}


/**
 * @export
 */
export const TonAddressBookContactAddressChainTypeEnum = {
    ton: 'ton'
} as const;
export type TonAddressBookContactAddressChainTypeEnum = typeof TonAddressBookContactAddressChainTypeEnum[keyof typeof TonAddressBookContactAddressChainTypeEnum];


/**
 * Check if a given object implements the TonAddressBookContactAddress interface.
 */
export function instanceOfTonAddressBookContactAddress(value: object): value is TonAddressBookContactAddress {
    if (!('chainType' in value) || value['chainType'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('chains' in value) || value['chains'] === undefined) return false;
    return true;
}

export function TonAddressBookContactAddressFromJSON(json: any): TonAddressBookContactAddress {
    return TonAddressBookContactAddressFromJSONTyped(json, false);
}

export function TonAddressBookContactAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): TonAddressBookContactAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'address': json['address'],
        'chains': ((json['chains'] as Array<any>).map(EnrichedTonChainFromJSON)),
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function TonAddressBookContactAddressToJSON(json: any): TonAddressBookContactAddress {
    return TonAddressBookContactAddressToJSONTyped(json, false);
}

export function TonAddressBookContactAddressToJSONTyped(value?: TonAddressBookContactAddress | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain_type': value['chainType'],
        'address': value['address'],
        'chains': ((value['chains'] as Array<any>).map(EnrichedTonChainToJSON)),
        'comment': value['comment'],
    };
}

