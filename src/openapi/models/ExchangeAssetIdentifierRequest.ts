/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExchangeType } from './ExchangeType';
import {
    ExchangeTypeFromJSON,
    ExchangeTypeFromJSONTyped,
    ExchangeTypeToJSON,
    ExchangeTypeToJSONTyped,
} from './ExchangeType';

/**
 * 
 * @export
 * @interface ExchangeAssetIdentifierRequest
 */
export interface ExchangeAssetIdentifierRequest {
    /**
     * 
     * @type {string}
     * @memberof ExchangeAssetIdentifierRequest
     */
    type: ExchangeAssetIdentifierRequestTypeEnum;
    /**
     * 
     * @type {ExchangeType}
     * @memberof ExchangeAssetIdentifierRequest
     */
    exchangeType: ExchangeType;
    /**
     * 
     * @type {string}
     * @memberof ExchangeAssetIdentifierRequest
     */
    assetSymbol: string;
}


/**
 * @export
 */
export const ExchangeAssetIdentifierRequestTypeEnum = {
    exchange: 'exchange'
} as const;
export type ExchangeAssetIdentifierRequestTypeEnum = typeof ExchangeAssetIdentifierRequestTypeEnum[keyof typeof ExchangeAssetIdentifierRequestTypeEnum];


/**
 * Check if a given object implements the ExchangeAssetIdentifierRequest interface.
 */
export function instanceOfExchangeAssetIdentifierRequest(value: object): value is ExchangeAssetIdentifierRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('exchangeType' in value) || value['exchangeType'] === undefined) return false;
    if (!('assetSymbol' in value) || value['assetSymbol'] === undefined) return false;
    return true;
}

export function ExchangeAssetIdentifierRequestFromJSON(json: any): ExchangeAssetIdentifierRequest {
    return ExchangeAssetIdentifierRequestFromJSONTyped(json, false);
}

export function ExchangeAssetIdentifierRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangeAssetIdentifierRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'exchangeType': ExchangeTypeFromJSON(json['exchange_type']),
        'assetSymbol': json['asset_symbol'],
    };
}

export function ExchangeAssetIdentifierRequestToJSON(json: any): ExchangeAssetIdentifierRequest {
    return ExchangeAssetIdentifierRequestToJSONTyped(json, false);
}

export function ExchangeAssetIdentifierRequestToJSONTyped(value?: ExchangeAssetIdentifierRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'exchange_type': ExchangeTypeToJSON(value['exchangeType']),
        'asset_symbol': value['assetSymbol'],
    };
}

