/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProofType
 */
export interface ProofType {
    /**
     * 
     * @type {string}
     * @memberof ProofType
     */
    type: ProofTypeTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ProofType
     */
    proof: string;
}


/**
 * @export
 */
export const ProofTypeTypeEnum = {
    proof: 'proof'
} as const;
export type ProofTypeTypeEnum = typeof ProofTypeTypeEnum[keyof typeof ProofTypeTypeEnum];


/**
 * Check if a given object implements the ProofType interface.
 */
export function instanceOfProofType(value: object): value is ProofType {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('proof' in value) || value['proof'] === undefined) return false;
    return true;
}

export function ProofTypeFromJSON(json: any): ProofType {
    return ProofTypeFromJSONTyped(json, false);
}

export function ProofTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProofType {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'proof': json['proof'],
    };
}

export function ProofTypeToJSON(json: any): ProofType {
    return ProofTypeToJSONTyped(json, false);
}

export function ProofTypeToJSONTyped(value?: ProofType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'proof': value['proof'],
    };
}

