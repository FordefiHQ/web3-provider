/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosChainUniqueId } from './CosmosChainUniqueId';
import {
    CosmosChainUniqueIdFromJSON,
    CosmosChainUniqueIdFromJSONTyped,
    CosmosChainUniqueIdToJSON,
} from './CosmosChainUniqueId';

/**
 * 
 * @export
 * @interface CosmosBechAddress
 */
export interface CosmosBechAddress {
    /**
     * 
     * @type {CosmosChainUniqueId}
     * @memberof CosmosBechAddress
     */
    chain: CosmosChainUniqueId;
    /**
     * 
     * @type {string}
     * @memberof CosmosBechAddress
     */
    address: string;
}

/**
 * Check if a given object implements the CosmosBechAddress interface.
 */
export function instanceOfCosmosBechAddress(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function CosmosBechAddressFromJSON(json: any): CosmosBechAddress {
    return CosmosBechAddressFromJSONTyped(json, false);
}

export function CosmosBechAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosBechAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chain': CosmosChainUniqueIdFromJSON(json['chain']),
        'address': json['address'],
    };
}

export function CosmosBechAddressToJSON(value?: CosmosBechAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chain': CosmosChainUniqueIdToJSON(value.chain),
        'address': value.address,
    };
}

