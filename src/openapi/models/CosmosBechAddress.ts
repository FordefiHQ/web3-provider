/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CosmosChainUniqueId } from './CosmosChainUniqueId';
import {
    CosmosChainUniqueIdFromJSON,
    CosmosChainUniqueIdToJSON,
} from './CosmosChainUniqueId';
import type { CosmosKeyType } from './CosmosKeyType';
import {
    CosmosKeyTypeFromJSON,
    CosmosKeyTypeToJSON,
} from './CosmosKeyType';

/**
 * 
 * @export
 * @interface CosmosBechAddress
 */
export interface CosmosBechAddress {
    /**
     * 
     * @type {CosmosChainUniqueId}
     * @memberof CosmosBechAddress
     */
    chain: CosmosChainUniqueId;
    /**
     * 
     * @type {string}
     * @memberof CosmosBechAddress
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof CosmosBechAddress
     */
    hexRepr?: string;
    /**
     * 
     * @type {CosmosKeyType}
     * @memberof CosmosBechAddress
     */
    keyType?: CosmosKeyType;
}

export function CosmosBechAddressFromJSON(json: any): CosmosBechAddress {
    return CosmosBechAddressFromJSONTyped(json, false);
}

function CosmosBechAddressFromJSONTyped(json: any, _ignoreDiscriminator: boolean): CosmosBechAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'chain': CosmosChainUniqueIdFromJSON(json['chain']),
        'address': json['address'],
        'hexRepr': json['hex_repr'] == null ? undefined : json['hex_repr'],
        'keyType': json['key_type'] == null ? undefined : CosmosKeyTypeFromJSON(json['key_type']),
    };
}

export function CosmosBechAddressToJSON(json: any): CosmosBechAddress {
    return CosmosBechAddressToJSONTyped(json, false);
}

function CosmosBechAddressToJSONTyped(value?: CosmosBechAddress | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain': CosmosChainUniqueIdToJSON(value['chain']),
        'address': value['address'],
        'hex_repr': value['hexRepr'],
        'key_type': CosmosKeyTypeToJSON(value['keyType']),
    };
}

