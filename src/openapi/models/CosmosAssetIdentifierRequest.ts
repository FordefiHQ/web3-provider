/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosAssetIdentifierDetails } from './CosmosAssetIdentifierDetails';
import {
    CosmosAssetIdentifierDetailsFromJSON,
    CosmosAssetIdentifierDetailsFromJSONTyped,
    CosmosAssetIdentifierDetailsToJSON,
    CosmosAssetIdentifierDetailsToJSONTyped,
} from './CosmosAssetIdentifierDetails';

/**
 * 
 * @export
 * @interface CosmosAssetIdentifierRequest
 */
export interface CosmosAssetIdentifierRequest {
    /**
     * 
     * @type {string}
     * @memberof CosmosAssetIdentifierRequest
     */
    type: CosmosAssetIdentifierRequestTypeEnum;
    /**
     * 
     * @type {CosmosAssetIdentifierDetails}
     * @memberof CosmosAssetIdentifierRequest
     */
    details: CosmosAssetIdentifierDetails;
}


/**
 * @export
 */
export const CosmosAssetIdentifierRequestTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type CosmosAssetIdentifierRequestTypeEnum = typeof CosmosAssetIdentifierRequestTypeEnum[keyof typeof CosmosAssetIdentifierRequestTypeEnum];


/**
 * Check if a given object implements the CosmosAssetIdentifierRequest interface.
 */
export function instanceOfCosmosAssetIdentifierRequest(value: object): value is CosmosAssetIdentifierRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('details' in value) || value['details'] === undefined) return false;
    return true;
}

export function CosmosAssetIdentifierRequestFromJSON(json: any): CosmosAssetIdentifierRequest {
    return CosmosAssetIdentifierRequestFromJSONTyped(json, false);
}

export function CosmosAssetIdentifierRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosAssetIdentifierRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'details': CosmosAssetIdentifierDetailsFromJSON(json['details']),
    };
}

export function CosmosAssetIdentifierRequestToJSON(json: any): CosmosAssetIdentifierRequest {
    return CosmosAssetIdentifierRequestToJSONTyped(json, false);
}

export function CosmosAssetIdentifierRequestToJSONTyped(value?: CosmosAssetIdentifierRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'details': CosmosAssetIdentifierDetailsToJSON(value['details']),
    };
}

