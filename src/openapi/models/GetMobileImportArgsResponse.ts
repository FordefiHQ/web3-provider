/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MobileKeyImportArgs } from './MobileKeyImportArgs';
import {
    MobileKeyImportArgsFromJSON,
    MobileKeyImportArgsFromJSONTyped,
    MobileKeyImportArgsToJSON,
    MobileKeyImportArgsToJSONTyped,
} from './MobileKeyImportArgs';

/**
 * 
 * @export
 * @interface GetMobileImportArgsResponse
 */
export interface GetMobileImportArgsResponse {
    /**
     * 
     * @type {string}
     * @memberof GetMobileImportArgsResponse
     */
    salt: string;
    /**
     * 
     * @type {Array<MobileKeyImportArgs>}
     * @memberof GetMobileImportArgsResponse
     */
    importArgs: Array<MobileKeyImportArgs>;
}

/**
 * Check if a given object implements the GetMobileImportArgsResponse interface.
 */
export function instanceOfGetMobileImportArgsResponse(value: object): value is GetMobileImportArgsResponse {
    if (!('salt' in value) || value['salt'] === undefined) return false;
    if (!('importArgs' in value) || value['importArgs'] === undefined) return false;
    return true;
}

export function GetMobileImportArgsResponseFromJSON(json: any): GetMobileImportArgsResponse {
    return GetMobileImportArgsResponseFromJSONTyped(json, false);
}

export function GetMobileImportArgsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMobileImportArgsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'salt': json['salt'],
        'importArgs': ((json['import_args'] as Array<any>).map(MobileKeyImportArgsFromJSON)),
    };
}

export function GetMobileImportArgsResponseToJSON(json: any): GetMobileImportArgsResponse {
    return GetMobileImportArgsResponseToJSONTyped(json, false);
}

export function GetMobileImportArgsResponseToJSONTyped(value?: GetMobileImportArgsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'salt': value['salt'],
        'import_args': ((value['importArgs'] as Array<any>).map(MobileKeyImportArgsToJSON)),
    };
}

