/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExchangeTransferEffect } from './ExchangeTransferEffect';
import {
    ExchangeTransferEffectFromJSON,
    ExchangeTransferEffectFromJSONTyped,
    ExchangeTransferEffectToJSON,
    ExchangeTransferEffectToJSONTyped,
} from './ExchangeTransferEffect';
import type { ExchangeBalanceChangeEffect } from './ExchangeBalanceChangeEffect';
import {
    ExchangeBalanceChangeEffectFromJSON,
    ExchangeBalanceChangeEffectFromJSONTyped,
    ExchangeBalanceChangeEffectToJSON,
    ExchangeBalanceChangeEffectToJSONTyped,
} from './ExchangeBalanceChangeEffect';

/**
 * 
 * @export
 * @interface ExchangeEffects
 */
export interface ExchangeEffects {
    /**
     * 
     * @type {Array<ExchangeBalanceChangeEffect>}
     * @memberof ExchangeEffects
     */
    balanceChanges: Array<ExchangeBalanceChangeEffect>;
    /**
     * 
     * @type {Array<ExchangeTransferEffect>}
     * @memberof ExchangeEffects
     */
    transfers: Array<ExchangeTransferEffect>;
}

/**
 * Check if a given object implements the ExchangeEffects interface.
 */
export function instanceOfExchangeEffects(value: object): value is ExchangeEffects {
    if (!('balanceChanges' in value) || value['balanceChanges'] === undefined) return false;
    if (!('transfers' in value) || value['transfers'] === undefined) return false;
    return true;
}

export function ExchangeEffectsFromJSON(json: any): ExchangeEffects {
    return ExchangeEffectsFromJSONTyped(json, false);
}

export function ExchangeEffectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangeEffects {
    if (json == null) {
        return json;
    }
    return {
        
        'balanceChanges': ((json['balance_changes'] as Array<any>).map(ExchangeBalanceChangeEffectFromJSON)),
        'transfers': ((json['transfers'] as Array<any>).map(ExchangeTransferEffectFromJSON)),
    };
}

export function ExchangeEffectsToJSON(json: any): ExchangeEffects {
    return ExchangeEffectsToJSONTyped(json, false);
}

export function ExchangeEffectsToJSONTyped(value?: ExchangeEffects | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'balance_changes': ((value['balanceChanges'] as Array<any>).map(ExchangeBalanceChangeEffectToJSON)),
        'transfers': ((value['transfers'] as Array<any>).map(ExchangeTransferEffectToJSON)),
    };
}

