/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeyShares } from './KeyShares';
import {
    KeySharesFromJSON,
    KeySharesFromJSONTyped,
    KeySharesToJSON,
    KeySharesToJSONTyped,
} from './KeyShares';

/**
 * 
 * @export
 * @interface KeysetKey
 */
export interface KeysetKey {
    /**
     * 
     * @type {string}
     * @memberof KeysetKey
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof KeysetKey
     */
    xpub: string;
    /**
     * 
     * @type {KeyShares}
     * @memberof KeysetKey
     */
    encryptedShares: KeyShares;
    /**
     * 
     * @type {string}
     * @memberof KeysetKey
     */
    chainCode: string;
}

/**
 * Check if a given object implements the KeysetKey interface.
 */
export function instanceOfKeysetKey(value: object): value is KeysetKey {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('xpub' in value) || value['xpub'] === undefined) return false;
    if (!('encryptedShares' in value) || value['encryptedShares'] === undefined) return false;
    if (!('chainCode' in value) || value['chainCode'] === undefined) return false;
    return true;
}

export function KeysetKeyFromJSON(json: any): KeysetKey {
    return KeysetKeyFromJSONTyped(json, false);
}

export function KeysetKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeysetKey {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'xpub': json['xpub'],
        'encryptedShares': KeySharesFromJSON(json['encrypted_shares']),
        'chainCode': json['chain_code'],
    };
}

export function KeysetKeyToJSON(json: any): KeysetKey {
    return KeysetKeyToJSONTyped(json, false);
}

export function KeysetKeyToJSONTyped(value?: KeysetKey | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'xpub': value['xpub'],
        'encrypted_shares': KeySharesToJSON(value['encryptedShares']),
        'chain_code': value['chainCode'],
    };
}

