/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StarknetTypedMessageRequest } from './StarknetTypedMessageRequest';
import {
    StarknetTypedMessageRequestFromJSON,
    StarknetTypedMessageRequestFromJSONTyped,
    StarknetTypedMessageRequestToJSON,
} from './StarknetTypedMessageRequest';

/**
 * 
 * @export
 * @interface PredictStarknetMessageRequest
 */
export interface PredictStarknetMessageRequest {
    /**
     * 
     * @type {string}
     * @memberof PredictStarknetMessageRequest
     */
    vaultId: string;
    /**
     * 
     * @type {string}
     * @memberof PredictStarknetMessageRequest
     */
    type: PredictStarknetMessageRequestTypeEnum;
    /**
     * 
     * @type {StarknetTypedMessageRequest}
     * @memberof PredictStarknetMessageRequest
     */
    details: StarknetTypedMessageRequest;
}


/**
 * @export
 */
export const PredictStarknetMessageRequestTypeEnum = {
    starknetMessage: 'starknet_message'
} as const;
export type PredictStarknetMessageRequestTypeEnum = typeof PredictStarknetMessageRequestTypeEnum[keyof typeof PredictStarknetMessageRequestTypeEnum];


/**
 * Check if a given object implements the PredictStarknetMessageRequest interface.
 */
export function instanceOfPredictStarknetMessageRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "vaultId" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "details" in value;

    return isInstance;
}

export function PredictStarknetMessageRequestFromJSON(json: any): PredictStarknetMessageRequest {
    return PredictStarknetMessageRequestFromJSONTyped(json, false);
}

export function PredictStarknetMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictStarknetMessageRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vaultId': json['vault_id'],
        'type': json['type'],
        'details': StarknetTypedMessageRequestFromJSON(json['details']),
    };
}

export function PredictStarknetMessageRequestToJSON(value?: PredictStarknetMessageRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vault_id': value.vaultId,
        'type': value.type,
        'details': StarknetTypedMessageRequestToJSON(value.details),
    };
}

