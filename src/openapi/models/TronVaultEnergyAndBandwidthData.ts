/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TronVaultEnergyAndBandwidthData
 */
export interface TronVaultEnergyAndBandwidthData {
    /**
     * 
     * @type {number}
     * @memberof TronVaultEnergyAndBandwidthData
     */
    energyUsed: number;
    /**
     * 
     * @type {number}
     * @memberof TronVaultEnergyAndBandwidthData
     */
    energyLimit: number;
    /**
     * 
     * @type {number}
     * @memberof TronVaultEnergyAndBandwidthData
     */
    bandwidthUsed: number;
    /**
     * 
     * @type {number}
     * @memberof TronVaultEnergyAndBandwidthData
     */
    bandwidthLimit: number;
}

/**
 * Check if a given object implements the TronVaultEnergyAndBandwidthData interface.
 */
export function instanceOfTronVaultEnergyAndBandwidthData(value: object): value is TronVaultEnergyAndBandwidthData {
    if (!('energyUsed' in value) || value['energyUsed'] === undefined) return false;
    if (!('energyLimit' in value) || value['energyLimit'] === undefined) return false;
    if (!('bandwidthUsed' in value) || value['bandwidthUsed'] === undefined) return false;
    if (!('bandwidthLimit' in value) || value['bandwidthLimit'] === undefined) return false;
    return true;
}

export function TronVaultEnergyAndBandwidthDataFromJSON(json: any): TronVaultEnergyAndBandwidthData {
    return TronVaultEnergyAndBandwidthDataFromJSONTyped(json, false);
}

export function TronVaultEnergyAndBandwidthDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TronVaultEnergyAndBandwidthData {
    if (json == null) {
        return json;
    }
    return {
        
        'energyUsed': json['energy_used'],
        'energyLimit': json['energy_limit'],
        'bandwidthUsed': json['bandwidth_used'],
        'bandwidthLimit': json['bandwidth_limit'],
    };
}

export function TronVaultEnergyAndBandwidthDataToJSON(json: any): TronVaultEnergyAndBandwidthData {
    return TronVaultEnergyAndBandwidthDataToJSONTyped(json, false);
}

export function TronVaultEnergyAndBandwidthDataToJSONTyped(value?: TronVaultEnergyAndBandwidthData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'energy_used': value['energyUsed'],
        'energy_limit': value['energyLimit'],
        'bandwidth_used': value['bandwidthUsed'],
        'bandwidth_limit': value['bandwidthLimit'],
    };
}

