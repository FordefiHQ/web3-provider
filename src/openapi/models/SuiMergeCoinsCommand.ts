/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SuiCommandArgument } from './SuiCommandArgument';
import {
    SuiCommandArgumentFromJSON,
    SuiCommandArgumentFromJSONTyped,
    SuiCommandArgumentToJSON,
    SuiCommandArgumentToJSONTyped,
} from './SuiCommandArgument';

/**
 * 
 * @export
 * @interface SuiMergeCoinsCommand
 */
export interface SuiMergeCoinsCommand {
    /**
     * 
     * @type {string}
     * @memberof SuiMergeCoinsCommand
     */
    type: SuiMergeCoinsCommandTypeEnum;
    /**
     * 
     * @type {Array<SuiCommandArgument>}
     * @memberof SuiMergeCoinsCommand
     */
    sourceCoinObjects: Array<SuiCommandArgument>;
    /**
     * 
     * @type {SuiCommandArgument}
     * @memberof SuiMergeCoinsCommand
     */
    destinationCoinObject: SuiCommandArgument;
}


/**
 * @export
 */
export const SuiMergeCoinsCommandTypeEnum = {
    mergeCoins: 'merge_coins'
} as const;
export type SuiMergeCoinsCommandTypeEnum = typeof SuiMergeCoinsCommandTypeEnum[keyof typeof SuiMergeCoinsCommandTypeEnum];


/**
 * Check if a given object implements the SuiMergeCoinsCommand interface.
 */
export function instanceOfSuiMergeCoinsCommand(value: object): value is SuiMergeCoinsCommand {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('sourceCoinObjects' in value) || value['sourceCoinObjects'] === undefined) return false;
    if (!('destinationCoinObject' in value) || value['destinationCoinObject'] === undefined) return false;
    return true;
}

export function SuiMergeCoinsCommandFromJSON(json: any): SuiMergeCoinsCommand {
    return SuiMergeCoinsCommandFromJSONTyped(json, false);
}

export function SuiMergeCoinsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiMergeCoinsCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'sourceCoinObjects': ((json['source_coin_objects'] as Array<any>).map(SuiCommandArgumentFromJSON)),
        'destinationCoinObject': SuiCommandArgumentFromJSON(json['destination_coin_object']),
    };
}

export function SuiMergeCoinsCommandToJSON(json: any): SuiMergeCoinsCommand {
    return SuiMergeCoinsCommandToJSONTyped(json, false);
}

export function SuiMergeCoinsCommandToJSONTyped(value?: SuiMergeCoinsCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'source_coin_objects': ((value['sourceCoinObjects'] as Array<any>).map(SuiCommandArgumentToJSON)),
        'destination_coin_object': SuiCommandArgumentToJSON(value['destinationCoinObject']),
    };
}

