/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SuiImmOrOwnedObjectRefInputArgument } from './SuiImmOrOwnedObjectRefInputArgument';
import {
    SuiImmOrOwnedObjectRefInputArgumentFromJSONTyped,
    SuiImmOrOwnedObjectRefInputArgumentToJSON,
} from './SuiImmOrOwnedObjectRefInputArgument';
import type { SuiPartialObjectRefInputArgument } from './SuiPartialObjectRefInputArgument';
import {
    SuiPartialObjectRefInputArgumentFromJSONTyped,
    SuiPartialObjectRefInputArgumentToJSON,
} from './SuiPartialObjectRefInputArgument';
import type { SuiReceivingObjectRefInputArgument } from './SuiReceivingObjectRefInputArgument';
import {
    SuiReceivingObjectRefInputArgumentFromJSONTyped,
    SuiReceivingObjectRefInputArgumentToJSON,
} from './SuiReceivingObjectRefInputArgument';
import type { SuiSharedObjectRefInputArgument } from './SuiSharedObjectRefInputArgument';
import {
    SuiSharedObjectRefInputArgumentFromJSONTyped,
    SuiSharedObjectRefInputArgumentToJSON,
} from './SuiSharedObjectRefInputArgument';

/**
 * 
 * @export
 * @type SuiObjectInputArgumentDetails
 */
export type SuiObjectInputArgumentDetails = { type: 'imm_or_owned' } & SuiImmOrOwnedObjectRefInputArgument | { type: 'partial' } & SuiPartialObjectRefInputArgument | { type: 'receiving' } & SuiReceivingObjectRefInputArgument | { type: 'shared' } & SuiSharedObjectRefInputArgument;

export function SuiObjectInputArgumentDetailsFromJSON(json: any): SuiObjectInputArgumentDetails {
    return SuiObjectInputArgumentDetailsFromJSONTyped(json, false);
}

function SuiObjectInputArgumentDetailsFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SuiObjectInputArgumentDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'imm_or_owned':
            return Object.assign({}, SuiImmOrOwnedObjectRefInputArgumentFromJSONTyped(json, true), { type: 'imm_or_owned' } as const);
        case 'partial':
            return Object.assign({}, SuiPartialObjectRefInputArgumentFromJSONTyped(json, true), { type: 'partial' } as const);
        case 'receiving':
            return Object.assign({}, SuiReceivingObjectRefInputArgumentFromJSONTyped(json, true), { type: 'receiving' } as const);
        case 'shared':
            return Object.assign({}, SuiSharedObjectRefInputArgumentFromJSONTyped(json, true), { type: 'shared' } as const);
        default:
            throw new Error(`No variant of SuiObjectInputArgumentDetails exists with 'type=${json['type']}'`);
    }
}

export function SuiObjectInputArgumentDetailsToJSON(json: any): any {
    return SuiObjectInputArgumentDetailsToJSONTyped(json, false);
}

function SuiObjectInputArgumentDetailsToJSONTyped(value?: SuiObjectInputArgumentDetails | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'imm_or_owned':
            return Object.assign({}, SuiImmOrOwnedObjectRefInputArgumentToJSON(value), { type: 'imm_or_owned' } as const);
        case 'partial':
            return Object.assign({}, SuiPartialObjectRefInputArgumentToJSON(value), { type: 'partial' } as const);
        case 'receiving':
            return Object.assign({}, SuiReceivingObjectRefInputArgumentToJSON(value), { type: 'receiving' } as const);
        case 'shared':
            return Object.assign({}, SuiSharedObjectRefInputArgumentToJSON(value), { type: 'shared' } as const);
        default:
            throw new Error(`No variant of SuiObjectInputArgumentDetails exists with 'type=${value['type']}'`);
    }

}

