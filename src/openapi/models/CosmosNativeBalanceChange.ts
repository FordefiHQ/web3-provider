/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CosmosNativeCoinInfo } from './CosmosNativeCoinInfo';
import {
    CosmosNativeCoinInfoFromJSON,
    CosmosNativeCoinInfoFromJSONTyped,
    CosmosNativeCoinInfoToJSON,
} from './CosmosNativeCoinInfo';
import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
    EnrichedCosmosBechAddressFromJSONTyped,
    EnrichedCosmosBechAddressToJSON,
} from './EnrichedCosmosBechAddress';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
} from './Price';

/**
 * 
 * @export
 * @interface CosmosNativeBalanceChange
 */
export interface CosmosNativeBalanceChange {
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosNativeBalanceChange
     */
    owner: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {string}
     * @memberof CosmosNativeBalanceChange
     */
    diff: string;
    /**
     * 
     * @type {Price}
     * @memberof CosmosNativeBalanceChange
     */
    price?: Price;
    /**
     * 
     * @type {string}
     * @memberof CosmosNativeBalanceChange
     */
    type: CosmosNativeBalanceChangeTypeEnum;
    /**
     * 
     * @type {CosmosNativeCoinInfo}
     * @memberof CosmosNativeBalanceChange
     */
    coinInfo: CosmosNativeCoinInfo;
}


/**
 * @export
 */
export const CosmosNativeBalanceChangeTypeEnum = {
    native: 'native'
} as const;
export type CosmosNativeBalanceChangeTypeEnum = typeof CosmosNativeBalanceChangeTypeEnum[keyof typeof CosmosNativeBalanceChangeTypeEnum];


/**
 * Check if a given object implements the CosmosNativeBalanceChange interface.
 */
export function instanceOfCosmosNativeBalanceChange(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "diff" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "coinInfo" in value;

    return isInstance;
}

export function CosmosNativeBalanceChangeFromJSON(json: any): CosmosNativeBalanceChange {
    return CosmosNativeBalanceChangeFromJSONTyped(json, false);
}

export function CosmosNativeBalanceChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosNativeBalanceChange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'owner': EnrichedCosmosBechAddressFromJSON(json['owner']),
        'diff': json['diff'],
        'price': !exists(json, 'price') ? undefined : PriceFromJSON(json['price']),
        'type': json['type'],
        'coinInfo': CosmosNativeCoinInfoFromJSON(json['coin_info']),
    };
}

export function CosmosNativeBalanceChangeToJSON(value?: CosmosNativeBalanceChange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'owner': EnrichedCosmosBechAddressToJSON(value.owner),
        'diff': value.diff,
        'price': PriceToJSON(value.price),
        'type': value.type,
        'coin_info': CosmosNativeCoinInfoToJSON(value.coinInfo),
    };
}

