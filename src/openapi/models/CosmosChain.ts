/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CosmosChainUniqueId } from './CosmosChainUniqueId';
import {
    CosmosChainUniqueIdFromJSON,
    CosmosChainUniqueIdFromJSONTyped,
    CosmosChainUniqueIdToJSON,
    CosmosChainUniqueIdToJSONTyped,
} from './CosmosChainUniqueId';

/**
 * 
 * @export
 * @interface CosmosChain
 */
export interface CosmosChain {
    /**
     * 
     * @type {string}
     * @memberof CosmosChain
     */
    chainType: CosmosChainChainTypeEnum;
    /**
     * 
     * @type {CosmosChainUniqueId}
     * @memberof CosmosChain
     */
    uniqueId: CosmosChainUniqueId;
}


/**
 * @export
 */
export const CosmosChainChainTypeEnum = {
    cosmos: 'cosmos'
} as const;
export type CosmosChainChainTypeEnum = typeof CosmosChainChainTypeEnum[keyof typeof CosmosChainChainTypeEnum];


/**
 * Check if a given object implements the CosmosChain interface.
 */
export function instanceOfCosmosChain(value: object): value is CosmosChain {
    if (!('chainType' in value) || value['chainType'] === undefined) return false;
    if (!('uniqueId' in value) || value['uniqueId'] === undefined) return false;
    return true;
}

export function CosmosChainFromJSON(json: any): CosmosChain {
    return CosmosChainFromJSONTyped(json, false);
}

export function CosmosChainFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosChain {
    if (json == null) {
        return json;
    }
    return {
        
        'chainType': json['chain_type'],
        'uniqueId': CosmosChainUniqueIdFromJSON(json['unique_id']),
    };
}

export function CosmosChainToJSON(json: any): CosmosChain {
    return CosmosChainToJSONTyped(json, false);
}

export function CosmosChainToJSONTyped(value?: CosmosChain | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chain_type': value['chainType'],
        'unique_id': CosmosChainUniqueIdToJSON(value['uniqueId']),
    };
}

