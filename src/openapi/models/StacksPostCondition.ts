/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { KnownAssetStacksPostCondition } from './KnownAssetStacksPostCondition';
import {
    instanceOfKnownAssetStacksPostCondition,
    KnownAssetStacksPostConditionFromJSON,
    KnownAssetStacksPostConditionFromJSONTyped,
    KnownAssetStacksPostConditionToJSON,
} from './KnownAssetStacksPostCondition';
import type { UnknownAssetStacksPostCondition } from './UnknownAssetStacksPostCondition';
import {
    instanceOfUnknownAssetStacksPostCondition,
    UnknownAssetStacksPostConditionFromJSON,
    UnknownAssetStacksPostConditionFromJSONTyped,
    UnknownAssetStacksPostConditionToJSON,
} from './UnknownAssetStacksPostCondition';

/**
 * @type StacksPostCondition
 * 
 * @export
 */
export type StacksPostCondition = { type: 'known_asset' } & KnownAssetStacksPostCondition | { type: 'unknown_asset' } & UnknownAssetStacksPostCondition;

export function StacksPostConditionFromJSON(json: any): StacksPostCondition {
    return StacksPostConditionFromJSONTyped(json, false);
}

export function StacksPostConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): StacksPostCondition {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'known_asset':
            return Object.assign({}, KnownAssetStacksPostConditionFromJSONTyped(json, true), { type: 'known_asset' } as const);
        case 'unknown_asset':
            return Object.assign({}, UnknownAssetStacksPostConditionFromJSONTyped(json, true), { type: 'unknown_asset' } as const);
        default:
            throw new Error(`No variant of StacksPostCondition exists with 'type=${json['type']}'`);
    }
}

export function StacksPostConditionToJSON(json: any): any {
    return StacksPostConditionToJSONTyped(json, false);
}

export function StacksPostConditionToJSONTyped(value?: StacksPostCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'known_asset':
            return Object.assign({}, KnownAssetStacksPostConditionToJSON(value), { type: 'known_asset' } as const);
        case 'unknown_asset':
            return Object.assign({}, UnknownAssetStacksPostConditionToJSON(value), { type: 'unknown_asset' } as const);
        default:
            throw new Error(`No variant of StacksPostCondition exists with 'type=${value['type']}'`);
    }

}

