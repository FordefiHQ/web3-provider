/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Erc1155 } from './Erc1155';
import {
    Erc1155FromJSONTyped,
} from './Erc1155';
import type { Erc20 } from './Erc20';
import {
    Erc20FromJSONTyped,
} from './Erc20';
import type { Erc721 } from './Erc721';
import {
    Erc721FromJSONTyped,
} from './Erc721';

/**
 * 
 * @export
 * @type EvmContractMetadataToken
 */
export type EvmContractMetadataToken = { type: 'erc1155' } & Erc1155 | { type: 'erc20' } & Erc20 | { type: 'erc721' } & Erc721;

export function EvmContractMetadataTokenFromJSON(json: any): EvmContractMetadataToken {
    return EvmContractMetadataTokenFromJSONTyped(json, false);
}

function EvmContractMetadataTokenFromJSONTyped(json: any, _ignoreDiscriminator: boolean): EvmContractMetadataToken {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'erc1155':
            return Object.assign({}, Erc1155FromJSONTyped(json, true), { type: 'erc1155' } as const);
        case 'erc20':
            return Object.assign({}, Erc20FromJSONTyped(json, true), { type: 'erc20' } as const);
        case 'erc721':
            return Object.assign({}, Erc721FromJSONTyped(json, true), { type: 'erc721' } as const);
        default:
            throw new Error(`No variant of EvmContractMetadataToken exists with 'type=${json['type']}'`);
    }
}

