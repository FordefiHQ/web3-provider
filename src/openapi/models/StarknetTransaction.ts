/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnrichedStarknetAddress } from './EnrichedStarknetAddress';
import {
    EnrichedStarknetAddressFromJSON,
    EnrichedStarknetAddressFromJSONTyped,
    EnrichedStarknetAddressToJSON,
} from './EnrichedStarknetAddress';
import type { EnrichedStarknetChain } from './EnrichedStarknetChain';
import {
    EnrichedStarknetChainFromJSON,
    EnrichedStarknetChainFromJSONTyped,
    EnrichedStarknetChainToJSON,
} from './EnrichedStarknetChain';
import type { ManagedTransactionData } from './ManagedTransactionData';
import {
    ManagedTransactionDataFromJSON,
    ManagedTransactionDataFromJSONTyped,
    ManagedTransactionDataToJSON,
} from './ManagedTransactionData';
import type { PredictedStarknetTransactionStarknetTransactionTypeDetails } from './PredictedStarknetTransactionStarknetTransactionTypeDetails';
import {
    PredictedStarknetTransactionStarknetTransactionTypeDetailsFromJSON,
    PredictedStarknetTransactionStarknetTransactionTypeDetailsFromJSONTyped,
    PredictedStarknetTransactionStarknetTransactionTypeDetailsToJSON,
} from './PredictedStarknetTransactionStarknetTransactionTypeDetails';
import type { Signature } from './Signature';
import {
    SignatureFromJSON,
    SignatureFromJSONTyped,
    SignatureToJSON,
} from './Signature';
import type { SimulationStatusResult } from './SimulationStatusResult';
import {
    SimulationStatusResultFromJSON,
    SimulationStatusResultFromJSONTyped,
    SimulationStatusResultToJSON,
} from './SimulationStatusResult';
import type { StarknetBlock } from './StarknetBlock';
import {
    StarknetBlockFromJSON,
    StarknetBlockFromJSONTyped,
    StarknetBlockToJSON,
} from './StarknetBlock';
import type { StarknetCallData } from './StarknetCallData';
import {
    StarknetCallDataFromJSON,
    StarknetCallDataFromJSONTyped,
    StarknetCallDataToJSON,
} from './StarknetCallData';
import type { StarknetTransactionResult } from './StarknetTransactionResult';
import {
    StarknetTransactionResultFromJSON,
    StarknetTransactionResultFromJSONTyped,
    StarknetTransactionResultToJSON,
} from './StarknetTransactionResult';
import type { StarknetTransactionState } from './StarknetTransactionState';
import {
    StarknetTransactionStateFromJSON,
    StarknetTransactionStateFromJSONTyped,
    StarknetTransactionStateToJSON,
} from './StarknetTransactionState';
import type { StarknetTransactionStateChange } from './StarknetTransactionStateChange';
import {
    StarknetTransactionStateChangeFromJSON,
    StarknetTransactionStateChangeFromJSONTyped,
    StarknetTransactionStateChangeToJSON,
} from './StarknetTransactionStateChange';
import type { TransactionDirection } from './TransactionDirection';
import {
    TransactionDirectionFromJSON,
    TransactionDirectionFromJSONTyped,
    TransactionDirectionToJSON,
} from './TransactionDirection';
import type { TransactionSpamState } from './TransactionSpamState';
import {
    TransactionSpamStateFromJSON,
    TransactionSpamStateFromJSONTyped,
    TransactionSpamStateToJSON,
} from './TransactionSpamState';

/**
 * 
 * @export
 * @interface StarknetTransaction
 */
export interface StarknetTransaction {
    /**
     * 
     * @type {string}
     * @memberof StarknetTransaction
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof StarknetTransaction
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof StarknetTransaction
     */
    modifiedAt: Date;
    /**
     * 
     * @type {ManagedTransactionData}
     * @memberof StarknetTransaction
     */
    managedTransactionData?: ManagedTransactionData;
    /**
     * 
     * @type {Array<Signature>}
     * @memberof StarknetTransaction
     */
    signatures: Array<Signature>;
    /**
     * 
     * @type {string}
     * @memberof StarknetTransaction
     */
    note?: string;
    /**
     * 
     * @type {TransactionSpamState}
     * @memberof StarknetTransaction
     */
    spamState?: TransactionSpamState;
    /**
     * 
     * @type {TransactionDirection}
     * @memberof StarknetTransaction
     */
    direction: TransactionDirection;
    /**
     * 
     * @type {string}
     * @memberof StarknetTransaction
     */
    type: StarknetTransactionTypeEnum;
    /**
     * 
     * @type {PredictedStarknetTransactionStarknetTransactionTypeDetails}
     * @memberof StarknetTransaction
     */
    starknetTransactionTypeDetails: PredictedStarknetTransactionStarknetTransactionTypeDetails;
    /**
     * 
     * @type {Array<StarknetCallData>}
     * @memberof StarknetTransaction
     */
    callData: Array<StarknetCallData>;
    /**
     * 
     * @type {EnrichedStarknetChain}
     * @memberof StarknetTransaction
     */
    chain: EnrichedStarknetChain;
    /**
     * 
     * @type {StarknetTransactionState}
     * @memberof StarknetTransaction
     */
    state: StarknetTransactionState;
    /**
     * 
     * @type {Array<StarknetTransactionStateChange>}
     * @memberof StarknetTransaction
     */
    stateChanges: Array<StarknetTransactionStateChange>;
    /**
     * 
     * @type {number}
     * @memberof StarknetTransaction
     */
    nonce?: number;
    /**
     * 
     * @type {EnrichedStarknetAddress}
     * @memberof StarknetTransaction
     */
    sender: EnrichedStarknetAddress;
    /**
     * 
     * @type {string}
     * @memberof StarknetTransaction
     */
    hash?: string;
    /**
     * 
     * @type {StarknetBlock}
     * @memberof StarknetTransaction
     */
    block?: StarknetBlock;
    /**
     * 
     * @type {StarknetTransactionResult}
     * @memberof StarknetTransaction
     */
    expectedResult?: StarknetTransactionResult;
    /**
     * 
     * @type {SimulationStatusResult}
     * @memberof StarknetTransaction
     */
    simulationStatusResult?: SimulationStatusResult;
    /**
     * 
     * @type {StarknetTransactionResult}
     * @memberof StarknetTransaction
     */
    minedResult?: StarknetTransactionResult;
    /**
     * 
     * @type {string}
     * @memberof StarknetTransaction
     */
    explorerUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof StarknetTransaction
     */
    l1GasMaxAmount: string;
    /**
     * 
     * @type {string}
     * @memberof StarknetTransaction
     */
    l1GasMaxPricePerUnit: string;
}


/**
 * @export
 */
export const StarknetTransactionTypeEnum = {
    starknetTransaction: 'starknet_transaction'
} as const;
export type StarknetTransactionTypeEnum = typeof StarknetTransactionTypeEnum[keyof typeof StarknetTransactionTypeEnum];


/**
 * Check if a given object implements the StarknetTransaction interface.
 */
export function instanceOfStarknetTransaction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "modifiedAt" in value;
    isInstance = isInstance && "signatures" in value;
    isInstance = isInstance && "direction" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "starknetTransactionTypeDetails" in value;
    isInstance = isInstance && "callData" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "stateChanges" in value;
    isInstance = isInstance && "sender" in value;
    isInstance = isInstance && "l1GasMaxAmount" in value;
    isInstance = isInstance && "l1GasMaxPricePerUnit" in value;

    return isInstance;
}

export function StarknetTransactionFromJSON(json: any): StarknetTransaction {
    return StarknetTransactionFromJSONTyped(json, false);
}

export function StarknetTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): StarknetTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'managedTransactionData': !exists(json, 'managed_transaction_data') ? undefined : ManagedTransactionDataFromJSON(json['managed_transaction_data']),
        'signatures': ((json['signatures'] as Array<any>).map(SignatureFromJSON)),
        'note': !exists(json, 'note') ? undefined : json['note'],
        'spamState': !exists(json, 'spam_state') ? undefined : TransactionSpamStateFromJSON(json['spam_state']),
        'direction': TransactionDirectionFromJSON(json['direction']),
        'type': json['type'],
        'starknetTransactionTypeDetails': PredictedStarknetTransactionStarknetTransactionTypeDetailsFromJSON(json['starknet_transaction_type_details']),
        'callData': ((json['call_data'] as Array<any>).map(StarknetCallDataFromJSON)),
        'chain': EnrichedStarknetChainFromJSON(json['chain']),
        'state': StarknetTransactionStateFromJSON(json['state']),
        'stateChanges': ((json['state_changes'] as Array<any>).map(StarknetTransactionStateChangeFromJSON)),
        'nonce': !exists(json, 'nonce') ? undefined : json['nonce'],
        'sender': EnrichedStarknetAddressFromJSON(json['sender']),
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'block': !exists(json, 'block') ? undefined : StarknetBlockFromJSON(json['block']),
        'expectedResult': !exists(json, 'expected_result') ? undefined : StarknetTransactionResultFromJSON(json['expected_result']),
        'simulationStatusResult': !exists(json, 'simulation_status_result') ? undefined : SimulationStatusResultFromJSON(json['simulation_status_result']),
        'minedResult': !exists(json, 'mined_result') ? undefined : StarknetTransactionResultFromJSON(json['mined_result']),
        'explorerUrl': !exists(json, 'explorer_url') ? undefined : json['explorer_url'],
        'l1GasMaxAmount': json['l1_gas_max_amount'],
        'l1GasMaxPricePerUnit': json['l1_gas_max_price_per_unit'],
    };
}

export function StarknetTransactionToJSON(value?: StarknetTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'modified_at': (value.modifiedAt.toISOString()),
        'managed_transaction_data': ManagedTransactionDataToJSON(value.managedTransactionData),
        'signatures': ((value.signatures as Array<any>).map(SignatureToJSON)),
        'note': value.note,
        'spam_state': TransactionSpamStateToJSON(value.spamState),
        'direction': TransactionDirectionToJSON(value.direction),
        'type': value.type,
        'starknet_transaction_type_details': PredictedStarknetTransactionStarknetTransactionTypeDetailsToJSON(value.starknetTransactionTypeDetails),
        'call_data': ((value.callData as Array<any>).map(StarknetCallDataToJSON)),
        'chain': EnrichedStarknetChainToJSON(value.chain),
        'state': StarknetTransactionStateToJSON(value.state),
        'state_changes': ((value.stateChanges as Array<any>).map(StarknetTransactionStateChangeToJSON)),
        'nonce': value.nonce,
        'sender': EnrichedStarknetAddressToJSON(value.sender),
        'hash': value.hash,
        'block': StarknetBlockToJSON(value.block),
        'expected_result': StarknetTransactionResultToJSON(value.expectedResult),
        'simulation_status_result': SimulationStatusResultToJSON(value.simulationStatusResult),
        'mined_result': StarknetTransactionResultToJSON(value.minedResult),
        'explorer_url': value.explorerUrl,
        'l1_gas_max_amount': value.l1GasMaxAmount,
        'l1_gas_max_price_per_unit': value.l1GasMaxPricePerUnit,
    };
}

