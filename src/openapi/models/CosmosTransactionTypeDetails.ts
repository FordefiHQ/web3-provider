/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CosmosMultipleMessagesTransactionDetails } from './CosmosMultipleMessagesTransactionDetails';
import {
    instanceOfCosmosMultipleMessagesTransactionDetails,
    CosmosMultipleMessagesTransactionDetailsFromJSON,
    CosmosMultipleMessagesTransactionDetailsFromJSONTyped,
    CosmosMultipleMessagesTransactionDetailsToJSON,
} from './CosmosMultipleMessagesTransactionDetails';
import type { CosmosNativeTransferDetails } from './CosmosNativeTransferDetails';
import {
    instanceOfCosmosNativeTransferDetails,
    CosmosNativeTransferDetailsFromJSON,
    CosmosNativeTransferDetailsFromJSONTyped,
    CosmosNativeTransferDetailsToJSON,
} from './CosmosNativeTransferDetails';
import type { CosmosTokenTransferDetails } from './CosmosTokenTransferDetails';
import {
    instanceOfCosmosTokenTransferDetails,
    CosmosTokenTransferDetailsFromJSON,
    CosmosTokenTransferDetailsFromJSONTyped,
    CosmosTokenTransferDetailsToJSON,
} from './CosmosTokenTransferDetails';

/**
 * @type CosmosTransactionTypeDetails
 * 
 * @export
 */
export type CosmosTransactionTypeDetails = { type: 'messages' } & CosmosMultipleMessagesTransactionDetails | { type: 'native_transfer' } & CosmosNativeTransferDetails | { type: 'token_transfer' } & CosmosTokenTransferDetails;

export function CosmosTransactionTypeDetailsFromJSON(json: any): CosmosTransactionTypeDetails {
    return CosmosTransactionTypeDetailsFromJSONTyped(json, false);
}

export function CosmosTransactionTypeDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosTransactionTypeDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'messages':
            return Object.assign({}, CosmosMultipleMessagesTransactionDetailsFromJSONTyped(json, true), { type: 'messages' } as const);
        case 'native_transfer':
            return Object.assign({}, CosmosNativeTransferDetailsFromJSONTyped(json, true), { type: 'native_transfer' } as const);
        case 'token_transfer':
            return Object.assign({}, CosmosTokenTransferDetailsFromJSONTyped(json, true), { type: 'token_transfer' } as const);
        default:
            throw new Error(`No variant of CosmosTransactionTypeDetails exists with 'type=${json['type']}'`);
    }
}

export function CosmosTransactionTypeDetailsToJSON(json: any): any {
    return CosmosTransactionTypeDetailsToJSONTyped(json, false);
}

export function CosmosTransactionTypeDetailsToJSONTyped(value?: CosmosTransactionTypeDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'messages':
            return Object.assign({}, CosmosMultipleMessagesTransactionDetailsToJSON(value), { type: 'messages' } as const);
        case 'native_transfer':
            return Object.assign({}, CosmosNativeTransferDetailsToJSON(value), { type: 'native_transfer' } as const);
        case 'token_transfer':
            return Object.assign({}, CosmosTokenTransferDetailsToJSON(value), { type: 'token_transfer' } as const);
        default:
            throw new Error(`No variant of CosmosTransactionTypeDetails exists with 'type=${value['type']}'`);
    }

}

