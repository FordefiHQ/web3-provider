/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PsbtInput } from './PsbtInput';
import {
    PsbtInputFromJSON,
    PsbtInputFromJSONTyped,
    PsbtInputToJSON,
    PsbtInputToJSONTyped,
} from './PsbtInput';
import type { UtxoAddress } from './UtxoAddress';
import {
    UtxoAddressFromJSON,
    UtxoAddressFromJSONTyped,
    UtxoAddressToJSON,
    UtxoAddressToJSONTyped,
} from './UtxoAddress';
import type { PushMode } from './PushMode';
import {
    PushModeFromJSON,
    PushModeFromJSONTyped,
    PushModeToJSON,
    PushModeToJSONTyped,
} from './PushMode';

/**
 * 
 * @export
 * @interface TransactionDetailsUtxoPsbtRequest
 */
export interface TransactionDetailsUtxoPsbtRequest {
    /**
     * 
     * @type {string}
     * @memberof TransactionDetailsUtxoPsbtRequest
     */
    type: TransactionDetailsUtxoPsbtRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TransactionDetailsUtxoPsbtRequest
     */
    psbtRawData: string;
    /**
     * 
     * @type {boolean}
     * @memberof TransactionDetailsUtxoPsbtRequest
     */
    autoFinalize?: boolean;
    /**
     * 
     * @type {UtxoAddress}
     * @memberof TransactionDetailsUtxoPsbtRequest
     */
    sender: UtxoAddress;
    /**
     * 
     * @type {Array<PsbtInput>}
     * @memberof TransactionDetailsUtxoPsbtRequest
     */
    inputs?: Array<PsbtInput>;
    /**
     * 
     * @type {PushMode}
     * @memberof TransactionDetailsUtxoPsbtRequest
     */
    pushMode?: PushMode;
}


/**
 * @export
 */
export const TransactionDetailsUtxoPsbtRequestTypeEnum = {
    utxoPartiallySignedBitcoinTransaction: 'utxo_partially_signed_bitcoin_transaction'
} as const;
export type TransactionDetailsUtxoPsbtRequestTypeEnum = typeof TransactionDetailsUtxoPsbtRequestTypeEnum[keyof typeof TransactionDetailsUtxoPsbtRequestTypeEnum];


/**
 * Check if a given object implements the TransactionDetailsUtxoPsbtRequest interface.
 */
export function instanceOfTransactionDetailsUtxoPsbtRequest(value: object): value is TransactionDetailsUtxoPsbtRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('psbtRawData' in value) || value['psbtRawData'] === undefined) return false;
    if (!('sender' in value) || value['sender'] === undefined) return false;
    return true;
}

export function TransactionDetailsUtxoPsbtRequestFromJSON(json: any): TransactionDetailsUtxoPsbtRequest {
    return TransactionDetailsUtxoPsbtRequestFromJSONTyped(json, false);
}

export function TransactionDetailsUtxoPsbtRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionDetailsUtxoPsbtRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'psbtRawData': json['psbt_raw_data'],
        'autoFinalize': json['auto_finalize'] == null ? undefined : json['auto_finalize'],
        'sender': UtxoAddressFromJSON(json['sender']),
        'inputs': json['inputs'] == null ? undefined : ((json['inputs'] as Array<any>).map(PsbtInputFromJSON)),
        'pushMode': json['push_mode'] == null ? undefined : PushModeFromJSON(json['push_mode']),
    };
}

export function TransactionDetailsUtxoPsbtRequestToJSON(json: any): TransactionDetailsUtxoPsbtRequest {
    return TransactionDetailsUtxoPsbtRequestToJSONTyped(json, false);
}

export function TransactionDetailsUtxoPsbtRequestToJSONTyped(value?: TransactionDetailsUtxoPsbtRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'psbt_raw_data': value['psbtRawData'],
        'auto_finalize': value['autoFinalize'],
        'sender': UtxoAddressToJSON(value['sender']),
        'inputs': value['inputs'] == null ? undefined : ((value['inputs'] as Array<any>).map(PsbtInputToJSON)),
        'push_mode': PushModeToJSON(value['pushMode']),
    };
}

