/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EcdsaSecp256k1BlackBoxVault } from './EcdsaSecp256k1BlackBoxVault';
import {
    EcdsaSecp256k1BlackBoxVaultFromJSONTyped,
} from './EcdsaSecp256k1BlackBoxVault';
import type { EcdsaStarkBlackBoxVault } from './EcdsaStarkBlackBoxVault';
import {
    EcdsaStarkBlackBoxVaultFromJSONTyped,
} from './EcdsaStarkBlackBoxVault';
import type { EddsaED25519BlackBoxVault } from './EddsaED25519BlackBoxVault';
import {
    EddsaED25519BlackBoxVaultFromJSONTyped,
} from './EddsaED25519BlackBoxVault';
import type { SchnorrSecp256k1BlackBoxValue } from './SchnorrSecp256k1BlackBoxValue';
import {
    SchnorrSecp256k1BlackBoxValueFromJSONTyped,
} from './SchnorrSecp256k1BlackBoxValue';

/**
 * 
 * @export
 * @type BlackBoxVaultDetails
 */
export type BlackBoxVaultDetails = { type: 'ecdsa_secp256k1' } & EcdsaSecp256k1BlackBoxVault | { type: 'ecdsa_stark' } & EcdsaStarkBlackBoxVault | { type: 'eddsa_ed25519' } & EddsaED25519BlackBoxVault | { type: 'schnorr_secp256k1' } & SchnorrSecp256k1BlackBoxValue;

export function BlackBoxVaultDetailsFromJSON(json: any): BlackBoxVaultDetails {
    return BlackBoxVaultDetailsFromJSONTyped(json, false);
}

function BlackBoxVaultDetailsFromJSONTyped(json: any, _ignoreDiscriminator: boolean): BlackBoxVaultDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'ecdsa_secp256k1':
            return Object.assign({}, EcdsaSecp256k1BlackBoxVaultFromJSONTyped(json, true), { type: 'ecdsa_secp256k1' } as const);
        case 'ecdsa_stark':
            return Object.assign({}, EcdsaStarkBlackBoxVaultFromJSONTyped(json, true), { type: 'ecdsa_stark' } as const);
        case 'eddsa_ed25519':
            return Object.assign({}, EddsaED25519BlackBoxVaultFromJSONTyped(json, true), { type: 'eddsa_ed25519' } as const);
        case 'schnorr_secp256k1':
            return Object.assign({}, SchnorrSecp256k1BlackBoxValueFromJSONTyped(json, true), { type: 'schnorr_secp256k1' } as const);
        default:
            throw new Error(`No variant of BlackBoxVaultDetails exists with 'type=${json['type']}'`);
    }
}

