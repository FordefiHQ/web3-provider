/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AptosEntryFunctionPayload,
    instanceOfAptosEntryFunctionPayload,
    AptosEntryFunctionPayloadFromJSON,
    AptosEntryFunctionPayloadFromJSONTyped,
    AptosEntryFunctionPayloadToJSON,
} from './AptosEntryFunctionPayload';
import {
    ScriptPayload,
    instanceOfScriptPayload,
    ScriptPayloadFromJSON,
    ScriptPayloadFromJSONTyped,
    ScriptPayloadToJSON,
} from './ScriptPayload';

/**
 * @type AptosTransactionPayload
 * 
 * @export
 */
export type AptosTransactionPayload = { type: 'entry_point' } & AptosEntryFunctionPayload | { type: 'script' } & ScriptPayload;

export function AptosTransactionPayloadFromJSON(json: any): AptosTransactionPayload {
    return AptosTransactionPayloadFromJSONTyped(json, false);
}

export function AptosTransactionPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): AptosTransactionPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'entry_point':
            return {...AptosEntryFunctionPayloadFromJSONTyped(json, true), type: 'entry_point'};
        case 'script':
            return {...ScriptPayloadFromJSONTyped(json, true), type: 'script'};
        default:
            throw new Error(`No variant of AptosTransactionPayload exists with 'type=${json['type']}'`);
    }
}

export function AptosTransactionPayloadToJSON(value?: AptosTransactionPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'entry_point':
            return AptosEntryFunctionPayloadToJSON(value);
        case 'script':
            return ScriptPayloadToJSON(value);
        default:
            throw new Error(`No variant of AptosTransactionPayload exists with 'type=${value['type']}'`);
    }

}

