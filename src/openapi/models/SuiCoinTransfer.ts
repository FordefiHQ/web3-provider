/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnrichedSuiAddress } from './EnrichedSuiAddress';
import {
    EnrichedSuiAddressFromJSON,
    EnrichedSuiAddressFromJSONTyped,
    EnrichedSuiAddressToJSON,
} from './EnrichedSuiAddress';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
} from './PricedAsset';

/**
 * 
 * @export
 * @interface SuiCoinTransfer
 */
export interface SuiCoinTransfer {
    /**
     * 
     * @type {PricedAsset}
     * @memberof SuiCoinTransfer
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof SuiCoinTransfer
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof SuiCoinTransfer
     */
    type: SuiCoinTransferTypeEnum;
    /**
     * 
     * @type {EnrichedSuiAddress}
     * @memberof SuiCoinTransfer
     */
    from: EnrichedSuiAddress;
    /**
     * 
     * @type {EnrichedSuiAddress}
     * @memberof SuiCoinTransfer
     */
    to: EnrichedSuiAddress;
}


/**
 * @export
 */
export const SuiCoinTransferTypeEnum = {
    coin: 'coin'
} as const;
export type SuiCoinTransferTypeEnum = typeof SuiCoinTransferTypeEnum[keyof typeof SuiCoinTransferTypeEnum];


/**
 * Check if a given object implements the SuiCoinTransfer interface.
 */
export function instanceOfSuiCoinTransfer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pricedAsset" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "from" in value;
    isInstance = isInstance && "to" in value;

    return isInstance;
}

export function SuiCoinTransferFromJSON(json: any): SuiCoinTransfer {
    return SuiCoinTransferFromJSONTyped(json, false);
}

export function SuiCoinTransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiCoinTransfer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'amount': json['amount'],
        'type': json['type'],
        'from': EnrichedSuiAddressFromJSON(json['from']),
        'to': EnrichedSuiAddressFromJSON(json['to']),
    };
}

export function SuiCoinTransferToJSON(value?: SuiCoinTransfer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'priced_asset': PricedAssetToJSON(value.pricedAsset),
        'amount': value.amount,
        'type': value.type,
        'from': EnrichedSuiAddressToJSON(value.from),
        'to': EnrichedSuiAddressToJSON(value.to),
    };
}

