/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddressBookContactChanges } from './AddressBookContactChanges';
import {
    AddressBookContactChangesFromJSON,
    AddressBookContactChangesFromJSONTyped,
    AddressBookContactChangesToJSON,
} from './AddressBookContactChanges';
import type { AddressBookContactState } from './AddressBookContactState';
import {
    AddressBookContactStateFromJSON,
    AddressBookContactStateFromJSONTyped,
    AddressBookContactStateToJSON,
} from './AddressBookContactState';
import type { EnrichedUtxoChain } from './EnrichedUtxoChain';
import {
    EnrichedUtxoChainFromJSON,
    EnrichedUtxoChainFromJSONTyped,
    EnrichedUtxoChainToJSON,
} from './EnrichedUtxoChain';
import type { GroupRef } from './GroupRef';
import {
    GroupRefFromJSON,
    GroupRefFromJSONTyped,
    GroupRefToJSON,
} from './GroupRef';
import type { UserRef } from './UserRef';
import {
    UserRefFromJSON,
    UserRefFromJSONTyped,
    UserRefToJSON,
} from './UserRef';

/**
 * 
 * @export
 * @interface UtxoAddressBookContact
 */
export interface UtxoAddressBookContact {
    /**
     * 
     * @type {string}
     * @memberof UtxoAddressBookContact
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof UtxoAddressBookContact
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UtxoAddressBookContact
     */
    modifiedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UtxoAddressBookContact
     */
    name: string;
    /**
     * 
     * @type {UserRef}
     * @memberof UtxoAddressBookContact
     */
    modifiedBy: UserRef;
    /**
     * 
     * @type {AddressBookContactState}
     * @memberof UtxoAddressBookContact
     */
    state: AddressBookContactState;
    /**
     * 
     * @type {Array<GroupRef>}
     * @memberof UtxoAddressBookContact
     */
    groups: Array<GroupRef>;
    /**
     * 
     * @type {AddressBookContactChanges}
     * @memberof UtxoAddressBookContact
     */
    pendingChanges?: AddressBookContactChanges;
    /**
     * 
     * @type {string}
     * @memberof UtxoAddressBookContact
     */
    chainType: UtxoAddressBookContactChainTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof UtxoAddressBookContact
     */
    address: string;
    /**
     * 
     * @type {EnrichedUtxoChain}
     * @memberof UtxoAddressBookContact
     */
    chain: EnrichedUtxoChain;
}


/**
 * @export
 */
export const UtxoAddressBookContactChainTypeEnum = {
    utxo: 'utxo'
} as const;
export type UtxoAddressBookContactChainTypeEnum = typeof UtxoAddressBookContactChainTypeEnum[keyof typeof UtxoAddressBookContactChainTypeEnum];


/**
 * Check if a given object implements the UtxoAddressBookContact interface.
 */
export function instanceOfUtxoAddressBookContact(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "modifiedAt" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "modifiedBy" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "groups" in value;
    isInstance = isInstance && "chainType" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "chain" in value;

    return isInstance;
}

export function UtxoAddressBookContactFromJSON(json: any): UtxoAddressBookContact {
    return UtxoAddressBookContactFromJSONTyped(json, false);
}

export function UtxoAddressBookContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): UtxoAddressBookContact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedAt': (new Date(json['modified_at'])),
        'name': json['name'],
        'modifiedBy': UserRefFromJSON(json['modified_by']),
        'state': AddressBookContactStateFromJSON(json['state']),
        'groups': ((json['groups'] as Array<any>).map(GroupRefFromJSON)),
        'pendingChanges': !exists(json, 'pending_changes') ? undefined : AddressBookContactChangesFromJSON(json['pending_changes']),
        'chainType': json['chain_type'],
        'address': json['address'],
        'chain': EnrichedUtxoChainFromJSON(json['chain']),
    };
}

export function UtxoAddressBookContactToJSON(value?: UtxoAddressBookContact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'modified_at': (value.modifiedAt.toISOString()),
        'name': value.name,
        'modified_by': UserRefToJSON(value.modifiedBy),
        'state': AddressBookContactStateToJSON(value.state),
        'groups': ((value.groups as Array<any>).map(GroupRefToJSON)),
        'pending_changes': AddressBookContactChangesToJSON(value.pendingChanges),
        'chain_type': value.chainType,
        'address': value.address,
        'chain': EnrichedUtxoChainToJSON(value.chain),
    };
}

