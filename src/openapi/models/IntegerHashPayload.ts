/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntegerHashPayload
 */
export interface IntegerHashPayload {
    /**
     * 
     * @type {string}
     * @memberof IntegerHashPayload
     */
    format: IntegerHashPayloadFormatEnum;
    /**
     * 
     * @type {string}
     * @memberof IntegerHashPayload
     */
    hashInteger: string;
}


/**
 * @export
 */
export const IntegerHashPayloadFormatEnum = {
    hashInteger: 'hash_integer'
} as const;
export type IntegerHashPayloadFormatEnum = typeof IntegerHashPayloadFormatEnum[keyof typeof IntegerHashPayloadFormatEnum];


/**
 * Check if a given object implements the IntegerHashPayload interface.
 */
export function instanceOfIntegerHashPayload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "format" in value;
    isInstance = isInstance && "hashInteger" in value;

    return isInstance;
}

export function IntegerHashPayloadFromJSON(json: any): IntegerHashPayload {
    return IntegerHashPayloadFromJSONTyped(json, false);
}

export function IntegerHashPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegerHashPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'format': json['format'],
        'hashInteger': json['hash_integer'],
    };
}

export function IntegerHashPayloadToJSON(value?: IntegerHashPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'format': value.format,
        'hash_integer': value.hashInteger,
    };
}

