/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AmountLimitCondition } from './AmountLimitCondition';
import {
    AmountLimitConditionFromJSON,
    AmountLimitConditionFromJSONTyped,
    AmountLimitConditionToJSON,
    AmountLimitConditionToJSONTyped,
} from './AmountLimitCondition';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
    CategoryToJSONTyped,
} from './Category';
import type { ExposureType } from './ExposureType';
import {
    ExposureTypeFromJSON,
    ExposureTypeFromJSONTyped,
    ExposureTypeToJSON,
    ExposureTypeToJSONTyped,
} from './ExposureType';
import type { AmlOriginConditions } from './AmlOriginConditions';
import {
    AmlOriginConditionsFromJSON,
    AmlOriginConditionsFromJSONTyped,
    AmlOriginConditionsToJSON,
    AmlOriginConditionsToJSONTyped,
} from './AmlOriginConditions';
import type { RiskRating } from './RiskRating';
import {
    RiskRatingFromJSON,
    RiskRatingFromJSONTyped,
    RiskRatingToJSON,
    RiskRatingToJSONTyped,
} from './RiskRating';
import type { RecipientsCondition } from './RecipientsCondition';
import {
    RecipientsConditionFromJSON,
    RecipientsConditionFromJSONTyped,
    RecipientsConditionToJSON,
    RecipientsConditionToJSONTyped,
} from './RecipientsCondition';
import type { Direction } from './Direction';
import {
    DirectionFromJSON,
    DirectionFromJSONTyped,
    DirectionToJSON,
    DirectionToJSONTyped,
} from './Direction';
import type { InitiatorsCondition } from './InitiatorsCondition';
import {
    InitiatorsConditionFromJSON,
    InitiatorsConditionFromJSONTyped,
    InitiatorsConditionToJSON,
    InitiatorsConditionToJSONTyped,
} from './InitiatorsCondition';

/**
 * 
 * @export
 * @interface ChainalysisConditions
 */
export interface ChainalysisConditions {
    /**
     * 
     * @type {InitiatorsCondition}
     * @memberof ChainalysisConditions
     */
    transactionInitiators: InitiatorsCondition;
    /**
     * 
     * @type {AmlOriginConditions}
     * @memberof ChainalysisConditions
     */
    origins: AmlOriginConditions;
    /**
     * 
     * @type {RecipientsCondition}
     * @memberof ChainalysisConditions
     */
    recipients: RecipientsCondition;
    /**
     * 
     * @type {AmountLimitCondition}
     * @memberof ChainalysisConditions
     */
    amountLimit?: AmountLimitCondition;
    /**
     * 
     * @type {Direction}
     * @memberof ChainalysisConditions
     */
    direction: Direction;
    /**
     * 
     * @type {Array<Category>}
     * @memberof ChainalysisConditions
     */
    categories?: Array<Category>;
    /**
     * 
     * @type {Array<RiskRating>}
     * @memberof ChainalysisConditions
     */
    riskRating?: Array<RiskRating>;
    /**
     * 
     * @type {Array<ExposureType>}
     * @memberof ChainalysisConditions
     */
    exposureTypes?: Array<ExposureType>;
}



/**
 * Check if a given object implements the ChainalysisConditions interface.
 */
export function instanceOfChainalysisConditions(value: object): value is ChainalysisConditions {
    if (!('transactionInitiators' in value) || value['transactionInitiators'] === undefined) return false;
    if (!('origins' in value) || value['origins'] === undefined) return false;
    if (!('recipients' in value) || value['recipients'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    return true;
}

export function ChainalysisConditionsFromJSON(json: any): ChainalysisConditions {
    return ChainalysisConditionsFromJSONTyped(json, false);
}

export function ChainalysisConditionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainalysisConditions {
    if (json == null) {
        return json;
    }
    return {
        
        'transactionInitiators': InitiatorsConditionFromJSON(json['transaction_initiators']),
        'origins': AmlOriginConditionsFromJSON(json['origins']),
        'recipients': RecipientsConditionFromJSON(json['recipients']),
        'amountLimit': json['amount_limit'] == null ? undefined : AmountLimitConditionFromJSON(json['amount_limit']),
        'direction': DirectionFromJSON(json['direction']),
        'categories': json['categories'] == null ? undefined : ((json['categories'] as Array<any>).map(CategoryFromJSON)),
        'riskRating': json['risk_rating'] == null ? undefined : ((json['risk_rating'] as Array<any>).map(RiskRatingFromJSON)),
        'exposureTypes': json['exposure_types'] == null ? undefined : ((json['exposure_types'] as Array<any>).map(ExposureTypeFromJSON)),
    };
}

export function ChainalysisConditionsToJSON(json: any): ChainalysisConditions {
    return ChainalysisConditionsToJSONTyped(json, false);
}

export function ChainalysisConditionsToJSONTyped(value?: ChainalysisConditions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'transaction_initiators': InitiatorsConditionToJSON(value['transactionInitiators']),
        'origins': AmlOriginConditionsToJSON(value['origins']),
        'recipients': RecipientsConditionToJSON(value['recipients']),
        'amount_limit': AmountLimitConditionToJSON(value['amountLimit']),
        'direction': DirectionToJSON(value['direction']),
        'categories': value['categories'] == null ? undefined : ((value['categories'] as Array<any>).map(CategoryToJSON)),
        'risk_rating': value['riskRating'] == null ? undefined : ((value['riskRating'] as Array<any>).map(RiskRatingToJSON)),
        'exposure_types': value['exposureTypes'] == null ? undefined : ((value['exposureTypes'] as Array<any>).map(ExposureTypeToJSON)),
    };
}

