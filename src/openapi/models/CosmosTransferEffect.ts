/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
    EnrichedCosmosBechAddressFromJSONTyped,
    EnrichedCosmosBechAddressToJSON,
    EnrichedCosmosBechAddressToJSONTyped,
} from './EnrichedCosmosBechAddress';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
    PricedAssetToJSONTyped,
} from './PricedAsset';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';
import type { CosmosBalanceChangeEffectCoinInfo } from './CosmosBalanceChangeEffectCoinInfo';
import {
    CosmosBalanceChangeEffectCoinInfoFromJSON,
    CosmosBalanceChangeEffectCoinInfoFromJSONTyped,
    CosmosBalanceChangeEffectCoinInfoToJSON,
    CosmosBalanceChangeEffectCoinInfoToJSONTyped,
} from './CosmosBalanceChangeEffectCoinInfo';
import type { CosmosTransferEffectType } from './CosmosTransferEffectType';
import {
    CosmosTransferEffectTypeFromJSON,
    CosmosTransferEffectTypeFromJSONTyped,
    CosmosTransferEffectTypeToJSON,
    CosmosTransferEffectTypeToJSONTyped,
} from './CosmosTransferEffectType';

/**
 * 
 * @export
 * @interface CosmosTransferEffect
 */
export interface CosmosTransferEffect {
    /**
     * 
     * @type {PricedAsset}
     * @memberof CosmosTransferEffect
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof CosmosTransferEffect
     */
    amount: string;
    /**
     * 
     * @type {CosmosTransferEffectType}
     * @memberof CosmosTransferEffect
     */
    type: CosmosTransferEffectType;
    /**
     * 
     * @type {CosmosBalanceChangeEffectCoinInfo}
     * @memberof CosmosTransferEffect
     * @deprecated
     */
    coinInfo: CosmosBalanceChangeEffectCoinInfo;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosTransferEffect
     */
    from: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosTransferEffect
     */
    to: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {Price}
     * @memberof CosmosTransferEffect
     */
    price?: Price;
}



/**
 * Check if a given object implements the CosmosTransferEffect interface.
 */
export function instanceOfCosmosTransferEffect(value: object): value is CosmosTransferEffect {
    if (!('pricedAsset' in value) || value['pricedAsset'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('coinInfo' in value) || value['coinInfo'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    return true;
}

export function CosmosTransferEffectFromJSON(json: any): CosmosTransferEffect {
    return CosmosTransferEffectFromJSONTyped(json, false);
}

export function CosmosTransferEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosTransferEffect {
    if (json == null) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'amount': json['amount'],
        'type': CosmosTransferEffectTypeFromJSON(json['type']),
        'coinInfo': CosmosBalanceChangeEffectCoinInfoFromJSON(json['coin_info']),
        'from': EnrichedCosmosBechAddressFromJSON(json['from']),
        'to': EnrichedCosmosBechAddressFromJSON(json['to']),
        'price': json['price'] == null ? undefined : PriceFromJSON(json['price']),
    };
}

export function CosmosTransferEffectToJSON(json: any): CosmosTransferEffect {
    return CosmosTransferEffectToJSONTyped(json, false);
}

export function CosmosTransferEffectToJSONTyped(value?: CosmosTransferEffect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'priced_asset': PricedAssetToJSON(value['pricedAsset']),
        'amount': value['amount'],
        'type': CosmosTransferEffectTypeToJSON(value['type']),
        'coin_info': CosmosBalanceChangeEffectCoinInfoToJSON(value['coinInfo']),
        'from': EnrichedCosmosBechAddressToJSON(value['from']),
        'to': EnrichedCosmosBechAddressToJSON(value['to']),
        'price': PriceToJSON(value['price']),
    };
}

