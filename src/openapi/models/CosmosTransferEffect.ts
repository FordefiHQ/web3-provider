/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EnrichedCosmosBechAddress } from './EnrichedCosmosBechAddress';
import {
    EnrichedCosmosBechAddressFromJSON,
} from './EnrichedCosmosBechAddress';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
} from './PricedAsset';
import type { Price } from './Price';
import {
    PriceFromJSON,
} from './Price';
import type { CosmosBalanceChangeEffectCoinInfo } from './CosmosBalanceChangeEffectCoinInfo';
import {
    CosmosBalanceChangeEffectCoinInfoFromJSON,
} from './CosmosBalanceChangeEffectCoinInfo';
import type { CosmosTransferEffectType } from './CosmosTransferEffectType';
import {
    CosmosTransferEffectTypeFromJSON,
} from './CosmosTransferEffectType';

/**
 * 
 * @export
 * @interface CosmosTransferEffect
 */
export interface CosmosTransferEffect {
    /**
     * 
     * @type {PricedAsset}
     * @memberof CosmosTransferEffect
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof CosmosTransferEffect
     */
    amount: string;
    /**
     * 
     * @type {CosmosTransferEffectType}
     * @memberof CosmosTransferEffect
     */
    type: CosmosTransferEffectType;
    /**
     * 
     * @type {CosmosBalanceChangeEffectCoinInfo}
     * @memberof CosmosTransferEffect
     * @deprecated
     */
    coinInfo: CosmosBalanceChangeEffectCoinInfo;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosTransferEffect
     */
    from: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {EnrichedCosmosBechAddress}
     * @memberof CosmosTransferEffect
     */
    to: EnrichedCosmosBechAddress;
    /**
     * 
     * @type {Price}
     * @memberof CosmosTransferEffect
     */
    price?: Price;
}

export function CosmosTransferEffectFromJSON(json: any): CosmosTransferEffect {
    return CosmosTransferEffectFromJSONTyped(json, false);
}

function CosmosTransferEffectFromJSONTyped(json: any, _ignoreDiscriminator: boolean): CosmosTransferEffect {
    if (json == null) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'amount': json['amount'],
        'type': CosmosTransferEffectTypeFromJSON(json['type']),
        'coinInfo': CosmosBalanceChangeEffectCoinInfoFromJSON(json['coin_info']),
        'from': EnrichedCosmosBechAddressFromJSON(json['from']),
        'to': EnrichedCosmosBechAddressFromJSON(json['to']),
        'price': json['price'] == null ? undefined : PriceFromJSON(json['price']),
    };
}

