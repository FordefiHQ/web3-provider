/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    CosmosNativeTransfer,
    instanceOfCosmosNativeTransfer,
    CosmosNativeTransferFromJSON,
    CosmosNativeTransferFromJSONTyped,
    CosmosNativeTransferToJSON,
} from './CosmosNativeTransfer';
import {
    CosmosTokenTransfer,
    instanceOfCosmosTokenTransfer,
    CosmosTokenTransferFromJSON,
    CosmosTokenTransferFromJSONTyped,
    CosmosTokenTransferToJSON,
} from './CosmosTokenTransfer';

/**
 * @type CosmosTransferEffect
 * 
 * @export
 */
export type CosmosTransferEffect = { type: 'native' } & CosmosNativeTransfer | { type: 'token' } & CosmosTokenTransfer;

export function CosmosTransferEffectFromJSON(json: any): CosmosTransferEffect {
    return CosmosTransferEffectFromJSONTyped(json, false);
}

export function CosmosTransferEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosTransferEffect {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'native':
            return {...CosmosNativeTransferFromJSONTyped(json, true), type: 'native'};
        case 'token':
            return {...CosmosTokenTransferFromJSONTyped(json, true), type: 'token'};
        default:
            throw new Error(`No variant of CosmosTransferEffect exists with 'type=${json['type']}'`);
    }
}

export function CosmosTransferEffectToJSON(value?: CosmosTransferEffect | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'native':
            return CosmosNativeTransferToJSON(value);
        case 'token':
            return CosmosTokenTransferToJSON(value);
        default:
            throw new Error(`No variant of CosmosTransferEffect exists with 'type=${value['type']}'`);
    }

}

