/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SuiObjectInputArgumentDetails } from './SuiObjectInputArgumentDetails';
import {
    SuiObjectInputArgumentDetailsFromJSON,
    SuiObjectInputArgumentDetailsFromJSONTyped,
    SuiObjectInputArgumentDetailsToJSON,
} from './SuiObjectInputArgumentDetails';

/**
 * 
 * @export
 * @interface SuiObjectInputArgument
 */
export interface SuiObjectInputArgument {
    /**
     * 
     * @type {string}
     * @memberof SuiObjectInputArgument
     */
    type: SuiObjectInputArgumentTypeEnum;
    /**
     * 
     * @type {SuiObjectInputArgumentDetails}
     * @memberof SuiObjectInputArgument
     */
    details: SuiObjectInputArgumentDetails;
}


/**
 * @export
 */
export const SuiObjectInputArgumentTypeEnum = {
    object: 'object'
} as const;
export type SuiObjectInputArgumentTypeEnum = typeof SuiObjectInputArgumentTypeEnum[keyof typeof SuiObjectInputArgumentTypeEnum];


/**
 * Check if a given object implements the SuiObjectInputArgument interface.
 */
export function instanceOfSuiObjectInputArgument(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "details" in value;

    return isInstance;
}

export function SuiObjectInputArgumentFromJSON(json: any): SuiObjectInputArgument {
    return SuiObjectInputArgumentFromJSONTyped(json, false);
}

export function SuiObjectInputArgumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiObjectInputArgument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'details': SuiObjectInputArgumentDetailsFromJSON(json['details']),
    };
}

export function SuiObjectInputArgumentToJSON(value?: SuiObjectInputArgument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'details': SuiObjectInputArgumentDetailsToJSON(value.details),
    };
}

