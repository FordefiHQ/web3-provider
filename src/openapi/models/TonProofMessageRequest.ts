/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TonChainUniqueId } from './TonChainUniqueId';
import {
    TonChainUniqueIdFromJSON,
    TonChainUniqueIdFromJSONTyped,
    TonChainUniqueIdToJSON,
    TonChainUniqueIdToJSONTyped,
} from './TonChainUniqueId';

/**
 * 
 * @export
 * @interface TonProofMessageRequest
 */
export interface TonProofMessageRequest {
    /**
     * 
     * @type {string}
     * @memberof TonProofMessageRequest
     */
    type: TonProofMessageRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TonProofMessageRequest
     */
    manifestUrl: string;
    /**
     * 
     * @type {TonChainUniqueId}
     * @memberof TonProofMessageRequest
     */
    chain: TonChainUniqueId;
    /**
     * 
     * @type {string}
     * @memberof TonProofMessageRequest
     */
    messageToSign: string;
}


/**
 * @export
 */
export const TonProofMessageRequestTypeEnum = {
    proofMessageType: 'proof_message_type'
} as const;
export type TonProofMessageRequestTypeEnum = typeof TonProofMessageRequestTypeEnum[keyof typeof TonProofMessageRequestTypeEnum];


/**
 * Check if a given object implements the TonProofMessageRequest interface.
 */
export function instanceOfTonProofMessageRequest(value: object): value is TonProofMessageRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('manifestUrl' in value) || value['manifestUrl'] === undefined) return false;
    if (!('chain' in value) || value['chain'] === undefined) return false;
    if (!('messageToSign' in value) || value['messageToSign'] === undefined) return false;
    return true;
}

export function TonProofMessageRequestFromJSON(json: any): TonProofMessageRequest {
    return TonProofMessageRequestFromJSONTyped(json, false);
}

export function TonProofMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TonProofMessageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'manifestUrl': json['manifest_url'],
        'chain': TonChainUniqueIdFromJSON(json['chain']),
        'messageToSign': json['message_to_sign'],
    };
}

export function TonProofMessageRequestToJSON(json: any): TonProofMessageRequest {
    return TonProofMessageRequestToJSONTyped(json, false);
}

export function TonProofMessageRequestToJSONTyped(value?: TonProofMessageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'manifest_url': value['manifestUrl'],
        'chain': TonChainUniqueIdToJSON(value['chain']),
        'message_to_sign': value['messageToSign'],
    };
}

