/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    CosmosNativeCoinWithAmount,
    instanceOfCosmosNativeCoinWithAmount,
    CosmosNativeCoinWithAmountFromJSON,
    CosmosNativeCoinWithAmountFromJSONTyped,
    CosmosNativeCoinWithAmountToJSON,
} from './CosmosNativeCoinWithAmount';
import {
    CosmosTokenWithAmount,
    instanceOfCosmosTokenWithAmount,
    CosmosTokenWithAmountFromJSON,
    CosmosTokenWithAmountFromJSONTyped,
    CosmosTokenWithAmountToJSON,
} from './CosmosTokenWithAmount';

/**
 * @type CosmosCoinWithAmountCoinWithAmount
 * 
 * @export
 */
export type CosmosCoinWithAmountCoinWithAmount = { type: 'native' } & CosmosNativeCoinWithAmount | { type: 'token' } & CosmosTokenWithAmount;

export function CosmosCoinWithAmountCoinWithAmountFromJSON(json: any): CosmosCoinWithAmountCoinWithAmount {
    return CosmosCoinWithAmountCoinWithAmountFromJSONTyped(json, false);
}

export function CosmosCoinWithAmountCoinWithAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosCoinWithAmountCoinWithAmount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'native':
            return {...CosmosNativeCoinWithAmountFromJSONTyped(json, true), type: 'native'};
        case 'token':
            return {...CosmosTokenWithAmountFromJSONTyped(json, true), type: 'token'};
        default:
            throw new Error(`No variant of CosmosCoinWithAmountCoinWithAmount exists with 'type=${json['type']}'`);
    }
}

export function CosmosCoinWithAmountCoinWithAmountToJSON(value?: CosmosCoinWithAmountCoinWithAmount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'native':
            return CosmosNativeCoinWithAmountToJSON(value);
        case 'token':
            return CosmosTokenWithAmountToJSON(value);
        default:
            throw new Error(`No variant of CosmosCoinWithAmountCoinWithAmount exists with 'type=${value['type']}'`);
    }

}

