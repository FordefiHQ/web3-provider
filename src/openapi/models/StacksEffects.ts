/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StacksTransferEffect } from './StacksTransferEffect';
import {
    StacksTransferEffectFromJSON,
    StacksTransferEffectFromJSONTyped,
    StacksTransferEffectToJSON,
    StacksTransferEffectToJSONTyped,
} from './StacksTransferEffect';
import type { StacksBalanceChangeEffect } from './StacksBalanceChangeEffect';
import {
    StacksBalanceChangeEffectFromJSON,
    StacksBalanceChangeEffectFromJSONTyped,
    StacksBalanceChangeEffectToJSON,
    StacksBalanceChangeEffectToJSONTyped,
} from './StacksBalanceChangeEffect';

/**
 * 
 * @export
 * @interface StacksEffects
 */
export interface StacksEffects {
    /**
     * 
     * @type {Array<StacksBalanceChangeEffect>}
     * @memberof StacksEffects
     */
    balanceChanges: Array<StacksBalanceChangeEffect>;
    /**
     * 
     * @type {Array<StacksTransferEffect>}
     * @memberof StacksEffects
     */
    transfers: Array<StacksTransferEffect>;
}

/**
 * Check if a given object implements the StacksEffects interface.
 */
export function instanceOfStacksEffects(value: object): value is StacksEffects {
    if (!('balanceChanges' in value) || value['balanceChanges'] === undefined) return false;
    if (!('transfers' in value) || value['transfers'] === undefined) return false;
    return true;
}

export function StacksEffectsFromJSON(json: any): StacksEffects {
    return StacksEffectsFromJSONTyped(json, false);
}

export function StacksEffectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StacksEffects {
    if (json == null) {
        return json;
    }
    return {
        
        'balanceChanges': ((json['balance_changes'] as Array<any>).map(StacksBalanceChangeEffectFromJSON)),
        'transfers': ((json['transfers'] as Array<any>).map(StacksTransferEffectFromJSON)),
    };
}

export function StacksEffectsToJSON(json: any): StacksEffects {
    return StacksEffectsToJSONTyped(json, false);
}

export function StacksEffectsToJSONTyped(value?: StacksEffects | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'balance_changes': ((value['balanceChanges'] as Array<any>).map(StacksBalanceChangeEffectToJSON)),
        'transfers': ((value['transfers'] as Array<any>).map(StacksTransferEffectToJSON)),
    };
}

