/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { StarknetContractCreationDetails } from './StarknetContractCreationDetails';
import {
    instanceOfStarknetContractCreationDetails,
    StarknetContractCreationDetailsFromJSON,
    StarknetContractCreationDetailsFromJSONTyped,
    StarknetContractCreationDetailsToJSON,
} from './StarknetContractCreationDetails';
import type { StarknetErc20TransferDetails } from './StarknetErc20TransferDetails';
import {
    instanceOfStarknetErc20TransferDetails,
    StarknetErc20TransferDetailsFromJSON,
    StarknetErc20TransferDetailsFromJSONTyped,
    StarknetErc20TransferDetailsToJSON,
} from './StarknetErc20TransferDetails';
import type { StarknetNativeTransferDetails } from './StarknetNativeTransferDetails';
import {
    instanceOfStarknetNativeTransferDetails,
    StarknetNativeTransferDetailsFromJSON,
    StarknetNativeTransferDetailsFromJSONTyped,
    StarknetNativeTransferDetailsToJSON,
} from './StarknetNativeTransferDetails';
import type { StarknetRawTransactionDetails } from './StarknetRawTransactionDetails';
import {
    instanceOfStarknetRawTransactionDetails,
    StarknetRawTransactionDetailsFromJSON,
    StarknetRawTransactionDetailsFromJSONTyped,
    StarknetRawTransactionDetailsToJSON,
} from './StarknetRawTransactionDetails';

/**
 * @type PredictedStarknetTransactionStarknetTransactionTypeDetails
 * 
 * @export
 */
export type PredictedStarknetTransactionStarknetTransactionTypeDetails = { type: 'contract_deployment' } & StarknetContractCreationDetails | { type: 'erc20_transfer' } & StarknetErc20TransferDetails | { type: 'native_transfer' } & StarknetNativeTransferDetails | { type: 'raw_transaction' } & StarknetRawTransactionDetails;

export function PredictedStarknetTransactionStarknetTransactionTypeDetailsFromJSON(json: any): PredictedStarknetTransactionStarknetTransactionTypeDetails {
    return PredictedStarknetTransactionStarknetTransactionTypeDetailsFromJSONTyped(json, false);
}

export function PredictedStarknetTransactionStarknetTransactionTypeDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PredictedStarknetTransactionStarknetTransactionTypeDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'contract_deployment':
            return Object.assign({}, StarknetContractCreationDetailsFromJSONTyped(json, true), { type: 'contract_deployment' } as const);
        case 'erc20_transfer':
            return Object.assign({}, StarknetErc20TransferDetailsFromJSONTyped(json, true), { type: 'erc20_transfer' } as const);
        case 'native_transfer':
            return Object.assign({}, StarknetNativeTransferDetailsFromJSONTyped(json, true), { type: 'native_transfer' } as const);
        case 'raw_transaction':
            return Object.assign({}, StarknetRawTransactionDetailsFromJSONTyped(json, true), { type: 'raw_transaction' } as const);
        default:
            throw new Error(`No variant of PredictedStarknetTransactionStarknetTransactionTypeDetails exists with 'type=${json['type']}'`);
    }
}

export function PredictedStarknetTransactionStarknetTransactionTypeDetailsToJSON(json: any): any {
    return PredictedStarknetTransactionStarknetTransactionTypeDetailsToJSONTyped(json, false);
}

export function PredictedStarknetTransactionStarknetTransactionTypeDetailsToJSONTyped(value?: PredictedStarknetTransactionStarknetTransactionTypeDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'contract_deployment':
            return Object.assign({}, StarknetContractCreationDetailsToJSON(value), { type: 'contract_deployment' } as const);
        case 'erc20_transfer':
            return Object.assign({}, StarknetErc20TransferDetailsToJSON(value), { type: 'erc20_transfer' } as const);
        case 'native_transfer':
            return Object.assign({}, StarknetNativeTransferDetailsToJSON(value), { type: 'native_transfer' } as const);
        case 'raw_transaction':
            return Object.assign({}, StarknetRawTransactionDetailsToJSON(value), { type: 'raw_transaction' } as const);
        default:
            throw new Error(`No variant of PredictedStarknetTransactionStarknetTransactionTypeDetails exists with 'type=${value['type']}'`);
    }

}

