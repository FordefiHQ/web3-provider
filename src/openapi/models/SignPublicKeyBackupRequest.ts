/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeyType } from './KeyType';
import {
    KeyTypeFromJSON,
    KeyTypeFromJSONTyped,
    KeyTypeToJSON,
    KeyTypeToJSONTyped,
} from './KeyType';
import type { EncryptionData } from './EncryptionData';
import {
    EncryptionDataFromJSON,
    EncryptionDataFromJSONTyped,
    EncryptionDataToJSON,
    EncryptionDataToJSONTyped,
} from './EncryptionData';

/**
 * 
 * @export
 * @interface SignPublicKeyBackupRequest
 */
export interface SignPublicKeyBackupRequest {
    /**
     * 
     * @type {string}
     * @memberof SignPublicKeyBackupRequest
     */
    signature: string;
    /**
     * 
     * @type {EncryptionData}
     * @memberof SignPublicKeyBackupRequest
     */
    encryptedDeviceShare: EncryptionData;
    /**
     * 
     * @type {Array<string>}
     * @memberof SignPublicKeyBackupRequest
     */
    keyIdsIncluded?: Array<string>;
    /**
     * 
     * @type {Array<KeyType>}
     * @memberof SignPublicKeyBackupRequest
     */
    deviceSharesIncluded?: Array<KeyType>;
}

/**
 * Check if a given object implements the SignPublicKeyBackupRequest interface.
 */
export function instanceOfSignPublicKeyBackupRequest(value: object): value is SignPublicKeyBackupRequest {
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('encryptedDeviceShare' in value) || value['encryptedDeviceShare'] === undefined) return false;
    return true;
}

export function SignPublicKeyBackupRequestFromJSON(json: any): SignPublicKeyBackupRequest {
    return SignPublicKeyBackupRequestFromJSONTyped(json, false);
}

export function SignPublicKeyBackupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignPublicKeyBackupRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'signature': json['signature'],
        'encryptedDeviceShare': EncryptionDataFromJSON(json['encrypted_device_share']),
        'keyIdsIncluded': json['key_ids_included'] == null ? undefined : json['key_ids_included'],
        'deviceSharesIncluded': json['device_shares_included'] == null ? undefined : ((json['device_shares_included'] as Array<any>).map(KeyTypeFromJSON)),
    };
}

export function SignPublicKeyBackupRequestToJSON(json: any): SignPublicKeyBackupRequest {
    return SignPublicKeyBackupRequestToJSONTyped(json, false);
}

export function SignPublicKeyBackupRequestToJSONTyped(value?: SignPublicKeyBackupRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'signature': value['signature'],
        'encrypted_device_share': EncryptionDataToJSON(value['encryptedDeviceShare']),
        'key_ids_included': value['keyIdsIncluded'],
        'device_shares_included': value['deviceSharesIncluded'] == null ? undefined : ((value['deviceSharesIncluded'] as Array<any>).map(KeyTypeToJSON)),
    };
}

