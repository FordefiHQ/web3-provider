/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EvmDynamicSuggestedFees } from './EvmDynamicSuggestedFees';
import {
    instanceOfEvmDynamicSuggestedFees,
    EvmDynamicSuggestedFeesFromJSON,
    EvmDynamicSuggestedFeesFromJSONTyped,
    EvmDynamicSuggestedFeesToJSON,
} from './EvmDynamicSuggestedFees';
import type { EvmLegacySuggestedFees } from './EvmLegacySuggestedFees';
import {
    instanceOfEvmLegacySuggestedFees,
    EvmLegacySuggestedFeesFromJSON,
    EvmLegacySuggestedFeesFromJSONTyped,
    EvmLegacySuggestedFeesToJSON,
} from './EvmLegacySuggestedFees';

/**
 * @type EvmSuggestedFeesFees
 * 
 * @export
 */
export type EvmSuggestedFeesFees = { type: 'dynamic' } & EvmDynamicSuggestedFees | { type: 'legacy' } & EvmLegacySuggestedFees;

export function EvmSuggestedFeesFeesFromJSON(json: any): EvmSuggestedFeesFees {
    return EvmSuggestedFeesFeesFromJSONTyped(json, false);
}

export function EvmSuggestedFeesFeesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmSuggestedFeesFees {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'dynamic':
            return Object.assign({}, EvmDynamicSuggestedFeesFromJSONTyped(json, true), { type: 'dynamic' } as const);
        case 'legacy':
            return Object.assign({}, EvmLegacySuggestedFeesFromJSONTyped(json, true), { type: 'legacy' } as const);
        default:
            throw new Error(`No variant of EvmSuggestedFeesFees exists with 'type=${json['type']}'`);
    }
}

export function EvmSuggestedFeesFeesToJSON(json: any): any {
    return EvmSuggestedFeesFeesToJSONTyped(json, false);
}

export function EvmSuggestedFeesFeesToJSONTyped(value?: EvmSuggestedFeesFees | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'dynamic':
            return Object.assign({}, EvmDynamicSuggestedFeesToJSON(value), { type: 'dynamic' } as const);
        case 'legacy':
            return Object.assign({}, EvmLegacySuggestedFeesToJSON(value), { type: 'legacy' } as const);
        default:
            throw new Error(`No variant of EvmSuggestedFeesFees exists with 'type=${value['type']}'`);
    }

}

