/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    CreateApiSignerUserRequest,
    instanceOfCreateApiSignerUserRequest,
    CreateApiSignerUserRequestFromJSON,
    CreateApiSignerUserRequestFromJSONTyped,
    CreateApiSignerUserRequestToJSON,
} from './CreateApiSignerUserRequest';
import {
    CreateApiUserRequest,
    instanceOfCreateApiUserRequest,
    CreateApiUserRequestFromJSON,
    CreateApiUserRequestFromJSONTyped,
    CreateApiUserRequestToJSON,
} from './CreateApiUserRequest';
import {
    CreatePersonUserRequest,
    instanceOfCreatePersonUserRequest,
    CreatePersonUserRequestFromJSON,
    CreatePersonUserRequestFromJSONTyped,
    CreatePersonUserRequestToJSON,
} from './CreatePersonUserRequest';

/**
 * @type CreateUserRequest
 * 
 * @export
 */
export type CreateUserRequest = { userType: 'api_signer' } & CreateApiSignerUserRequest | { userType: 'api_user' } & CreateApiUserRequest | { userType: 'person' } & CreatePersonUserRequest;

export function CreateUserRequestFromJSON(json: any): CreateUserRequest {
    return CreateUserRequestFromJSONTyped(json, false);
}

export function CreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['user_type']) {
        case 'api_signer':
            return {...CreateApiSignerUserRequestFromJSONTyped(json, true), userType: 'api_signer'};
        case 'api_user':
            return {...CreateApiUserRequestFromJSONTyped(json, true), userType: 'api_user'};
        case 'person':
            return {...CreatePersonUserRequestFromJSONTyped(json, true), userType: 'person'};
        default:
            throw new Error(`No variant of CreateUserRequest exists with 'userType=${json['userType']}'`);
    }
}

export function CreateUserRequestToJSON(value?: CreateUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['userType']) {
        case 'api_signer':
            return CreateApiSignerUserRequestToJSON(value);
        case 'api_user':
            return CreateApiUserRequestToJSON(value);
        case 'person':
            return CreatePersonUserRequestToJSON(value);
        default:
            throw new Error(`No variant of CreateUserRequest exists with 'userType=${value['userType']}'`);
    }

}

