/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchnorrSecp256k1BlackBoxValue
 */
export interface SchnorrSecp256k1BlackBoxValue {
    /**
     * 
     * @type {string}
     * @memberof SchnorrSecp256k1BlackBoxValue
     */
    type: SchnorrSecp256k1BlackBoxValueTypeEnum;
}


/**
 * @export
 */
export const SchnorrSecp256k1BlackBoxValueTypeEnum = {
    schnorrSecp256k1: 'schnorr_secp256k1'
} as const;
export type SchnorrSecp256k1BlackBoxValueTypeEnum = typeof SchnorrSecp256k1BlackBoxValueTypeEnum[keyof typeof SchnorrSecp256k1BlackBoxValueTypeEnum];


/**
 * Check if a given object implements the SchnorrSecp256k1BlackBoxValue interface.
 */
export function instanceOfSchnorrSecp256k1BlackBoxValue(value: object): value is SchnorrSecp256k1BlackBoxValue {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function SchnorrSecp256k1BlackBoxValueFromJSON(json: any): SchnorrSecp256k1BlackBoxValue {
    return SchnorrSecp256k1BlackBoxValueFromJSONTyped(json, false);
}

export function SchnorrSecp256k1BlackBoxValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchnorrSecp256k1BlackBoxValue {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
    };
}

export function SchnorrSecp256k1BlackBoxValueToJSON(json: any): SchnorrSecp256k1BlackBoxValue {
    return SchnorrSecp256k1BlackBoxValueToJSONTyped(json, false);
}

export function SchnorrSecp256k1BlackBoxValueToJSONTyped(value?: SchnorrSecp256k1BlackBoxValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
    };
}

