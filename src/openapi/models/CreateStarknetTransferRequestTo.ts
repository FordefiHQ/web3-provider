/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    StarknetRecipientHex,
    instanceOfStarknetRecipientHex,
    StarknetRecipientHexFromJSON,
    StarknetRecipientHexFromJSONTyped,
    StarknetRecipientHexToJSON,
} from './StarknetRecipientHex';
import {
    StarknetRecipientVaultId,
    instanceOfStarknetRecipientVaultId,
    StarknetRecipientVaultIdFromJSON,
    StarknetRecipientVaultIdFromJSONTyped,
    StarknetRecipientVaultIdToJSON,
} from './StarknetRecipientVaultId';

/**
 * @type CreateStarknetTransferRequestTo
 * 
 * @export
 */
export type CreateStarknetTransferRequestTo = { type: 'hex' } & StarknetRecipientHex | { type: 'vault_id' } & StarknetRecipientVaultId;

export function CreateStarknetTransferRequestToFromJSON(json: any): CreateStarknetTransferRequestTo {
    return CreateStarknetTransferRequestToFromJSONTyped(json, false);
}

export function CreateStarknetTransferRequestToFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateStarknetTransferRequestTo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'hex':
            return {...StarknetRecipientHexFromJSONTyped(json, true), type: 'hex'};
        case 'vault_id':
            return {...StarknetRecipientVaultIdFromJSONTyped(json, true), type: 'vault_id'};
        default:
            throw new Error(`No variant of CreateStarknetTransferRequestTo exists with 'type=${json['type']}'`);
    }
}

export function CreateStarknetTransferRequestToToJSON(value?: CreateStarknetTransferRequestTo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'hex':
            return StarknetRecipientHexToJSON(value);
        case 'vault_id':
            return StarknetRecipientVaultIdToJSON(value);
        default:
            throw new Error(`No variant of CreateStarknetTransferRequestTo exists with 'type=${value['type']}'`);
    }

}

