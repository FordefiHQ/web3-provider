/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AptosTransferEffectType } from './AptosTransferEffectType';
import {
    AptosTransferEffectTypeFromJSON,
    AptosTransferEffectTypeFromJSONTyped,
    AptosTransferEffectTypeToJSON,
} from './AptosTransferEffectType';
import type { EnrichedAptosAddress } from './EnrichedAptosAddress';
import {
    EnrichedAptosAddressFromJSON,
    EnrichedAptosAddressFromJSONTyped,
    EnrichedAptosAddressToJSON,
} from './EnrichedAptosAddress';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
} from './PricedAsset';

/**
 * 
 * @export
 * @interface AptosTransferEffect
 */
export interface AptosTransferEffect {
    /**
     * 
     * @type {PricedAsset}
     * @memberof AptosTransferEffect
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof AptosTransferEffect
     */
    amount: string;
    /**
     * 
     * @type {AptosTransferEffectType}
     * @memberof AptosTransferEffect
     */
    type: AptosTransferEffectType;
    /**
     * 
     * @type {EnrichedAptosAddress}
     * @memberof AptosTransferEffect
     */
    from: EnrichedAptosAddress;
    /**
     * 
     * @type {EnrichedAptosAddress}
     * @memberof AptosTransferEffect
     */
    to: EnrichedAptosAddress;
}

/**
 * Check if a given object implements the AptosTransferEffect interface.
 */
export function instanceOfAptosTransferEffect(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pricedAsset" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "from" in value;
    isInstance = isInstance && "to" in value;

    return isInstance;
}

export function AptosTransferEffectFromJSON(json: any): AptosTransferEffect {
    return AptosTransferEffectFromJSONTyped(json, false);
}

export function AptosTransferEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): AptosTransferEffect {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'amount': json['amount'],
        'type': AptosTransferEffectTypeFromJSON(json['type']),
        'from': EnrichedAptosAddressFromJSON(json['from']),
        'to': EnrichedAptosAddressFromJSON(json['to']),
    };
}

export function AptosTransferEffectToJSON(value?: AptosTransferEffect | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'priced_asset': PricedAssetToJSON(value.pricedAsset),
        'amount': value.amount,
        'type': AptosTransferEffectTypeToJSON(value.type),
        'from': EnrichedAptosAddressToJSON(value.from),
        'to': EnrichedAptosAddressToJSON(value.to),
    };
}

