/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SuiCommandArgument } from './SuiCommandArgument';
import {
    SuiCommandArgumentFromJSON,
    SuiCommandArgumentFromJSONTyped,
    SuiCommandArgumentToJSON,
    SuiCommandArgumentToJSONTyped,
} from './SuiCommandArgument';

/**
 * 
 * @export
 * @interface SuiMakeMoveVecCommand
 */
export interface SuiMakeMoveVecCommand {
    /**
     * 
     * @type {string}
     * @memberof SuiMakeMoveVecCommand
     */
    type: SuiMakeMoveVecCommandTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SuiMakeMoveVecCommand
     */
    typeTag?: string;
    /**
     * 
     * @type {Array<SuiCommandArgument>}
     * @memberof SuiMakeMoveVecCommand
     */
    objects: Array<SuiCommandArgument>;
}


/**
 * @export
 */
export const SuiMakeMoveVecCommandTypeEnum = {
    makeMoveVec: 'make_move_vec'
} as const;
export type SuiMakeMoveVecCommandTypeEnum = typeof SuiMakeMoveVecCommandTypeEnum[keyof typeof SuiMakeMoveVecCommandTypeEnum];


/**
 * Check if a given object implements the SuiMakeMoveVecCommand interface.
 */
export function instanceOfSuiMakeMoveVecCommand(value: object): value is SuiMakeMoveVecCommand {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('objects' in value) || value['objects'] === undefined) return false;
    return true;
}

export function SuiMakeMoveVecCommandFromJSON(json: any): SuiMakeMoveVecCommand {
    return SuiMakeMoveVecCommandFromJSONTyped(json, false);
}

export function SuiMakeMoveVecCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuiMakeMoveVecCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'typeTag': json['type_tag'] == null ? undefined : json['type_tag'],
        'objects': ((json['objects'] as Array<any>).map(SuiCommandArgumentFromJSON)),
    };
}

export function SuiMakeMoveVecCommandToJSON(json: any): SuiMakeMoveVecCommand {
    return SuiMakeMoveVecCommandToJSONTyped(json, false);
}

export function SuiMakeMoveVecCommandToJSONTyped(value?: SuiMakeMoveVecCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'type_tag': value['typeTag'],
        'objects': ((value['objects'] as Array<any>).map(SuiCommandArgumentToJSON)),
    };
}

