/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { WebhookAptosMessageStatusChangeEvent } from './WebhookAptosMessageStatusChangeEvent';
import {
    instanceOfWebhookAptosMessageStatusChangeEvent,
    WebhookAptosMessageStatusChangeEventFromJSON,
    WebhookAptosMessageStatusChangeEventFromJSONTyped,
    WebhookAptosMessageStatusChangeEventToJSON,
} from './WebhookAptosMessageStatusChangeEvent';
import type { WebhookAptosTransactionStatusChangeEvent } from './WebhookAptosTransactionStatusChangeEvent';
import {
    instanceOfWebhookAptosTransactionStatusChangeEvent,
    WebhookAptosTransactionStatusChangeEventFromJSON,
    WebhookAptosTransactionStatusChangeEventFromJSONTyped,
    WebhookAptosTransactionStatusChangeEventToJSON,
} from './WebhookAptosTransactionStatusChangeEvent';
import type { WebhookBlackBoxSignatureStatusChangeEvent } from './WebhookBlackBoxSignatureStatusChangeEvent';
import {
    instanceOfWebhookBlackBoxSignatureStatusChangeEvent,
    WebhookBlackBoxSignatureStatusChangeEventFromJSON,
    WebhookBlackBoxSignatureStatusChangeEventFromJSONTyped,
    WebhookBlackBoxSignatureStatusChangeEventToJSON,
} from './WebhookBlackBoxSignatureStatusChangeEvent';
import type { WebhookCosmosMessageStatusChangeEvent } from './WebhookCosmosMessageStatusChangeEvent';
import {
    instanceOfWebhookCosmosMessageStatusChangeEvent,
    WebhookCosmosMessageStatusChangeEventFromJSON,
    WebhookCosmosMessageStatusChangeEventFromJSONTyped,
    WebhookCosmosMessageStatusChangeEventToJSON,
} from './WebhookCosmosMessageStatusChangeEvent';
import type { WebhookCosmosTransactionStatusChangeEvent } from './WebhookCosmosTransactionStatusChangeEvent';
import {
    instanceOfWebhookCosmosTransactionStatusChangeEvent,
    WebhookCosmosTransactionStatusChangeEventFromJSON,
    WebhookCosmosTransactionStatusChangeEventFromJSONTyped,
    WebhookCosmosTransactionStatusChangeEventToJSON,
} from './WebhookCosmosTransactionStatusChangeEvent';
import type { WebhookEvmMessageStatusChangeEvent } from './WebhookEvmMessageStatusChangeEvent';
import {
    instanceOfWebhookEvmMessageStatusChangeEvent,
    WebhookEvmMessageStatusChangeEventFromJSON,
    WebhookEvmMessageStatusChangeEventFromJSONTyped,
    WebhookEvmMessageStatusChangeEventToJSON,
} from './WebhookEvmMessageStatusChangeEvent';
import type { WebhookEvmTransactionStatusChangeEvent } from './WebhookEvmTransactionStatusChangeEvent';
import {
    instanceOfWebhookEvmTransactionStatusChangeEvent,
    WebhookEvmTransactionStatusChangeEventFromJSON,
    WebhookEvmTransactionStatusChangeEventFromJSONTyped,
    WebhookEvmTransactionStatusChangeEventToJSON,
} from './WebhookEvmTransactionStatusChangeEvent';
import type { WebhookExchangeTransactionStatusChangeEvent } from './WebhookExchangeTransactionStatusChangeEvent';
import {
    instanceOfWebhookExchangeTransactionStatusChangeEvent,
    WebhookExchangeTransactionStatusChangeEventFromJSON,
    WebhookExchangeTransactionStatusChangeEventFromJSONTyped,
    WebhookExchangeTransactionStatusChangeEventToJSON,
} from './WebhookExchangeTransactionStatusChangeEvent';
import type { WebhookSolanaMessageStatusChangeEvent } from './WebhookSolanaMessageStatusChangeEvent';
import {
    instanceOfWebhookSolanaMessageStatusChangeEvent,
    WebhookSolanaMessageStatusChangeEventFromJSON,
    WebhookSolanaMessageStatusChangeEventFromJSONTyped,
    WebhookSolanaMessageStatusChangeEventToJSON,
} from './WebhookSolanaMessageStatusChangeEvent';
import type { WebhookSolanaTransactionStatusChangeEvent } from './WebhookSolanaTransactionStatusChangeEvent';
import {
    instanceOfWebhookSolanaTransactionStatusChangeEvent,
    WebhookSolanaTransactionStatusChangeEventFromJSON,
    WebhookSolanaTransactionStatusChangeEventFromJSONTyped,
    WebhookSolanaTransactionStatusChangeEventToJSON,
} from './WebhookSolanaTransactionStatusChangeEvent';
import type { WebhookStacksTransactionStatusChangeEvent } from './WebhookStacksTransactionStatusChangeEvent';
import {
    instanceOfWebhookStacksTransactionStatusChangeEvent,
    WebhookStacksTransactionStatusChangeEventFromJSON,
    WebhookStacksTransactionStatusChangeEventFromJSONTyped,
    WebhookStacksTransactionStatusChangeEventToJSON,
} from './WebhookStacksTransactionStatusChangeEvent';
import type { WebhookStarknetMessageStatusChangeEvent } from './WebhookStarknetMessageStatusChangeEvent';
import {
    instanceOfWebhookStarknetMessageStatusChangeEvent,
    WebhookStarknetMessageStatusChangeEventFromJSON,
    WebhookStarknetMessageStatusChangeEventFromJSONTyped,
    WebhookStarknetMessageStatusChangeEventToJSON,
} from './WebhookStarknetMessageStatusChangeEvent';
import type { WebhookStarknetTransactionStatusChangeEvent } from './WebhookStarknetTransactionStatusChangeEvent';
import {
    instanceOfWebhookStarknetTransactionStatusChangeEvent,
    WebhookStarknetTransactionStatusChangeEventFromJSON,
    WebhookStarknetTransactionStatusChangeEventFromJSONTyped,
    WebhookStarknetTransactionStatusChangeEventToJSON,
} from './WebhookStarknetTransactionStatusChangeEvent';
import type { WebhookSuiMessageStatusChangeEvent } from './WebhookSuiMessageStatusChangeEvent';
import {
    instanceOfWebhookSuiMessageStatusChangeEvent,
    WebhookSuiMessageStatusChangeEventFromJSON,
    WebhookSuiMessageStatusChangeEventFromJSONTyped,
    WebhookSuiMessageStatusChangeEventToJSON,
} from './WebhookSuiMessageStatusChangeEvent';
import type { WebhookSuiTransactionStatusChangeEvent } from './WebhookSuiTransactionStatusChangeEvent';
import {
    instanceOfWebhookSuiTransactionStatusChangeEvent,
    WebhookSuiTransactionStatusChangeEventFromJSON,
    WebhookSuiTransactionStatusChangeEventFromJSONTyped,
    WebhookSuiTransactionStatusChangeEventToJSON,
} from './WebhookSuiTransactionStatusChangeEvent';
import type { WebhookTonMessageStatusChangeEvent } from './WebhookTonMessageStatusChangeEvent';
import {
    instanceOfWebhookTonMessageStatusChangeEvent,
    WebhookTonMessageStatusChangeEventFromJSON,
    WebhookTonMessageStatusChangeEventFromJSONTyped,
    WebhookTonMessageStatusChangeEventToJSON,
} from './WebhookTonMessageStatusChangeEvent';
import type { WebhookTonTransactionStatusChangeEvent } from './WebhookTonTransactionStatusChangeEvent';
import {
    instanceOfWebhookTonTransactionStatusChangeEvent,
    WebhookTonTransactionStatusChangeEventFromJSON,
    WebhookTonTransactionStatusChangeEventFromJSONTyped,
    WebhookTonTransactionStatusChangeEventToJSON,
} from './WebhookTonTransactionStatusChangeEvent';
import type { WebhookTronTransactionStatusChangeEvent } from './WebhookTronTransactionStatusChangeEvent';
import {
    instanceOfWebhookTronTransactionStatusChangeEvent,
    WebhookTronTransactionStatusChangeEventFromJSON,
    WebhookTronTransactionStatusChangeEventFromJSONTyped,
    WebhookTronTransactionStatusChangeEventToJSON,
} from './WebhookTronTransactionStatusChangeEvent';
import type { WebhookUtxoMessageStatusChangeEvent } from './WebhookUtxoMessageStatusChangeEvent';
import {
    instanceOfWebhookUtxoMessageStatusChangeEvent,
    WebhookUtxoMessageStatusChangeEventFromJSON,
    WebhookUtxoMessageStatusChangeEventFromJSONTyped,
    WebhookUtxoMessageStatusChangeEventToJSON,
} from './WebhookUtxoMessageStatusChangeEvent';
import type { WebhookUtxoTransactionStatusChangeEvent } from './WebhookUtxoTransactionStatusChangeEvent';
import {
    instanceOfWebhookUtxoTransactionStatusChangeEvent,
    WebhookUtxoTransactionStatusChangeEventFromJSON,
    WebhookUtxoTransactionStatusChangeEventFromJSONTyped,
    WebhookUtxoTransactionStatusChangeEventToJSON,
} from './WebhookUtxoTransactionStatusChangeEvent';

/**
 * @type WebhookTransactionStatusChangeEventEvent
 * 
 * @export
 */
export type WebhookTransactionStatusChangeEventEvent = { type: 'aptos_message' } & WebhookAptosMessageStatusChangeEvent | { type: 'aptos_transaction' } & WebhookAptosTransactionStatusChangeEvent | { type: 'black_box_signature' } & WebhookBlackBoxSignatureStatusChangeEvent | { type: 'cosmos_message' } & WebhookCosmosMessageStatusChangeEvent | { type: 'cosmos_transaction' } & WebhookCosmosTransactionStatusChangeEvent | { type: 'evm_message' } & WebhookEvmMessageStatusChangeEvent | { type: 'evm_transaction' } & WebhookEvmTransactionStatusChangeEvent | { type: 'exchange_transaction' } & WebhookExchangeTransactionStatusChangeEvent | { type: 'solana_message' } & WebhookSolanaMessageStatusChangeEvent | { type: 'solana_transaction' } & WebhookSolanaTransactionStatusChangeEvent | { type: 'stacks_transaction' } & WebhookStacksTransactionStatusChangeEvent | { type: 'starknet_message' } & WebhookStarknetMessageStatusChangeEvent | { type: 'starknet_transaction' } & WebhookStarknetTransactionStatusChangeEvent | { type: 'sui_message' } & WebhookSuiMessageStatusChangeEvent | { type: 'sui_transaction' } & WebhookSuiTransactionStatusChangeEvent | { type: 'ton_message' } & WebhookTonMessageStatusChangeEvent | { type: 'ton_transaction' } & WebhookTonTransactionStatusChangeEvent | { type: 'tron_transaction' } & WebhookTronTransactionStatusChangeEvent | { type: 'utxo_message' } & WebhookUtxoMessageStatusChangeEvent | { type: 'utxo_transaction' } & WebhookUtxoTransactionStatusChangeEvent;

export function WebhookTransactionStatusChangeEventEventFromJSON(json: any): WebhookTransactionStatusChangeEventEvent {
    return WebhookTransactionStatusChangeEventEventFromJSONTyped(json, false);
}

export function WebhookTransactionStatusChangeEventEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookTransactionStatusChangeEventEvent {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'aptos_message':
            return Object.assign({}, WebhookAptosMessageStatusChangeEventFromJSONTyped(json, true), { type: 'aptos_message' } as const);
        case 'aptos_transaction':
            return Object.assign({}, WebhookAptosTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'aptos_transaction' } as const);
        case 'black_box_signature':
            return Object.assign({}, WebhookBlackBoxSignatureStatusChangeEventFromJSONTyped(json, true), { type: 'black_box_signature' } as const);
        case 'cosmos_message':
            return Object.assign({}, WebhookCosmosMessageStatusChangeEventFromJSONTyped(json, true), { type: 'cosmos_message' } as const);
        case 'cosmos_transaction':
            return Object.assign({}, WebhookCosmosTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'cosmos_transaction' } as const);
        case 'evm_message':
            return Object.assign({}, WebhookEvmMessageStatusChangeEventFromJSONTyped(json, true), { type: 'evm_message' } as const);
        case 'evm_transaction':
            return Object.assign({}, WebhookEvmTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'evm_transaction' } as const);
        case 'exchange_transaction':
            return Object.assign({}, WebhookExchangeTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'exchange_transaction' } as const);
        case 'solana_message':
            return Object.assign({}, WebhookSolanaMessageStatusChangeEventFromJSONTyped(json, true), { type: 'solana_message' } as const);
        case 'solana_transaction':
            return Object.assign({}, WebhookSolanaTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'solana_transaction' } as const);
        case 'stacks_transaction':
            return Object.assign({}, WebhookStacksTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'stacks_transaction' } as const);
        case 'starknet_message':
            return Object.assign({}, WebhookStarknetMessageStatusChangeEventFromJSONTyped(json, true), { type: 'starknet_message' } as const);
        case 'starknet_transaction':
            return Object.assign({}, WebhookStarknetTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'starknet_transaction' } as const);
        case 'sui_message':
            return Object.assign({}, WebhookSuiMessageStatusChangeEventFromJSONTyped(json, true), { type: 'sui_message' } as const);
        case 'sui_transaction':
            return Object.assign({}, WebhookSuiTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'sui_transaction' } as const);
        case 'ton_message':
            return Object.assign({}, WebhookTonMessageStatusChangeEventFromJSONTyped(json, true), { type: 'ton_message' } as const);
        case 'ton_transaction':
            return Object.assign({}, WebhookTonTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'ton_transaction' } as const);
        case 'tron_transaction':
            return Object.assign({}, WebhookTronTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'tron_transaction' } as const);
        case 'utxo_message':
            return Object.assign({}, WebhookUtxoMessageStatusChangeEventFromJSONTyped(json, true), { type: 'utxo_message' } as const);
        case 'utxo_transaction':
            return Object.assign({}, WebhookUtxoTransactionStatusChangeEventFromJSONTyped(json, true), { type: 'utxo_transaction' } as const);
        default:
            throw new Error(`No variant of WebhookTransactionStatusChangeEventEvent exists with 'type=${json['type']}'`);
    }
}

export function WebhookTransactionStatusChangeEventEventToJSON(json: any): any {
    return WebhookTransactionStatusChangeEventEventToJSONTyped(json, false);
}

export function WebhookTransactionStatusChangeEventEventToJSONTyped(value?: WebhookTransactionStatusChangeEventEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'aptos_message':
            return Object.assign({}, WebhookAptosMessageStatusChangeEventToJSON(value), { type: 'aptos_message' } as const);
        case 'aptos_transaction':
            return Object.assign({}, WebhookAptosTransactionStatusChangeEventToJSON(value), { type: 'aptos_transaction' } as const);
        case 'black_box_signature':
            return Object.assign({}, WebhookBlackBoxSignatureStatusChangeEventToJSON(value), { type: 'black_box_signature' } as const);
        case 'cosmos_message':
            return Object.assign({}, WebhookCosmosMessageStatusChangeEventToJSON(value), { type: 'cosmos_message' } as const);
        case 'cosmos_transaction':
            return Object.assign({}, WebhookCosmosTransactionStatusChangeEventToJSON(value), { type: 'cosmos_transaction' } as const);
        case 'evm_message':
            return Object.assign({}, WebhookEvmMessageStatusChangeEventToJSON(value), { type: 'evm_message' } as const);
        case 'evm_transaction':
            return Object.assign({}, WebhookEvmTransactionStatusChangeEventToJSON(value), { type: 'evm_transaction' } as const);
        case 'exchange_transaction':
            return Object.assign({}, WebhookExchangeTransactionStatusChangeEventToJSON(value), { type: 'exchange_transaction' } as const);
        case 'solana_message':
            return Object.assign({}, WebhookSolanaMessageStatusChangeEventToJSON(value), { type: 'solana_message' } as const);
        case 'solana_transaction':
            return Object.assign({}, WebhookSolanaTransactionStatusChangeEventToJSON(value), { type: 'solana_transaction' } as const);
        case 'stacks_transaction':
            return Object.assign({}, WebhookStacksTransactionStatusChangeEventToJSON(value), { type: 'stacks_transaction' } as const);
        case 'starknet_message':
            return Object.assign({}, WebhookStarknetMessageStatusChangeEventToJSON(value), { type: 'starknet_message' } as const);
        case 'starknet_transaction':
            return Object.assign({}, WebhookStarknetTransactionStatusChangeEventToJSON(value), { type: 'starknet_transaction' } as const);
        case 'sui_message':
            return Object.assign({}, WebhookSuiMessageStatusChangeEventToJSON(value), { type: 'sui_message' } as const);
        case 'sui_transaction':
            return Object.assign({}, WebhookSuiTransactionStatusChangeEventToJSON(value), { type: 'sui_transaction' } as const);
        case 'ton_message':
            return Object.assign({}, WebhookTonMessageStatusChangeEventToJSON(value), { type: 'ton_message' } as const);
        case 'ton_transaction':
            return Object.assign({}, WebhookTonTransactionStatusChangeEventToJSON(value), { type: 'ton_transaction' } as const);
        case 'tron_transaction':
            return Object.assign({}, WebhookTronTransactionStatusChangeEventToJSON(value), { type: 'tron_transaction' } as const);
        case 'utxo_message':
            return Object.assign({}, WebhookUtxoMessageStatusChangeEventToJSON(value), { type: 'utxo_message' } as const);
        case 'utxo_transaction':
            return Object.assign({}, WebhookUtxoTransactionStatusChangeEventToJSON(value), { type: 'utxo_transaction' } as const);
        default:
            throw new Error(`No variant of WebhookTransactionStatusChangeEventEvent exists with 'type=${value['type']}'`);
    }

}

