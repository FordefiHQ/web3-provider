/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SolanaCustomFeeRequest } from './SolanaCustomFeeRequest';
import {
    instanceOfSolanaCustomFeeRequest,
    SolanaCustomFeeRequestFromJSON,
    SolanaCustomFeeRequestFromJSONTyped,
    SolanaCustomFeeRequestToJSON,
} from './SolanaCustomFeeRequest';
import type { SolanaPriorityFeeRequest } from './SolanaPriorityFeeRequest';
import {
    instanceOfSolanaPriorityFeeRequest,
    SolanaPriorityFeeRequestFromJSON,
    SolanaPriorityFeeRequestFromJSONTyped,
    SolanaPriorityFeeRequestToJSON,
} from './SolanaPriorityFeeRequest';

/**
 * @type BatchSolanaTransactionRequestDetailsFee
 * 
 * @export
 */
export type BatchSolanaTransactionRequestDetailsFee = { type: 'custom' } & SolanaCustomFeeRequest | { type: 'priority' } & SolanaPriorityFeeRequest;

export function BatchSolanaTransactionRequestDetailsFeeFromJSON(json: any): BatchSolanaTransactionRequestDetailsFee {
    return BatchSolanaTransactionRequestDetailsFeeFromJSONTyped(json, false);
}

export function BatchSolanaTransactionRequestDetailsFeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BatchSolanaTransactionRequestDetailsFee {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'custom':
            return Object.assign({}, SolanaCustomFeeRequestFromJSONTyped(json, true), { type: 'custom' } as const);
        case 'priority':
            return Object.assign({}, SolanaPriorityFeeRequestFromJSONTyped(json, true), { type: 'priority' } as const);
        default:
            throw new Error(`No variant of BatchSolanaTransactionRequestDetailsFee exists with 'type=${json['type']}'`);
    }
}

export function BatchSolanaTransactionRequestDetailsFeeToJSON(json: any): any {
    return BatchSolanaTransactionRequestDetailsFeeToJSONTyped(json, false);
}

export function BatchSolanaTransactionRequestDetailsFeeToJSONTyped(value?: BatchSolanaTransactionRequestDetailsFee | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'custom':
            return Object.assign({}, SolanaCustomFeeRequestToJSON(value), { type: 'custom' } as const);
        case 'priority':
            return Object.assign({}, SolanaPriorityFeeRequestToJSON(value), { type: 'priority' } as const);
        default:
            throw new Error(`No variant of BatchSolanaTransactionRequestDetailsFee exists with 'type=${value['type']}'`);
    }

}

