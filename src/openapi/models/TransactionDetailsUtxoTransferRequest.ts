/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UtxoOutputRequest } from './UtxoOutputRequest';
import {
    UtxoOutputRequestFromJSON,
    UtxoOutputRequestFromJSONTyped,
    UtxoOutputRequestToJSON,
    UtxoOutputRequestToJSONTyped,
} from './UtxoOutputRequest';
import type { PushMode } from './PushMode';
import {
    PushModeFromJSON,
    PushModeFromJSONTyped,
    PushModeToJSON,
    PushModeToJSONTyped,
} from './PushMode';
import type { TransactionDetailsUtxoTransferRequestFeePerByte } from './TransactionDetailsUtxoTransferRequestFeePerByte';
import {
    TransactionDetailsUtxoTransferRequestFeePerByteFromJSON,
    TransactionDetailsUtxoTransferRequestFeePerByteFromJSONTyped,
    TransactionDetailsUtxoTransferRequestFeePerByteToJSON,
    TransactionDetailsUtxoTransferRequestFeePerByteToJSONTyped,
} from './TransactionDetailsUtxoTransferRequestFeePerByte';

/**
 * 
 * @export
 * @interface TransactionDetailsUtxoTransferRequest
 */
export interface TransactionDetailsUtxoTransferRequest {
    /**
     * 
     * @type {string}
     * @memberof TransactionDetailsUtxoTransferRequest
     */
    type: TransactionDetailsUtxoTransferRequestTypeEnum;
    /**
     * 
     * @type {Array<UtxoOutputRequest>}
     * @memberof TransactionDetailsUtxoTransferRequest
     */
    outputs: Array<UtxoOutputRequest>;
    /**
     * 
     * @type {TransactionDetailsUtxoTransferRequestFeePerByte}
     * @memberof TransactionDetailsUtxoTransferRequest
     */
    feePerByte?: TransactionDetailsUtxoTransferRequestFeePerByte;
    /**
     * 
     * @type {PushMode}
     * @memberof TransactionDetailsUtxoTransferRequest
     */
    pushMode?: PushMode;
    /**
     * 
     * @type {Array<string>}
     * @memberof TransactionDetailsUtxoTransferRequest
     */
    memos?: Array<string>;
}


/**
 * @export
 */
export const TransactionDetailsUtxoTransferRequestTypeEnum = {
    utxoTransfer: 'utxo_transfer'
} as const;
export type TransactionDetailsUtxoTransferRequestTypeEnum = typeof TransactionDetailsUtxoTransferRequestTypeEnum[keyof typeof TransactionDetailsUtxoTransferRequestTypeEnum];


/**
 * Check if a given object implements the TransactionDetailsUtxoTransferRequest interface.
 */
export function instanceOfTransactionDetailsUtxoTransferRequest(value: object): value is TransactionDetailsUtxoTransferRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('outputs' in value) || value['outputs'] === undefined) return false;
    return true;
}

export function TransactionDetailsUtxoTransferRequestFromJSON(json: any): TransactionDetailsUtxoTransferRequest {
    return TransactionDetailsUtxoTransferRequestFromJSONTyped(json, false);
}

export function TransactionDetailsUtxoTransferRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionDetailsUtxoTransferRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'outputs': ((json['outputs'] as Array<any>).map(UtxoOutputRequestFromJSON)),
        'feePerByte': json['fee_per_byte'] == null ? undefined : TransactionDetailsUtxoTransferRequestFeePerByteFromJSON(json['fee_per_byte']),
        'pushMode': json['push_mode'] == null ? undefined : PushModeFromJSON(json['push_mode']),
        'memos': json['memos'] == null ? undefined : json['memos'],
    };
}

export function TransactionDetailsUtxoTransferRequestToJSON(json: any): TransactionDetailsUtxoTransferRequest {
    return TransactionDetailsUtxoTransferRequestToJSONTyped(json, false);
}

export function TransactionDetailsUtxoTransferRequestToJSONTyped(value?: TransactionDetailsUtxoTransferRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'outputs': ((value['outputs'] as Array<any>).map(UtxoOutputRequestToJSON)),
        'fee_per_byte': TransactionDetailsUtxoTransferRequestFeePerByteToJSON(value['feePerByte']),
        'push_mode': PushModeToJSON(value['pushMode']),
        'memos': value['memos'],
    };
}

