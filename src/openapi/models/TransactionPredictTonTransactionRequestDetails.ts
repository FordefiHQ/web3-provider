/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { PredictTonSerializedRawTransactionRequest } from './PredictTonSerializedRawTransactionRequest';
import {
    instanceOfPredictTonSerializedRawTransactionRequest,
    PredictTonSerializedRawTransactionRequestFromJSON,
    PredictTonSerializedRawTransactionRequestFromJSONTyped,
    PredictTonSerializedRawTransactionRequestToJSON,
} from './PredictTonSerializedRawTransactionRequest';
import type { PredictTonTransferRequest } from './PredictTonTransferRequest';
import {
    instanceOfPredictTonTransferRequest,
    PredictTonTransferRequestFromJSON,
    PredictTonTransferRequestFromJSONTyped,
    PredictTonTransferRequestToJSON,
} from './PredictTonTransferRequest';

/**
 * @type TransactionPredictTonTransactionRequestDetails
 * 
 * @export
 */
export type TransactionPredictTonTransactionRequestDetails = { type: 'ton_raw_transaction' } & PredictTonSerializedRawTransactionRequest | { type: 'ton_transfer' } & PredictTonTransferRequest;

export function TransactionPredictTonTransactionRequestDetailsFromJSON(json: any): TransactionPredictTonTransactionRequestDetails {
    return TransactionPredictTonTransactionRequestDetailsFromJSONTyped(json, false);
}

export function TransactionPredictTonTransactionRequestDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionPredictTonTransactionRequestDetails {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'ton_raw_transaction':
            return Object.assign({}, PredictTonSerializedRawTransactionRequestFromJSONTyped(json, true), { type: 'ton_raw_transaction' } as const);
        case 'ton_transfer':
            return Object.assign({}, PredictTonTransferRequestFromJSONTyped(json, true), { type: 'ton_transfer' } as const);
        default:
            throw new Error(`No variant of TransactionPredictTonTransactionRequestDetails exists with 'type=${json['type']}'`);
    }
}

export function TransactionPredictTonTransactionRequestDetailsToJSON(json: any): any {
    return TransactionPredictTonTransactionRequestDetailsToJSONTyped(json, false);
}

export function TransactionPredictTonTransactionRequestDetailsToJSONTyped(value?: TransactionPredictTonTransactionRequestDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'ton_raw_transaction':
            return Object.assign({}, PredictTonSerializedRawTransactionRequestToJSON(value), { type: 'ton_raw_transaction' } as const);
        case 'ton_transfer':
            return Object.assign({}, PredictTonTransferRequestToJSON(value), { type: 'ton_transfer' } as const);
        default:
            throw new Error(`No variant of TransactionPredictTonTransactionRequestDetails exists with 'type=${value['type']}'`);
    }

}

