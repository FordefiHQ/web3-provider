/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VaultRef } from './VaultRef';
import {
    VaultRefFromJSON,
    VaultRefFromJSONTyped,
    VaultRefToJSON,
    VaultRefToJSONTyped,
} from './VaultRef';
import type { ContactRef } from './ContactRef';
import {
    ContactRefFromJSON,
    ContactRefFromJSONTyped,
    ContactRefToJSON,
    ContactRefToJSONTyped,
} from './ContactRef';

/**
 * 
 * @export
 * @interface EnrichedTonAddress
 */
export interface EnrichedTonAddress {
    /**
     * 
     * @type {VaultRef}
     * @memberof EnrichedTonAddress
     */
    vault?: VaultRef;
    /**
     * 
     * @type {string}
     * @memberof EnrichedTonAddress
     */
    explorerUrl?: string;
    /**
     * 
     * @type {ContactRef}
     * @memberof EnrichedTonAddress
     */
    contact?: ContactRef;
    /**
     * 
     * @type {string}
     * @memberof EnrichedTonAddress
     */
    type: EnrichedTonAddressTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EnrichedTonAddress
     */
    rawAccount: string;
    /**
     * 
     * @type {string}
     * @memberof EnrichedTonAddress
     */
    base64UrlBounceableAccount: string;
    /**
     * 
     * @type {string}
     * @memberof EnrichedTonAddress
     */
    base64UrlNonBounceableAccount: string;
    /**
     * 
     * @type {string}
     * @memberof EnrichedTonAddress
     */
    originalAccount: string;
}


/**
 * @export
 */
export const EnrichedTonAddressTypeEnum = {
    ton: 'ton'
} as const;
export type EnrichedTonAddressTypeEnum = typeof EnrichedTonAddressTypeEnum[keyof typeof EnrichedTonAddressTypeEnum];


/**
 * Check if a given object implements the EnrichedTonAddress interface.
 */
export function instanceOfEnrichedTonAddress(value: object): value is EnrichedTonAddress {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('rawAccount' in value) || value['rawAccount'] === undefined) return false;
    if (!('base64UrlBounceableAccount' in value) || value['base64UrlBounceableAccount'] === undefined) return false;
    if (!('base64UrlNonBounceableAccount' in value) || value['base64UrlNonBounceableAccount'] === undefined) return false;
    if (!('originalAccount' in value) || value['originalAccount'] === undefined) return false;
    return true;
}

export function EnrichedTonAddressFromJSON(json: any): EnrichedTonAddress {
    return EnrichedTonAddressFromJSONTyped(json, false);
}

export function EnrichedTonAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrichedTonAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'vault': json['vault'] == null ? undefined : VaultRefFromJSON(json['vault']),
        'explorerUrl': json['explorer_url'] == null ? undefined : json['explorer_url'],
        'contact': json['contact'] == null ? undefined : ContactRefFromJSON(json['contact']),
        'type': json['type'],
        'rawAccount': json['raw_account'],
        'base64UrlBounceableAccount': json['base64_url_bounceable_account'],
        'base64UrlNonBounceableAccount': json['base64_url_non_bounceable_account'],
        'originalAccount': json['original_account'],
    };
}

export function EnrichedTonAddressToJSON(json: any): EnrichedTonAddress {
    return EnrichedTonAddressToJSONTyped(json, false);
}

export function EnrichedTonAddressToJSONTyped(value?: EnrichedTonAddress | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'vault': VaultRefToJSON(value['vault']),
        'explorer_url': value['explorerUrl'],
        'contact': ContactRefToJSON(value['contact']),
        'type': value['type'],
        'raw_account': value['rawAccount'],
        'base64_url_bounceable_account': value['base64UrlBounceableAccount'],
        'base64_url_non_bounceable_account': value['base64UrlNonBounceableAccount'],
        'original_account': value['originalAccount'],
    };
}

