/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
    PricedAssetToJSONTyped,
} from './PricedAsset';
import type { Erc20 } from './Erc20';
import {
    Erc20FromJSON,
    Erc20FromJSONTyped,
    Erc20ToJSON,
    Erc20ToJSONTyped,
} from './Erc20';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';
import type { EnrichedEvmAddress } from './EnrichedEvmAddress';
import {
    EnrichedEvmAddressFromJSON,
    EnrichedEvmAddressFromJSONTyped,
    EnrichedEvmAddressToJSON,
    EnrichedEvmAddressToJSONTyped,
} from './EnrichedEvmAddress';

/**
 * 
 * @export
 * @interface EvmBridgeEffectSourceErc20
 */
export interface EvmBridgeEffectSourceErc20 {
    /**
     * 
     * @type {PricedAsset}
     * @memberof EvmBridgeEffectSourceErc20
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof EvmBridgeEffectSourceErc20
     */
    type: EvmBridgeEffectSourceErc20TypeEnum;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof EvmBridgeEffectSourceErc20
     */
    sourceAddress: EnrichedEvmAddress;
    /**
     * 
     * @type {Erc20}
     * @memberof EvmBridgeEffectSourceErc20
     */
    token: Erc20;
    /**
     * 
     * @type {Price}
     * @memberof EvmBridgeEffectSourceErc20
     */
    price?: Price;
}


/**
 * @export
 */
export const EvmBridgeEffectSourceErc20TypeEnum = {
    erc20: 'erc20'
} as const;
export type EvmBridgeEffectSourceErc20TypeEnum = typeof EvmBridgeEffectSourceErc20TypeEnum[keyof typeof EvmBridgeEffectSourceErc20TypeEnum];


/**
 * Check if a given object implements the EvmBridgeEffectSourceErc20 interface.
 */
export function instanceOfEvmBridgeEffectSourceErc20(value: object): value is EvmBridgeEffectSourceErc20 {
    if (!('pricedAsset' in value) || value['pricedAsset'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('sourceAddress' in value) || value['sourceAddress'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function EvmBridgeEffectSourceErc20FromJSON(json: any): EvmBridgeEffectSourceErc20 {
    return EvmBridgeEffectSourceErc20FromJSONTyped(json, false);
}

export function EvmBridgeEffectSourceErc20FromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmBridgeEffectSourceErc20 {
    if (json == null) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'type': json['type'],
        'sourceAddress': EnrichedEvmAddressFromJSON(json['source_address']),
        'token': Erc20FromJSON(json['token']),
        'price': json['price'] == null ? undefined : PriceFromJSON(json['price']),
    };
}

export function EvmBridgeEffectSourceErc20ToJSON(json: any): EvmBridgeEffectSourceErc20 {
    return EvmBridgeEffectSourceErc20ToJSONTyped(json, false);
}

export function EvmBridgeEffectSourceErc20ToJSONTyped(value?: EvmBridgeEffectSourceErc20 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'priced_asset': PricedAssetToJSON(value['pricedAsset']),
        'type': value['type'],
        'source_address': EnrichedEvmAddressToJSON(value['sourceAddress']),
        'token': Erc20ToJSON(value['token']),
        'price': PriceToJSON(value['price']),
    };
}

