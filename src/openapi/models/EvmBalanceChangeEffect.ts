/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PricedAsset } from './PricedAsset';
import {
    PricedAssetFromJSON,
    PricedAssetFromJSONTyped,
    PricedAssetToJSON,
    PricedAssetToJSONTyped,
} from './PricedAsset';
import type { EvmBalanceChangeEffectTokenContract } from './EvmBalanceChangeEffectTokenContract';
import {
    EvmBalanceChangeEffectTokenContractFromJSON,
    EvmBalanceChangeEffectTokenContractFromJSONTyped,
    EvmBalanceChangeEffectTokenContractToJSON,
    EvmBalanceChangeEffectTokenContractToJSONTyped,
} from './EvmBalanceChangeEffectTokenContract';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';
import type { EnrichedEvmAddress } from './EnrichedEvmAddress';
import {
    EnrichedEvmAddressFromJSON,
    EnrichedEvmAddressFromJSONTyped,
    EnrichedEvmAddressToJSON,
    EnrichedEvmAddressToJSONTyped,
} from './EnrichedEvmAddress';
import type { EvmBalanceChangeEffectType } from './EvmBalanceChangeEffectType';
import {
    EvmBalanceChangeEffectTypeFromJSON,
    EvmBalanceChangeEffectTypeFromJSONTyped,
    EvmBalanceChangeEffectTypeToJSON,
    EvmBalanceChangeEffectTypeToJSONTyped,
} from './EvmBalanceChangeEffectType';

/**
 * 
 * @export
 * @interface EvmBalanceChangeEffect
 */
export interface EvmBalanceChangeEffect {
    /**
     * 
     * @type {PricedAsset}
     * @memberof EvmBalanceChangeEffect
     */
    pricedAsset: PricedAsset;
    /**
     * 
     * @type {string}
     * @memberof EvmBalanceChangeEffect
     */
    diff: string;
    /**
     * 
     * @type {EvmBalanceChangeEffectType}
     * @memberof EvmBalanceChangeEffect
     */
    type: EvmBalanceChangeEffectType;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof EvmBalanceChangeEffect
     */
    address: EnrichedEvmAddress;
    /**
     * 
     * @type {EnrichedEvmAddress}
     * @memberof EvmBalanceChangeEffect
     */
    owner: EnrichedEvmAddress;
    /**
     * 
     * @type {Price}
     * @memberof EvmBalanceChangeEffect
     */
    price?: Price;
    /**
     * 
     * @type {EvmBalanceChangeEffectTokenContract}
     * @memberof EvmBalanceChangeEffect
     * @deprecated
     */
    tokenContract?: EvmBalanceChangeEffectTokenContract;
    /**
     * 
     * @type {string}
     * @memberof EvmBalanceChangeEffect
     * @deprecated
     */
    tokenId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof EvmBalanceChangeEffect
     * @deprecated
     */
    owned?: boolean;
}



/**
 * Check if a given object implements the EvmBalanceChangeEffect interface.
 */
export function instanceOfEvmBalanceChangeEffect(value: object): value is EvmBalanceChangeEffect {
    if (!('pricedAsset' in value) || value['pricedAsset'] === undefined) return false;
    if (!('diff' in value) || value['diff'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    return true;
}

export function EvmBalanceChangeEffectFromJSON(json: any): EvmBalanceChangeEffect {
    return EvmBalanceChangeEffectFromJSONTyped(json, false);
}

export function EvmBalanceChangeEffectFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmBalanceChangeEffect {
    if (json == null) {
        return json;
    }
    return {
        
        'pricedAsset': PricedAssetFromJSON(json['priced_asset']),
        'diff': json['diff'],
        'type': EvmBalanceChangeEffectTypeFromJSON(json['type']),
        'address': EnrichedEvmAddressFromJSON(json['address']),
        'owner': EnrichedEvmAddressFromJSON(json['owner']),
        'price': json['price'] == null ? undefined : PriceFromJSON(json['price']),
        'tokenContract': json['token_contract'] == null ? undefined : EvmBalanceChangeEffectTokenContractFromJSON(json['token_contract']),
        'tokenId': json['token_id'] == null ? undefined : json['token_id'],
        'owned': json['owned'] == null ? undefined : json['owned'],
    };
}

export function EvmBalanceChangeEffectToJSON(json: any): EvmBalanceChangeEffect {
    return EvmBalanceChangeEffectToJSONTyped(json, false);
}

export function EvmBalanceChangeEffectToJSONTyped(value?: EvmBalanceChangeEffect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'priced_asset': PricedAssetToJSON(value['pricedAsset']),
        'diff': value['diff'],
        'type': EvmBalanceChangeEffectTypeToJSON(value['type']),
        'address': EnrichedEvmAddressToJSON(value['address']),
        'owner': EnrichedEvmAddressToJSON(value['owner']),
        'price': PriceToJSON(value['price']),
        'token_contract': EvmBalanceChangeEffectTokenContractToJSON(value['tokenContract']),
        'token_id': value['tokenId'],
        'owned': value['owned'],
    };
}

