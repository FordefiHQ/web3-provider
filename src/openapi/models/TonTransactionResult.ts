/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TonEffects } from './TonEffects';
import {
    TonEffectsFromJSON,
    TonEffectsFromJSONTyped,
    TonEffectsToJSON,
    TonEffectsToJSONTyped,
} from './TonEffects';
import type { TonReversion } from './TonReversion';
import {
    TonReversionFromJSON,
    TonReversionFromJSONTyped,
    TonReversionToJSON,
    TonReversionToJSONTyped,
} from './TonReversion';
import type { TonAddressFee } from './TonAddressFee';
import {
    TonAddressFeeFromJSON,
    TonAddressFeeFromJSONTyped,
    TonAddressFeeToJSON,
    TonAddressFeeToJSONTyped,
} from './TonAddressFee';

/**
 * 
 * @export
 * @interface TonTransactionResult
 */
export interface TonTransactionResult {
    /**
     * 
     * @type {TonReversion}
     * @memberof TonTransactionResult
     */
    reversion: TonReversion;
    /**
     * 
     * @type {Array<TonAddressFee>}
     * @memberof TonTransactionResult
     */
    addressFees: Array<TonAddressFee>;
    /**
     * 
     * @type {TonEffects}
     * @memberof TonTransactionResult
     */
    effects: TonEffects;
}

/**
 * Check if a given object implements the TonTransactionResult interface.
 */
export function instanceOfTonTransactionResult(value: object): value is TonTransactionResult {
    if (!('reversion' in value) || value['reversion'] === undefined) return false;
    if (!('addressFees' in value) || value['addressFees'] === undefined) return false;
    if (!('effects' in value) || value['effects'] === undefined) return false;
    return true;
}

export function TonTransactionResultFromJSON(json: any): TonTransactionResult {
    return TonTransactionResultFromJSONTyped(json, false);
}

export function TonTransactionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TonTransactionResult {
    if (json == null) {
        return json;
    }
    return {
        
        'reversion': TonReversionFromJSON(json['reversion']),
        'addressFees': ((json['address_fees'] as Array<any>).map(TonAddressFeeFromJSON)),
        'effects': TonEffectsFromJSON(json['effects']),
    };
}

export function TonTransactionResultToJSON(json: any): TonTransactionResult {
    return TonTransactionResultToJSONTyped(json, false);
}

export function TonTransactionResultToJSONTyped(value?: TonTransactionResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reversion': TonReversionToJSON(value['reversion']),
        'address_fees': ((value['addressFees'] as Array<any>).map(TonAddressFeeToJSON)),
        'effects': TonEffectsToJSON(value['effects']),
    };
}

