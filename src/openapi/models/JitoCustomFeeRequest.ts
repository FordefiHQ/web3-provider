/* tslint:disable */
/* eslint-disable */
/**
 * Fordefi API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface JitoCustomFeeRequest
 */
export interface JitoCustomFeeRequest {
    /**
     * 
     * @type {string}
     * @memberof JitoCustomFeeRequest
     */
    type: JitoCustomFeeRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof JitoCustomFeeRequest
     */
    jitoTip: string;
}


/**
 * @export
 */
export const JitoCustomFeeRequestTypeEnum = {
    custom: 'custom'
} as const;
export type JitoCustomFeeRequestTypeEnum = typeof JitoCustomFeeRequestTypeEnum[keyof typeof JitoCustomFeeRequestTypeEnum];


/**
 * Check if a given object implements the JitoCustomFeeRequest interface.
 */
export function instanceOfJitoCustomFeeRequest(value: object): value is JitoCustomFeeRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('jitoTip' in value) || value['jitoTip'] === undefined) return false;
    return true;
}

export function JitoCustomFeeRequestFromJSON(json: any): JitoCustomFeeRequest {
    return JitoCustomFeeRequestFromJSONTyped(json, false);
}

export function JitoCustomFeeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): JitoCustomFeeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'jitoTip': json['jito_tip'],
    };
}

export function JitoCustomFeeRequestToJSON(json: any): JitoCustomFeeRequest {
    return JitoCustomFeeRequestToJSONTyped(json, false);
}

export function JitoCustomFeeRequestToJSONTyped(value?: JitoCustomFeeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'jito_tip': value['jitoTip'],
    };
}

